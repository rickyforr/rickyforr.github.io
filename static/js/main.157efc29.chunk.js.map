{"version":3,"sources":["features/goblin/goblin.png","features/player/walkSprite2.png","features/world/trumpet_zebra.png","features/world/geology.jpg","features/world/queens.png","features/world/lighthouse_diploma.jpg","data/map/1/index.js","components/modal/modal.component.jsx","features/goblin/goblin.component.jsx","features/player/player.reducer.js","features/map/map.reducer.js","features/goblin/goblin.reducer.js","store/store.js","features/goblin/goblin.container.js","features/goblin/goblin.actions.js","store/constants.js","features/map/map-tile.component.js","features/map/map.component.js","features/map/map.container.js","features/player/player.component.jsx","features/player/player.container.js","features/player/player.actions.js","features/world/world.component.js","features/world/world.container.js","features/world/world.actions.js","App.js","index.js"],"names":["module","exports","tiles","Modal","props","id","className","title","style","margin","text","src","image","maxHeight","maxWidth","Goblin","position","top","left","backgroundImage","walkSprite","backgroundPosition","spriteLocation","width","height","initialState","walkIndex","playerReducer","state","action","type","payload","mapReducer","goblinReducer","rootReducer","combineReducers","player","goblin","map","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","GoblinContainer","connect","getSpriteLocation","direction","getWalkIndex","getState","attemptMove","newPos","prevPos","getNewPosition","MAP_WIDTH","MAP_HEIGHT","observeBoundary","dispatch","dispatchMove","i","setInterval","handleMovement","getTileSprite","MapTile","value","Map","backgroundColor","border","row","key","tile","MapContainer","Player","PlayerContainer","console","log","y","x","observeGameObjects","addEventListener","e","keyCode","handleKeyDown","World","useState","showModal","setShowModal","useEffect","addTiles","onClose","trumpetImage","musicModalText","queensImage","universityModalText","geologyImage","geologyModalText","lighthouseImage","lighthouseLabsModalText","WorldContainer","App","ReactDOM","render","document","getElementById"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,gD,iNCM9BC,EAAQ,CACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,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","file":"static/js/main.157efc29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goblin.01811980.png\";","module.exports = __webpack_public_path__ + \"static/media/walkSprite2.b49dd378.png\";","module.exports = __webpack_public_path__ + \"static/media/trumpet_zebra.3ca94e5f.png\";","module.exports = __webpack_public_path__ + \"static/media/geology.241b0114.jpg\";","module.exports = __webpack_public_path__ + \"static/media/queens.bcdf7508.png\";","module.exports = __webpack_public_path__ + \"static/media/lighthouse_diploma.7018a664.jpg\";","/**\n * The tile matrix with each number representing an oject in the game.\n * 0 = grass,\n * 5 = rock,\n * 6 = tree\n */\nexport const tiles = [\n  [0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 6, 0, 5, 5, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0],\n  [0, 6, 6, 0, 0, 5, 5, 0, 6, 0, 6, 0, 5, 5, 0, 5, 5, 5, 5, 6, 6, 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 6, 6, 6, 6, 6, 0],\n  [0, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 5, 5, 5, 0, 6, 6, 0, 6, 4, 5, 5, 5, 0, 5, 5, 6, 6, 6, 6, 6, 6],\n  [1, 6, 6, 6, 6, 0, 0, 2, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 6, 6, 6, 0, 5, 5, 5, 0, 5, 5, 0, 7, 5, 5, 6, 6],\n  [0, 0, 5, 5, 5, 5, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 5, 6, 0, 0, 0, 6, 6, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 6, 6],\n  [0, 6, 6, 6, 0, 0, 0, 6, 0, 6, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 5, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 6],\n  [0, 0, 0, 0, 0, 5, 5, 6, 0, 6, 6, 5, 5, 5, 0, 6, 6, 6, 0, 0, 0, 6, 6, 6, 6, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n  [0, 6, 6, 6, 6, 6, 6, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6, 6, 0, 0, 0, 6, 6, 6, 6, 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n];\n","import React from \"react\";\nimport \"./modal.css\";\n\nconst Modal = (props) => {\n  return (\n    <div id=\"myModal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <div>\n          <h3>Achievement Unlocked!</h3>\n          <h5>{props.title}</h5>\n          <p style={{margin: \"10px\"}}>{props.text}</p>\n        </div>\n        <img src={props.image} style={{ maxHeight: \"400px\", maxWidth: \"200px\" }}></img>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport walkSprite from \"./goblin.png\";\n\n/**\n * Renders the goblin sprite.\n *\n * @param props    The props to be used by the component.\n */\nconst Goblin = (props) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: props.position[1],\n        left: props.position[0],\n        backgroundImage: `url(${walkSprite})`,\n        backgroundPosition: props.spriteLocation,\n        width: \"50px\",\n        height: \"60px\",\n      }}\n    />\n  );\n};\n\nexport default Goblin;\n","const initialState = {\n  position: [0, 0],\n  spriteLocation: \"0px 0px\",\n  walkIndex: 0,\n};\n\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"MOVE_PLAYER\":\n      return {\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;\n","const initialState = {\n  position: [0, 0],\n};\n\nconst mapReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TILE\":\n      return {\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default mapReducer;\n","const initialState = {\n  position: [1020, 320],\n  spriteLocation: \"6px 7px\",\n  walkIndex: 0,\n};\n\nconst goblinReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"MOVE_GOBLIN\":\n      return {\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default goblinReducer;\n","import { combineReducers, createStore } from \"redux\";\nimport playerReducer from \"../features/player/player.reducer\";\nimport mapReducer from \"../features/map/map.reducer\";\nimport goblinReducer from \"../features/goblin/goblin.reducer\";\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n  goblin: goblinReducer,\n  map: mapReducer,\n});\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import { connect } from \"react-redux\";\nimport Goblin from \"./goblin.component\";\nimport { handleMovement } from \"./goblin.actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.goblin,\n  };\n};\n\nexport const GoblinContainer = connect(mapStateToProps)(handleMovement(Goblin));\n","import { MAP_HEIGHT, MAP_WIDTH, SPRITE_HEIGHT, SPRITE_WIDTH } from \"../../store/constants\";\nimport store from \"../../store/store\";\n\n/**\n * Controls goblin movement within the game.\n *\n * @param goblin    The goblin component.\n */\nexport const handleMovement = (goblin) => {\n  const getNewPosition = (prevPos, direction) => {\n    switch (direction) {\n      case \"WEST\":\n        return [prevPos[0] - SPRITE_WIDTH, prevPos[1]];\n      case \"EAST\":\n        return [prevPos[0] + SPRITE_WIDTH, prevPos[1]];\n      case \"NORTH\":\n        return [prevPos[0], prevPos[1] - SPRITE_HEIGHT];\n      case \"SOUTH\":\n        return [prevPos[0], prevPos[1] + SPRITE_HEIGHT];\n    }\n  };\n\n  /**\n   * Returns the offset in px for the sprite image in order to simulate goblin animation.\n   *\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\n   * @param walkIndex    The index used to set the goblin sprite image.\n   */\n  const getSpriteLocation = (direction, walkIndex) => {\n    switch (direction) {\n      case \"EAST\":\n        return `-0px -0px`;\n      case \"WEST\":\n        return `-0px -0px`;\n      case \"NORTH\":\n        return `-0px -0px`;\n      case \"SOUTH\":\n        return `-${walkIndex * 21}px 0px`;\n    }\n  };\n\n  /**\n   * Returns the walk index as the goblin moves.\n   * There are 4 different sprite images for each direction so index must be reset to 0 after it reaches 3.\n   */\n  const getWalkIndex = () => {\n    const walkIndex = store.getState().goblin.walkIndex;\n    return walkIndex >= 2 ? 0 : walkIndex + 1;\n  };\n\n  /**\n   * Checks to see if the new position is within the bounds of the map.\n   * Returns new position if within bounds and old position if move would be out of bounds.\n   *\n   * @param prevPos    The goblin's previous position.\n   * @param newPos     The goblin's new position.\n   */\n  const observeBoundary = (newPos) => {\n    return newPos[0] >= 0 && newPos[0] <= MAP_WIDTH - SPRITE_WIDTH && newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT * 2;\n  };\n\n  /**\n   * Checks to see if the new position is within the bounds of the map.\n   * Returns new position if within bounds and old position if move would be out of bounds.\n   *\n   * @param prevPos    The goblin's previous position.\n   * @param newPos     The goblin's new position.\n   */\n  const observeGameObjects = (newPos) => {\n    const tiles = store.getState().map.tiles;\n    const y = newPos[1] / SPRITE_HEIGHT;\n    const x = newPos[0] / SPRITE_WIDTH;\n    const nextTile = tiles[y][x];\n    return nextTile < 5;\n  };\n\n  /**\n   * Dispatches an action to move the goblin.\n   *\n   * @param newPos       The goblin's new position.\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\n   */\n  const dispatchMove = (direction, newPos) => {\n    store.dispatch({\n      type: \"MOVE_GOBLIN\",\n      payload: {\n        position: newPos,\n        direction,\n        walkIndex: getWalkIndex(),\n        spriteLocation: getSpriteLocation(direction, getWalkIndex()),\n      },\n    });\n  };\n\n  /**\n   * Checks if the new position will observe boundaries and game objects and calls method to move the goblin.\n   *\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\n   */\n  const attemptMove = (direction) => {\n    const prevPos = store.getState().goblin.position;\n    const newPos = getNewPosition(prevPos, direction);\n\n    if (observeBoundary(newPos)) {\n      dispatchMove(direction, newPos);\n    }\n  };\n\n  let i = 1;\n  const repeatMove = () => {\n    setInterval(() => {\n      switch (i++ % 2) {\n        case 0:\n          attemptMove(\"WEST\");\n          break;\n        case 1:\n          attemptMove(\"EAST\");\n          break;\n        case 2:\n          attemptMove(\"SOUTH\");\n          break;\n      }\n    }, 1000);\n  };\n\n  repeatMove();\n  return goblin;\n};\n","export const SPRITE_WIDTH = 30;\nexport const SPRITE_HEIGHT = 60;\nexport const MAP_HEIGHT = SPRITE_HEIGHT * 10;\nexport const MAP_WIDTH = SPRITE_WIDTH * 40;\n","import React from \"react\";\nimport { SPRITE_HEIGHT, SPRITE_WIDTH } from \"../../store/constants\";\nimport \"./map.css\";\n\n/**\n * Returns class name for different tyles based on type enum value.\n *\n * @param type    Type of tile to render (grass, rocks, etc.)\n */\nconst getTileSprite = (type) => {\n  switch (type) {\n    case 0:\n      return \"grass\";\n    case 1:\n      return \"trumpet\";\n    case 2:\n      return \"diploma\";\n    case 3:\n      return \"pickaxe\";\n    case 4:\n      return \"lighthouse\";\n    case 5:\n      return \"rock\";\n    case 6:\n      return \"tree\";\n    case 7:\n      return \"chest\";\n    case 8:\n      return \"goblin\";\n    default:\n      return \"grass\";\n  }\n};\n\n/**\n * Renders a tile for the game map.\n *\n * @param props    The component props.\n */\nconst MapTile = (props) => {\n  return (\n    <div\n      className={`tile ${getTileSprite(props.value)}`}\n      style={{\n        height: SPRITE_HEIGHT,\n        width: SPRITE_WIDTH,\n      }}\n    ></div>\n  );\n};\n\nexport default MapTile;\n","import React from \"react\";\nimport MapTile from \"./map-tile.component\";\n\n/**\n * Renders the game map background and objects.\n *\n * @param props    The props to be used by the component.\n */\nconst Map = (props) => {\n  return (\n    <div\n      style={{\n        width: \"1200px\",\n        height: \"600px\",\n        backgroundColor: \"#53821b\",\n        margin: \"auto\",\n        border: \"solid 2px white\",\n      }}\n    >\n      {props.tiles &&\n        props.tiles.map((row, i) => (\n          <div key={i} className=\"row\">\n            {row.map((tile, i) => (\n              <MapTile key={i} value={tile} />\n            ))}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Map;\n","import { connect } from \"react-redux\";\nimport Map from \"./map.component\";\n\nconst mapStateToProps = (state) => ({\n  tiles: state.map.tiles,\n});\n\nexport const MapContainer = connect(mapStateToProps)(Map);\n","import React from \"react\";\nimport walkSprite from \"./walkSprite2.png\";\n\n/**\n * Renders the game sprite (player).\n *\n * @param props    The props to be used by the component.\n */\nconst Player = (props) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: props.position[1],\n        left: props.position[0],\n        backgroundImage: `url(${walkSprite})`,\n        backgroundPosition: props.spriteLocation,\n        width: \"30px\",\n        height: \"60px\",\n      }}\n    />\n  );\n};\n\nexport default Player;\n","import { connect } from \"react-redux\";\nimport { handleMovement } from \"./player.actions\";\nimport Player from \"./player.component\";\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.player,\n  };\n};\n\nexport const PlayerContainer = connect(mapStateToProps)(handleMovement(Player));\n","import { MAP_HEIGHT, MAP_WIDTH, SPRITE_HEIGHT, SPRITE_WIDTH } from \"../../store/constants\";\nimport store from \"../../store/store\";\n\n/**\n * Controls player movement within the game.\n *\n * @param player    The player component.\n */\nexport const handleMovement = (player) => {\n  const getNewPosition = (prevPos, direction) => {\n    switch (direction) {\n      case \"WEST\":\n        return [prevPos[0] - SPRITE_WIDTH, prevPos[1]];\n      case \"EAST\":\n        return [prevPos[0] + SPRITE_WIDTH, prevPos[1]];\n      case \"NORTH\":\n        return [prevPos[0], prevPos[1] - SPRITE_HEIGHT];\n      case \"SOUTH\":\n        return [prevPos[0], prevPos[1] + SPRITE_HEIGHT];\n    }\n  };\n\n  /**\n   * Returns the offset in px for the sprite image in order to simulate player animation.\n   *\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\n   * @param walkIndex    The index used to set the player sprite image.\n   */\n  const getSpriteLocation = (direction, walkIndex) => {\n    switch (direction) {\n      case \"EAST\":\n        return `-${walkIndex * 31}px -124px`;\n      case \"WEST\":\n        return `-${walkIndex * 31}px -60px`;\n      case \"NORTH\":\n        return `-${walkIndex * 31}px -194px`;\n      case \"SOUTH\":\n        return `-${walkIndex * 31}px 0px`;\n    }\n  };\n\n  /**\n   * Returns the walk index as the player moves.\n   * There are 4 different sprite images for each direction so index must be reset to 0 after it reaches 3.\n   */\n  const getWalkIndex = () => {\n    const walkIndex = store.getState().player.walkIndex;\n    return walkIndex >= 3 ? 0 : walkIndex + 1;\n  };\n\n  /**\n   * Checks to see if the new position is within the bounds of the map.\n   * Returns new position if within bounds and old position if move would be out of bounds.\n   *\n   * @param prevPos    The player's previous position.\n   * @param newPos     The player's new position.\n   */\n  const observeBoundary = (newPos) => {\n    return newPos[0] >= 0 && newPos[0] <= MAP_WIDTH - SPRITE_WIDTH && newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT * 2;\n  };\n\n  /**\n   * Checks to see if the new position is within the bounds of the map.\n   * Returns new position if within bounds and old position if move would be out of bounds.\n   *\n   * @param prevPos    The player's previous position.\n   * @param newPos     The player's new position.\n   */\n  const observeGameObjects = (newPos) => {\n    const tiles = store.getState().map.tiles;\n    console.log(tiles);\n    const y = newPos[1] / SPRITE_HEIGHT;\n    const x = newPos[0] / SPRITE_WIDTH;\n    const nextTile = tiles[y][x];\n    return nextTile < 5;\n  };\n\n  /**\n   * Dispatches an action to move the player.\n   *\n   * @param newPos      The player's new position.\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\n   */\n  const dispatchMove = (direction, newPos) => {\n    store.dispatch({\n      type: \"MOVE_PLAYER\",\n      payload: {\n        position: newPos,\n        direction,\n        walkIndex: getWalkIndex(),\n        spriteLocation: getSpriteLocation(direction, getWalkIndex()),\n      },\n    });\n  };\n\n  /**\n   * Checks if the new position will observe boundaries and game objects and calls method to move the player.\n   *\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\n   */\n  const attemptMove = (direction) => {\n    const prevPos = store.getState().player.position;\n    const newPos = getNewPosition(prevPos, direction);\n\n    if (observeBoundary(newPos) && observeGameObjects(newPos)) {\n      dispatchMove(direction, newPos);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        return attemptMove(\"WEST\");\n      case 38:\n        return attemptMove(\"NORTH\");\n      case 39:\n        return attemptMove(\"EAST\");\n      case 40:\n        return attemptMove(\"SOUTH\");\n      default:\n        console.log(e.keyCode);\n    }\n  };\n\n  window.addEventListener(\"keydown\", (e) => {\n    handleKeyDown(e);\n  });\n\n  return player;\n};\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/modal/modal.component\";\nimport { GoblinContainer } from \"../goblin/goblin.container\";\nimport { MapContainer } from \"../map/map.container\";\nimport { PlayerContainer } from \"../player/player.container\";\nimport trumpetImage from \"./trumpet_zebra.png\";\nimport geologyImage from \"./geology.jpg\";\nimport queensImage from \"./queens.png\";\nimport lighthouseImage from \"./lighthouse_diploma.jpg\";\n\n/**\n * Renders the game world.\n *\n * @param props    The component props.\n */\nconst World = (props) => {\n  const [showModal, setShowModal] = useState(true);\n\n  useEffect(() => {\n    props.addTiles();\n  }, []);\n\n  const onClose = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"800px\",\n        height: \"400px\",\n        margin: \"20px\",\n      }}\n    >\n      <MapContainer />\n      <GoblinContainer />\n      <PlayerContainer />\n      {props.player.position[1] === 240 && props.player.position[0] === 0 && showModal && (\n        <Modal onClose={onClose} image={trumpetImage} title=\"Music\" text={props.musicModalText} />\n      )}\n      {props.player.position[1] === 240 && props.player.position[0] === 210 && showModal && (\n        <Modal onClose={onClose} image={queensImage} title=\"Bsc(Honours) Earth Science\" text={props.universityModalText} />\n      )}\n      {props.player.position[1] === 240 && props.player.position[0] === 540 && showModal && (\n        <Modal onClose={onClose} image={geologyImage} title=\"Geology\" text={props.geologyModalText} />\n      )}\n      {props.player.position[1] === 180 && props.player.position[0] === 810 && showModal && (\n        <Modal onClose={onClose} image={lighthouseImage} title=\"Web Developer\" text={props.lighthouseLabsModalText} />\n      )}\n    </div>\n  );\n};\n\nexport default World;\n","import { connect } from \"react-redux\";\nimport { addTiles } from \"./world.actions\";\nimport World from \"./world.component\";\n\nconst mapStateToProps = (\n  state = {\n    player: {},\n  }\n) => ({\n  player: state.player,\n  musicModalText:\n    \"I began playing trumpet when I was 11 years old. I was hooked! Played a lot with school bands, the jazz band in university and had a short stint with a local band called Freak Motif (check them out!). Here's me playing at the Motion Notion Festival in BC\",\n  geologyModalText:\n    \"After a couple student/new grad contracts I was hired on as a Geologist at Perpetual Energy in 2006. While there I helped discover oil and natural gas prospects through scientific studies and geological mapping.I oversaw the geology side of drilling operations from the office and occasionally in the field. Had a great time at Perpetual but after about 10 years I was ready for a change.\",\n  universityModalText:\n    \" What can I say...I love rocks!. From 2001 - 2005 I attended Queens University in Kingston Ontario and earned my bachelors degree in Earth Science. Learning about the Earth at a great institution was an awesome experience. It was a lot of fun and the reason I first moved out to Calgary. Highlights were Geological Field School in Quebec and getting to handle some of the earliest animal fossils ever found.\",\n  lighthouseLabsModalText:\n    \"In 2016 I was ready for something new and exciting. After doing some freelance website work for friends and family I decided to register for Lighthouse Labs Web Development Bootcamp. I learned Javascript, HTML, Node, CSS, React and a little Ruby on Rails. I also learned what a rubber duck was really for.\",\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTiles: () => dispatch(addTiles()),\n});\n\nexport const WorldContainer = connect(mapStateToProps, mapDispatchToProps)(World);\n","import { tiles } from \"../../data/map/1\";\n\n/**\n * Returns an action to add tile matrix to the game.\n */\nexport const addTiles = () => {\n  return {\n    type: \"ADD_TILE\",\n    payload: {\n      tiles,\n    },\n  };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { WorldContainer } from \"./features/world/world.container\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <WorldContainer />\n      <h2 className=\"game_title\">\n        Resume Quest <p className=\"game_instructions\">(use arrow keys to move player)</p>\n      </h2>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"../src/store/store\"\n\nReactDOM.render(\n    <Provider store={store}> <App /></Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}