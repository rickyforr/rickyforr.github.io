{"version":3,"sources":["system/hooks/ethereum/ethereumRequests.ts","components/labels/ReviewCollectionContent.tsx","system/hooks/ethereum/useEthereumWallet.ts","system/hooks/useUiText.ts","components/cards/AttributeCard.tsx","pages/ReviewCollection/ReviewCollection.tsx","components/cards/ReviewProcessingCard.tsx","components/cards/ReviewFailCard.tsx","components/cards/ReviewInsufficientCard.tsx","components/cards/ReviewSuccessCard.tsx","components/cards/ReviewDeployingCard.tsx","components/cards/CollectionFailedCard.tsx","system/context/WalletContext.tsx","theme/colors.ts","system/api/mappers.ts","system/api/api.ts","system/context/CollectorContext.tsx","system/hooks/useCollectorController.ts","system/hooks/useDeviceDetect.ts","layout/AppFooter/AppFooter.tsx","components/buttons/ConnectWalletButton.tsx","components/buttons/PrimaryButton.tsx","pages/Modals/NoReceiptModal/NoReceiptModal.tsx","system/hooks/useModalController.ts","pages/Modals/TransactionPendingModal/TransactionPendingModal.tsx","system/constants.ts","system/hooks/ethereum/useContract.ts","system/context/ContractContext.tsx","pages/Modals/WalletModal/CollectionContractContext.tsx","components/buttons/WarningButton.tsx","pages/Modals/WalletModal/CollectionDetails.tsx","components/buttons/SecondaryButton.tsx","components/modals/ModalPageNumber.tsx","pages/Modals/WalletModal/CollectionPreMintView.tsx","pages/Modals/WalletModal/CollectionProvenanceView.tsx","pages/Modals/WalletModal/CollectionRevealView.tsx","theme/theme.ts","pages/Modals/WalletModal/MyCollectionsSection.tsx","pages/Modals/WalletModal/MyReceiptsSection.tsx","pages/Modals/WalletModal/WalletModalChangeNetworkView.tsx","pages/Modals/WalletModal/WalletModalConnectView.tsx","pages/Modals/WalletModal/WalletModalTransactionFailedView.tsx","pages/Modals/WalletModal/WalletModalTransactionPendingView.tsx","pages/Modals/WalletModal/WalletModalTransactionSuccessfulView.tsx","pages/Modals/WalletModal/WalletModal.tsx","pages/Modals/WalletModal/WalletModalContainer.tsx","system/context/ModalContext.tsx","components/buttons/HeaderButton.tsx","pages/Modals/NoReceiptModal/useNoReceipt.ts","layout/AppHeader/AppHeader.tsx","system/hooks/useScreenSize.ts","layout/AppContainer/AppContainer.tsx","components/text/SectionHeading.tsx","components/text/SectionText.tsx","layout/DescriptionPageLayout/DescriptionPageLayout.tsx","pages/HomePage/HomePage.tsx","pages/LandingPage/LandingPage.tsx","components/forms/FormLabel.tsx","components/forms/FormDescription.tsx","components/buttons/AddCollectionButton.tsx","components/cards/UploadAttributeCard.tsx","components/modals/DeleteAttributeConfirmationModal.tsx","components/cards/DeleteTraitCard.tsx","components/modals/FileErrorModal.tsx","components/modals/UploadAttributeModal.tsx","components/cards/DragableCard.tsx","containers/AttributeCardContainer.tsx","pages/CreateCollection/CreateCollection.tsx","pages/KitchenPage/KitchenPage.tsx","pages/SuccessCollection/SuccessCollection.tsx","system/hooks/usePrevious.ts","layout/MobileRestriction/MobileRestriction.tsx","layout/ReceiptRestriction/ReceiptRestriction.tsx","layout/ScrollToTop/ScrollToTop.tsx","components/cards/CollectorSuccessCard.tsx","components/cards/ErrorCard.tsx","components/cards/MintingCard.tsx","components/cards/WrongNetworkCard.tsx","pages/Mint/Mint.tsx","components/cards/UpdatedCollectionCard.tsx","pages/Modals/UpdatedNotificationModal/UpdatedNotificationModal.tsx","pages/Modals/ErrorNotificationModal/ErrorNotificationModal.tsx","pages/CustomizeMint/CustomizeMint.tsx","App.tsx","reportWebVitals.js","theme/Fonts.tsx","index.js"],"names":["EthereumRequests","ethereum","getAccounts","provider","a","eth","request","method","reconnect","params","eth_accounts","disconnect","getBalance","account","sendTransaction","transactionParameters","switchChain","chainId","sign","msg","pass","this","ReviewCollectionContent","label","content","rest","flexDir","h1","textAlign","color","APP_TEXT_INACTIVE_COLOR","fontSize","HOMEPAGE_BACKGROUND_COLOR","INFURA_ID","useEthereumWallet","React","useState","setEthereum","setProvider","currentAccount","setCurrentAccount","balance","setBalance","isDisconnected","setIsDisconnected","accountChangePending","setAccountChangePending","isWrongNetwork","setIsWrongNetwork","useStorageState","localStorage","providerName","setProviderName","validation","setValidation","signed","setSigned","prevAccount","usePrevious","requests","checkProviderAvailability","WalletConnectProvider","infuraId","pollingInterval","walletConnectAsProvider","accounts","window","ethereumProvider","ethers","providers","Web3Provider","getNetwork","listAccounts","then","finally","undefined","handleBalance","formatBalance","catch","err","console","log","connect","isMetaMask","newProvider","enable","open","cancel","length","handleDisconnect","error","handleSwitchNetwork","value","parseInt","Math","pow","signResult","useEffect","on","location","reload","signMessage","id","v4","message","result","JSON","stringify","e","toFixed","switchNetwork","useUiText","uiText","aboutDescription1","aboutDescription2","aboutDescription3","aboutHeading","addPreviewImage","collectionRevealed","collections","connectWallet","contractAddress","contractBalance","copyButtonSuccessTooltip","copyButtonTooltip","createdOn","deployCollection","enableMinting","startSale","mintPage","enablePreMint","enter","enterKitchen","ethereumAbbr","failedTransactionMessage","getReceiptMessage","goToDiscord","infoDescription2","insufficientFundsMessage","introHeading1","introHeading2","learnMore","mintNewReceipt","mintReceipt","mobileLanding","myProfile","myReceipts","noCollectionsMessage","noReceiptMessage","noReceiptsSubTitle","noReceiptsTitle","pauseMinting","preMint","preMintMessage","prepareYourFiles","processingTransaction","provenance","provenancePopupDescription","readyToStartCollection","receiptAuthenticityDescription1","receiptAuthenticityDescription2","receiptAuthenticityDescription3","receiptCostMessage","amount","receiptHasBeenMinted","receiptHeading","receiptOverviewDescription1","receiptOverviewDescription2","receiptSpecsDescription1","receiptSpecsDescription2","receiptSubHeadingAuthenticity","receiptSubHeadingOverview","receiptSubHeadingSpecs","receipts","revealCollection","revealCollectionMessage","skip","skipAndEnableMinting","somethingWentWrong","startNewCollection","startNftCollection","switchNetworkMessage","totalMinted","transactionInProgressMessage","visitKitchenDescription1","visitKitchenDescription2","visitKitchenDescription3","visitKitchenHeading","walletAddress","introHeaderKitchen1","introHeaderKitchen2","prepareHeading","prepareDescription","createHeading","createDescription","addHeading","addDescription","previewHeading","previewDescription","customizeHeading","customizeDescription","customizeList1","customizeList2","customizeList3","infoHeading","infoDescription1","welcomeToTheKitchen","welcomeToTheKitchenDescription","withdrawETHButtonLabel","withdrawFundsTooltip","wrongNetwork","selectWallet","metamask","safepal","setProvenance","trustWallet","tokenPocket","walletConnect","createCollectionAddMetadata","createCollectionCostDescription","createCollectionCostLabel","createCollectionCostPlaceholder","createCollectionDecimalsError","createCollectionDescriptionDescription","createCollectionDescriptionLabel","createCollectionDownloadLabel","createCollectionGenerateButtonDescription","createCollectionGenerateButtonLabel","createCollectionGenerateDescription","createCollectionGenerateLabel","createCollectionGenerateTooltip","createCollectionMax10000","createCollectionMax150Characters","createCollectionMax30Characters","createCollectionMetadataDescription1","createCollectionMetadataDescription2","createCollectionMetadataError","createCollectionMetadataExample","createCollectionValueExample","createCollectionMetadataLabel","createCollectionNameDescription","createCollectionNameLabel","createCollectionPlaceholder30Characters","createCollectionPlaceholderMax10Characters","createCollectionPlaceholderMax150Characters","createCollectionPreviewTip1","createCollectionPreviewTip2","createCollectionPreviewTip3","createCollectionRequired","createCollectionSubmitButton","createCollectionSymbolDescription","createCollectionSymbolLabel","createCollectionTitle","createCollectionTotalDescription","createCollectionTotalLabel","createCollectionMax10Characters","deleteCollectionModal","deleteCollectionTitle","deleteCollectionButton1","deleteCollectionButton2","deleteCollectionTraitTitle","fileErrorTitle","fileErrorDescription","reviewCollectionTitle","reviewCollectionEditButtonLabel","reviewCollectionTitleDescription","reviewCollectionCreateButton","reviewCollectionName","reviewCollectionSymbol","reviewCollectionDescription","reviewCollectionUploaded1","reviewCollectionUploaded2","reviewCollectionCost","reviewCollectionTotal","reviewCollectionMetadata","reviewCollectionKey","reviewCollectionValue","reviewCardProcessingTitle","reviewCardProcessingSubTitle","reviewCardProcessingBottomSubTitle1","reviewCardProcessingBottomSubTitle2","reviewCardDeployingTitle1","reviewCardDeployingTitle2","reviewCardDeployingSubtitle","reviewCardFailTitle","reviewCardFailSubTitle","reviewCardCollectionFailedTitle","reviewCardCollectionFailedSubtitle1","reviewCardCollectionFailedSubtitle2","reviewCardCollectionFailedSubtitle3","reviewCardInsufficientTitle","reviewCardInsufficientSubtitle1","reviewCardInsufficientSubtitle2","reviewCardSuccessTitle","reviewCardSuccessSubTitle1","reviewCardSuccessSubTitle2","reviewCardSuccessButton","reviewCardSuccessDescription","reviewed","created","deployed","successCollectionTitle","successCollectionSubTitle1","successCollectionSubTitle2","successCollectionSubTitle3","successCollectionButton1","successCollectionButton2","mintNow","createdWith","customizeMintTitle","customizeMintCollectionLink","customizeMintBannerTitle","customizeMintBannerDescription","customizeMintBoxDescription","customizeMintDesktopTitle","customizeMintDesktopDescription","customizeMintMobileTitle","customizeMintMobileDescription","customizeMintButtonArea","customizeMintLinks","discord","instagram","twitter","opensea","saveDetails","viewMintPage","lightPaper","AttributeCard","image","name","totalTraits","width","height","marginTop","onClick","bgColor","APP_HEADER_TEXT_COLOR","cursor","mt","borderRadius","shadow","borderWidth","borderColor","direction","justifyContent","alignItems","px","marginBottom","src","w","h","objectFit","fontFamily","fontWeight","httpsAgent","require","Agent","rejectUnauthorized","ReviewCollection","pageLoading","setPageLoading","isLoading","setIsLoading","status","setStatus","isError","setIsError","imageWidth","setImageWidth","imageHeight","setImageHeight","props","useLocation","state","navigate","useNavigate","replace","useContext","WalletContext","collectionId","setCollectionId","url","Image","onload","URL","createObjectURL","attributes","files","Buffer","from","toString","deployContract","signer","getSigner","factory","ContractFactory","abi","bytecode","symbol","total","cost","deploy","utils","parseEther","contract","deployTransaction","wait","deployTxHash","hash","address","SubmitCollection","res","formData","FormData","append","description","map","attribute","filename","file","metadata","data","key","String","Axios","process","responseType","headers","response","Promise","reject","LaunchCollection","deployAndVerify","network","isFromReview","mb","onClose","onDeploy","renderCard","flex","APP_PRIMARY_CONTRAST_COLOR","isDisabled","APP_SECONDARY_COLOR","ml","templateColumns","gap","index","imageURL","ReviewProcessingCard","WALLET_MODAL_ALT_BG_COLOR","py","display","h2","APP_SECONDARY_NEON_COLOR","align","ReviewFailCard","position","right","top","style","transform","APP_WARNING_COLOR","ReviewInsufficientCard","ReviewSuccessCard","APP_SECONDARY_LABEL","mr","borderTopWidth","mx","backgroundColor","_hover","APP_IMAGE_PLACEHOLDER_COLOR","ReviewDeployingCard","CollectionFailedCard","APP_PRIMARY_COLOR","BUTTON_BORDER_COLOR","createContext","WalletProvider","children","wallet","Provider","APP_HEADER_BACKGROUND_COLOR","APP_PRIMARY_BUTTON_TEXT","APP_SECONDARY_COLOR_DARK","APP_PRIMARY_TEXT_COLOR","APP_DIVIDER_COLOR","APP_DESCRIPTION_COLOR","APP_BORDER_COLOR_DARK","APP_ERROR_COLOR","APP_INFO_BACKGROUND_COLOR","APP_TAB_LIST_SELECTED_COLOR","WALLET_MODAL_HEADER_BG_COLOR","WALLET_MODAL_BODY_BG_COLOR","DELETE_BUTTON_COLOR","FILE_ERROR_COLOR","DESCRIPTION_COLOR","COLLECTOR_BORDER_COLOR","UPLOAD_BOX_TEXT_COLOR","COLLECTION_IMAGE_BACKGROUND","COLLECTION_IMAGE_TEXT","mapApiCollectionToCollection","apiCollection","_id","collectionName","collectionImage","imgBaseUrl","convertIpfsUrl","creatorAddress","dateCreated","moment","date","format","maxSupply","price","deployStatus","metaDataBaseUrl","provenanceHash","mintPageImgBaseUrl","mintPageDesktopImageUrl","mintPageMobileImageUrl","telegram","mintPageContentMapper","mintPageContent","split","baseURL","apiGet","axios","create","apiCreate","getCollections","getAddress","defaults","post","c","getMintPageContent","getNftImagesByIds","nftIds","updateMintPage","success","failure","uploadPlaceholderMetaData","placeholderMetaData","CollectorContext","CollectorProvider","collectorController","pathname","isMintPage","includes","collection","setCollection","useCollectorController","useDeviceDetect","innerWidth","setWidth","handleWindowResize","addEventListener","removeEventListener","isMobile","isBigScreen","AppFooter","opacity","p","size","as","href","background","backgroundSize","backgroundRepeat","ConnectWalletButton","isConnected","connectPending","disabled","_disabled","rightIcon","variant","_active","bg","_focus","PrimaryButton","text","border","NoReceiptModal","AppModals","isOpen","walletModal","ModalContext","scrollBehavior","onOpen","TransactionPendingModal","maxWidth","justify","MASATOSHI_CONTRACT_ADDRESS","whitelistedAddresses","masterchefMasatoshi_json","useContract","setContract","currentTokenBalance","setCurrentTokenBalance","isWhitelistedAddress","setIsWhitelistedAddress","totalSupply","setTotalSupply","transactionPending","setTransactionPending","transactionSuccessful","setTransactionSuccessful","transactionUnSuccessful","setTransactionUnSuccessful","tokenIds","setTokenIds","saleIsActive","setSaleIsActive","currentBaseUri","setCurrentBaseUri","currentProvenance","setCurrentProvenance","tokenBalancePending","setTokenBalancePending","mintPrice","setMintPrice","getTokenBalance","balanceOf","b","toNumber","getTotalSupply","getBaseUri","baseURI","getProvenance","PROVENANCE","getReceipts","tokenBalance","ids","i","tokenOfOwnerByIndex","push","getSalesState","enabled","getMintPrice","Contract","mintToken","mintTokens","pollTransactionState","setInterval","clearInterval","flipSaleState","saleState","pollSaleState","s","baseUri","setBaseURI","pollBaseUriState","uri","withDrawEth","withdraw","setProvenanceHash","pollProvenanceState","hasReceipt","resetTransactionState","ContractContext","ContractProvider","memo","CollectionContractContext","CollectionContractProvider","transactionPendingModal","WarningButton","INFO_ICON_BG_COLOR","CollectionDetails","onBackToCollections","goToEnableMinting","goToProvenance","goToRevealCollection","collectionThumbnail","setCollectionThumbnail","collectionThumbnailFile","setCollectionThumbnailFile","setCopyButtonTooltip","handleGoToEnableMinting","handleGoToProvenance","handleDisableMinting","uploadImageData","openInNewTab","focus","overflow","pb","icon","onDrop","acceptedFiles","multiple","accept","maxSize","getRootProps","getInputProps","alt","ipfs","whiteSpace","textOverflow","closeOnClick","arrow","shouldWrapChildren","onCopy","setTimeout","placement","maxW","hasArrow","SecondaryButton","dark","ModalPageNumber","numberOfPages","currentPage","pageNumber","pl","pr","renderPageNumbers","CollectionPreMintView","goBack","setAmount","preMintPending","setPreMintPending","handlePreMint","handleEnableMinting","placeholder","onChange","target","placeSelf","CollectionProvenanceView","handleSetProvenance","CollectionRevealView","bottom","theme","extendTheme","fonts","body","heading","aeonik","colors","appHeaderBackgroundColor","appHeaderTextColor","appPrimaryColor","appImagePlaceholderColor","appPrimaryButtonTextColor","appPrimaryContrastColor","appSecondaryColor","appSecondaryNeonColor","appSecondaryColorDark","appPrimaryTextColor","appDividerColor","appInfoBackgroundColor","appTextInactiveColor","appErrorColor","appDescriptionColor","appBorderColorDark","appTabListSelectedColor","moreInfoButtonColor","walletModalHeaderBackgroundColor","walletModalBodyBackgroundColor","homePageBackgroundColor","walletModalAltBackgroundColor","appWarningColor","appSecondaryLabel","buttonBorderColor","deleteButtonColor","fileErrorColor","descriptionColor","collectorBorderColor","uploadBoxTextColor","collectionImageBackground","collectionImageText","components","TabList","defaultProps","Button","scrollBarStyles","MyCollectionsSection","updateCollections","changeDeployStatus","newCollections","noReceiptsModal","sx","paddingBottom","minW","zIndex","to","textDecoration","MyReceiptsSection","insufficientFunds","marginRight","m","r","boxShadow","WalletModalChangeNetworkView","handleReconnect","WalletModalConnectView","handleConnect","isMobileMint","wallets","paddingY","paddingX","alignSelf","last","flexDirection","borderBottom","WalletModalTransactionFailedView","WalletModalTransactionPendingView","WalletModalTransactionSuccessfulView","WalletModal","clearSelectedCollection","handleClose","handleSelectCollection","handleUpdateCollections","handleViewPreMint","handleViewReveal","handleViewProvenance","selectedCollection","viewPreMint","viewReveal","viewProvenance","walletModalTabIndex","tabIndex","setTabIndex","renderWithModal","Component","transparent","collectionAddress","motionPreset","minH","isCentered","borderTopRadius","borderBottomRadius","isLazy","defaultIndex","subHeading","_selected","borderBottomWidth","sort","Date","valueOf","WalletModalContainer","setSelectedCollection","setViewPreMint","setViewReveal","setViewProvenance","setCollections","prevCollectionId","find","path","view","ModalProvider","modalController","walletModalIsOpen","setWalletModalIsOpen","noReceiptsModalIsOpen","setNoReceiptsModalIsOpen","transactionPendingModalIsOpen","setTransactionPendingModalIsOpen","setWalletTabIndex","useModalController","HeaderButton","profile","useNoReceipt","handleCreateNewCollection","AppHeader","isWidthOrGreater","setIsWidthOrGreater","updateMedia","useScreenSize","navItems","paddingLeft","paddingRight","IconButton","colorScheme","n","AppContainer","paddingTop","SectionHeading","letterSpacing","base","md","lg","SectionText","DescriptionPageLayout","introSection","sections","flexWrap","section","HomePage","lineHeight","outlineColor","srcSet","boxSize","maxH","div","visibility","LandingPage","backgroundPosition","FormLabel","htmlFor","FormDescription","AddCollectionButton","labelDescription","labelWidth","className","UploadAttributeCard","onDelete","margin","type","rarityWeight","preventDefault","DeleteAttributeConfirmationModal","left","DeleteTraitCard","FileErrorModal","filenames","slice","splitString","ext","UploadAttributeModal","onDeleteAttribute","attributeName","setAttributeName","isDeleteAttributeConfirmation","setIsDeleteAttributeConfirmation","showFileReject","setShowFileReject","setFiles","useCallback","droppedFile","renamed","hashtag","search","fileName","rarity","newFile","File","Object","assign","isDelete","useDropzone","noClick","fileRejections","onDeleteTraitClick","array","previousTrait","el","elIndex","findIndex","onConfirmDeleteTrait","splice","onDeleteTraits","overflowY","my","focusBorderColor","currentTarget","reverse","delay","in","initialScale","changeRarityWeight","DragableAttributeCard","moveCard","styles","ref","useRef","useDrop","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","drop","useDrag","isDragging","drag","AttributeCardContainer","onOpenModal","setAttributes","dragCard","update","$splice","CreateCollection","errorAttributesRef","useDisclosure","uploadedAttributes","setUploadedAttributes","attributesError","setAttributesError","preview","setPreview","isPreviewLoading","setIsPreviewLoading","blobPreview","setBlobPreview","selectedAttributes","setSelectedAttributes","useForm","handleSubmit","control","register","formState","errors","isSubmitting","useFieldArray","fields","remove","prepend","shouldFocus","fileChecker","filter","property","pathLength","folderName","grouppingObjects","reduce","x","newAttributes","keys","generatePreview","https","previewID","getTime","random","Blob","onSubmit","values","scrollIntoView","behavior","block","isInvalid","shouldUnregister","required","maxLength","resize","outline","marginLeft","DndProvider","backend","HTML5Backend","blob","saveAs","loading","onWheel","blur","step","onKeyPress","event","test","validate","indexOf","trail","floor","Number","countDecimals","max","KitchenPage","customizeList","list","padding","SuccessCollection","prevId","MobileRestriction","ReceiptRestriction","ScrollToTop","scrollTo","CollectorSuccessCard","hidden","ErrorCard","MintingCard","backgroundImage","WrongNetworkCard","Mint","setType","isMobileSuccess","useParams","handleCloseNotification","getNftImage","ownerOf","innerHeight","renderContent","UpdatedCollectionCard","onViewMintPage","UpdatedNotificationModal","clearStatus","ErrorNotificationModal","CustomizeMint","desktopImage","setDesktopImage","mobileImage","setMobileImage","setDiscord","setInstagram","setTwitter","setOpensea","mintLink","setMintLink","uploadPageData","handleUploadMintPage","pt","defaultValue","App","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Fonts","ReactDOM","render","StrictMode","initialColorMode","config","document","getElementById"],"mappings":"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","file":"static/js/main.2541f666.chunk.js","sourcesContent":["import { ExternalProvider, Web3Provider } from \"@ethersproject/providers\";\n\n/**\n * Exposes methods for making RPC requests to Ethereum.\n */\nexport class EthereumRequests {\n  readonly ethereum;\n  constructor(ethereum: Web3Provider | undefined) {\n    this.ethereum = ethereum?.provider;\n  }\n\n  public getAccounts = async (provider?: ExternalProvider) => {\n    let eth: ExternalProvider | undefined;\n    provider ? (eth = provider) : (eth = this.ethereum);\n    if (eth?.request) {\n      return await eth.request({ method: \"eth_requestAccounts\" });\n    }\n  };\n\n  public reconnect = async () => {\n    if (this?.ethereum?.request) {\n      return await this.ethereum.request({\n        method: \"wallet_requestPermissions\",\n        params: [\n          {\n            eth_accounts: {},\n          },\n        ],\n      });\n    }\n  };\n\n  public disconnect = async () => {\n    if (this?.ethereum?.request) {\n      return await this.ethereum.request({\n        method: \"eth_requestAccounts\",\n        params: [\n          {\n            eth_accounts: {},\n          },\n        ],\n      });\n    }\n  };\n\n  public getBalance = async (account: string) => {\n    if (this?.ethereum?.request) {\n      return await this.ethereum.request({\n        method: \"eth_getBalance\",\n        params: [account, \"latest\"],\n      });\n    }\n  };\n\n  public sendTransaction = async (transactionParameters: any) => {\n    if (this?.ethereum?.request) {\n      return await this.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters],\n      });\n    }\n  };\n\n  public switchChain = async () => {\n    if (this?.ethereum?.request) {\n      return await this.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x1\" }],\n      });\n    }\n  };\n\n  public sign = async (\n    account: string | undefined,\n    msg: string,\n    pass: string\n  ) => {\n    if (this?.ethereum?.request) {\n      return await this.ethereum.request({\n        method: \"personal_sign\",\n        params: [msg, account, pass],\n      });\n    }\n  };\n}\n","import { Box, chakra } from \"@chakra-ui/react\";\nimport {\n  APP_TEXT_INACTIVE_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport { ReviewCollectionContentType } from \"./types\";\n\nfunction ReviewCollectionContent({\n  label,\n  content,\n  ...rest\n}: ReviewCollectionContentType) {\n  return (\n    <Box {...rest} flexDir={\"column\"}>\n      <chakra.h1\n        textAlign={\"left\"}\n        color={APP_TEXT_INACTIVE_COLOR}\n        fontSize={\"16px\"}\n      >\n        {label}\n      </chakra.h1>\n      <chakra.h1\n        textAlign={\"left\"}\n        color={HOMEPAGE_BACKGROUND_COLOR}\n        fontSize={\"20px\"}\n      >\n        {content}\n      </chakra.h1>\n    </Box>\n  );\n}\n\nexport default ReviewCollectionContent;\n","import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { EthereumRequests } from \"./ethereumRequests\";\nimport { usePrevious } from \"@chakra-ui/hooks\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useStorageState } from \"react-storage-hooks\";\nimport { v4 } from \"uuid\";\n\nconst INFURA_ID = \"6a7282649222432f9191ca853d1daa6b\";\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\nexport type EthereumWallet = {\n  account: string | undefined;\n  accountChangePending: boolean;\n  balance: string;\n  connect: (isMetaMask: boolean) => void;\n  disconnect: () => void;\n  ethereum: Web3Provider | undefined;\n  isWrongNetwork: boolean;\n  switchNetwork: () => void;\n  sign: (\n    account: string | undefined,\n    msg: string,\n    pass: string\n  ) => Promise<any>;\n  validation: string;\n};\n\nexport const useEthereumWallet = (): EthereumWallet => {\n  const [ethereum, setEthereum] = React.useState<Web3Provider>();\n  const [provider, setProvider] = React.useState<any>();\n  const [currentAccount, setCurrentAccount] = React.useState<string>();\n  const [balance, setBalance] = React.useState<number>(0);\n  const [isDisconnected, setIsDisconnected] = React.useState<boolean>(false);\n  const [accountChangePending, setAccountChangePending] =\n    React.useState<boolean>(false);\n  const [isWrongNetwork, setIsWrongNetwork] = React.useState(false);\n  const [providerName, setProviderName] = useStorageState<\n    \"metamask\" | \"walletConnect\" | \"\"\n  >(localStorage, \"providerName\", \"\");\n  const [validation, setValidation] = useStorageState<string>(\n    localStorage,\n    \"validation\",\n    \"\"\n  );\n  const [signed, setSigned] = useState(false);\n  const prevAccount = usePrevious(currentAccount);\n\n  const requests = new EthereumRequests(ethereum);\n\n  /**\n   * Sets the provider to state if it's available.\n   */\n  const checkProviderAvailability = async () => {\n    if (providerName === \"walletConnect\") {\n      const provider = new WalletConnectProvider({\n        infuraId: INFURA_ID,\n        pollingInterval: 30000,\n      });\n      setProvider(provider);\n      walletConnectAsProvider();\n      const chainId = provider.chainId;\n      setCurrentAccount(provider.accounts[0]);\n      setAccountChangePending(false);\n\n      if (chainId !== 1) {\n        setIsWrongNetwork(false);\n        setAccountChangePending(false);\n        return;\n      }\n    } else if (providerName === \"metamask\" && window.ethereum) {\n      setProvider(window.ethereum);\n      const ethereumProvider = new ethers.providers.Web3Provider(\n        window.ethereum\n      );\n      const chainId = ethereumProvider?.getNetwork\n        ? (await ethereumProvider.getNetwork()).chainId\n        : null;\n      setEthereum(ethereumProvider);\n\n      // Check if User is already connected by retrieving the accounts\n      await ethereumProvider\n        .listAccounts()\n        .then((a) => {\n          // Set User account into state\n          setCurrentAccount(a[0]);\n        })\n        .finally(() => setAccountChangePending(false));\n\n      if (chainId !== 1) {\n        setIsWrongNetwork(false);\n        setAccountChangePending(false);\n        return;\n      }\n    }\n    setCurrentAccount(undefined);\n    setAccountChangePending(false);\n  };\n\n  /**\n   * Handles changes to the current wallet account.\n   * Sets the current account to state.\n   */\n  const handleAccountsChanged = (accounts: any, reConnect?: boolean) => {\n    if (!reConnect) {\n      if (isDisconnected && accounts[0]) {\n        setCurrentAccount(undefined);\n        return;\n      }\n    }\n\n    if (!accounts?.length) {\n      setCurrentAccount(undefined);\n    } else {\n      setCurrentAccount(accounts[0]);\n      handleBalance(accounts[0]);\n    }\n  };\n\n  /**\n   * Handles getting current wallet balance.\n   */\n  const handleBalance = async (account: any) => {\n    await requests\n      .getBalance(account)\n      .then(formatBalance)\n      .catch((err: any) => console.log(err));\n  };\n\n  /**\n   * Sets wallet connect as the provider (not metamask).\n   */\n  const walletConnectAsProvider = () => {\n    const provider = new WalletConnectProvider({\n      infuraId: INFURA_ID,\n    });\n    setEthereum(new ethers.providers.Web3Provider(provider));\n    setProvider(provider);\n  };\n\n  /**\n   * Sets metamask as the provider.\n   */\n  const metaMaskAsProvider = () => {\n    setEthereum(new ethers.providers.Web3Provider(window.ethereum));\n    setProvider(window.ethereum);\n  };\n\n  /**\n   * Connect metamask wallet or another wallet using wallet connect.\n   */\n  const connect = async (isMetaMask: boolean) => {\n    if (!isMetaMask) {\n      const newProvider = new WalletConnectProvider({\n        infuraId: INFURA_ID,\n      });\n\n      await newProvider.enable().catch((err) => console.log(err));\n      setEthereum(new ethers.providers.Web3Provider(newProvider));\n      setProvider(newProvider);\n      setCurrentAccount(newProvider.accounts[0]);\n      setProviderName(\"walletConnect\");\n      return;\n    }\n\n    if (isMetaMask && !window.ethereum) {\n      window.open(\"https://metamask.io/download\");\n      return;\n    }\n\n    if (isMetaMask && window.ethereum) {\n      setAccountChangePending(true);\n      setIsDisconnected(false);\n\n      metaMaskAsProvider();\n      setProviderName(\"metamask\");\n\n      const requests = new EthereumRequests(\n        new ethers.providers.Web3Provider(window.ethereum)\n      );\n\n      let cancel = false;\n\n      await requests\n        .reconnect()\n        .catch((err: any) => {\n          console.log(\"fail\", err);\n          cancel = true;\n        })\n        .finally(() => {\n          setAccountChangePending(false);\n        });\n\n      if (cancel) {\n        return;\n      }\n\n      await requests\n        .getAccounts()\n        .then((a) => handleAccountsChanged(a, true))\n        .catch((err: any) => console.log(err))\n        .finally(() => setAccountChangePending(false));\n\n      return;\n    }\n  };\n\n  /**\n   * Deactivates the current account.\n   */\n  const disconnect = async () => {\n    setIsDisconnected(true);\n    setCurrentAccount(undefined);\n    setProviderName(\"\");\n    if (provider?.disconnect) {\n      provider.disconnect();\n    } else {\n      await requests\n        .disconnect()\n        .then(handleDisconnect)\n        .catch((error: any) => console.error(error));\n    }\n  };\n\n  const handleSwitchNetwork = async () => {\n    await requests.switchChain();\n  };\n\n  const handleDisconnect = () => {\n    setCurrentAccount(undefined);\n  };\n\n  const formatBalance = (a: string) => {\n    const value = parseInt(a) / Math.pow(10, 18) || 0;\n    setBalance(value);\n  };\n\n  const sign = async (\n    account: string | undefined,\n    msg: string,\n    pass: string\n  ) => {\n    const signResult = await requests.sign(account, msg, pass);\n    return signResult;\n  };\n\n  /**\n   * On mount set pending state to true.\n   * Check ethereum provider availability and connected accounts\n   * Set pending state to false.\n   */\n  React.useEffect(() => {\n    setAccountChangePending(true);\n    checkProviderAvailability();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * If account has been defined set it to state and get balance.\n   * add event listener for network changes.\n   */\n  React.useEffect(() => {\n    if (provider) {\n      provider.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      provider.on(\"disconnect\", () => {\n        window.location.reload();\n      });\n      provider.on(\"accountsChanged\", (accounts: string[]) => {\n        window.location.reload();\n      });\n    }\n    if (currentAccount && !prevAccount) {\n      handleBalance(currentAccount);\n    }\n\n    if (currentAccount && !validation && !signed) {\n      const signMessage = async () => {\n        const id = v4();\n        const message = id;\n        const result = await sign(currentAccount, message, \"null\");\n        return {\n          message,\n          result,\n          id,\n        };\n      };\n\n      signMessage()\n        .then(async ({ message, result, id }) => {\n          setValidation(\n            JSON.stringify({\n              message,\n              result,\n              id,\n            })\n          );\n          setSigned(true);\n        })\n        .catch((e) => {\n          console.log(e);\n          return;\n        });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ethereum, currentAccount, prevAccount, validation]);\n\n  return {\n    account: currentAccount,\n    accountChangePending,\n    balance: balance.toFixed(4) || \"\",\n    connect,\n    disconnect,\n    ethereum,\n    isWrongNetwork,\n    switchNetwork: handleSwitchNetwork,\n    sign,\n    validation,\n  };\n};\n","export const useUiText = () => {\n  const uiText = {\n    aboutDescription1:\n      \"Don’t know how or where to create your own NFT collections? Omakasea makes it easy for you. Simply add images to build your collection. No code required.\",\n    aboutDescription2:\n      \"Join the club. Receive lifetime access to the Kitchen, an exclusive place where members can create their own custom NFT collections.\",\n    aboutDescription3: \"Project White Paper\",\n    aboutHeading: \"What's Omakasea?\",\n    addPreviewImage: \"Add Preview Image\",\n    balance: \"Balance\",\n    cancel: \"Cancel\",\n    collectionRevealed: \"Collection Revealed\",\n    collections: \"Collections\",\n    connect: \"Connect\",\n    connectWallet: \"Connect Wallet\",\n    contractAddress: \"Contract Address\",\n    contractBalance: \"Contract Balance\",\n    copyButtonSuccessTooltip: \"Copied\",\n    copyButtonTooltip: \"Copy Address to Clipboard\",\n    createdOn: \"Deployed On\",\n    deployCollection: \"Deploy Collection\",\n    disconnect: \"Disconnect\",\n    enableMinting: \"Enable Minting\",\n    startSale: \"Start Sale\",\n    mintPage: \"Mint Page\",\n    enablePreMint: \"Enable Pre-Mint\",\n    enter: \"Enter\",\n    enterKitchen: \"Enter Kitchen\",\n    ethereum: \"Ethereum\",\n    ethereumAbbr: \"ETH\",\n    failedTransactionMessage: \"Check your Wallet for details.\",\n    getReceiptMessage: \"Get a Receipt to start a new Collection.\",\n    goToDiscord: \"Go to Discord\",\n    infoDescription2:\n      \"Simply connect your wallet to access your collections and explore all the unique features.\",\n    insufficientFundsMessage:\n      \"Insufficient Balance 5 ETH are required to mint a Receipt.\",\n    introHeading1: \"Produce unique, randomly-generated NFT Collections.\",\n    introHeading2: \"No code required.\",\n    learnMore: \"Learn More\",\n    mintNewReceipt: \"Mint New Receipt\",\n    mintReceipt: \"Mint Receipt\",\n    mobileLanding: \"Available on Desktop only.\",\n    myProfile: \"My Profile\",\n    myReceipts: \"Receipts\",\n    noCollectionsMessage: \"You don't have any collections.\",\n    noReceiptMessage: \"You don't have a receipt yet.\",\n    noReceiptsSubTitle: \"Mint a Receipt to Start New Collection.\",\n    noReceiptsTitle: \"You don’t have a Receipt\",\n    pauseMinting: \"Pause Minting\",\n    preMint: \"Pre-Mint\",\n    preMintMessage:\n      \"A Pre-Mint sets aside some NFTs for you, the creator, before enabling public minting.\",\n    prepareYourFiles: \"Prepare your files.\",\n    processingTransaction: \"Processing Transaction\",\n    provenance: \"Set Provenance\",\n    provenancePopupDescription:\n      \"Set Provenance before enabling minting to ensure the authenticity of your collection.\",\n    readyToStartCollection: \"You are ready to start your collection.\",\n    receiptAuthenticityDescription1: `Omakasea guarantees the authenticity and provenance of every Receipt. `,\n    receiptAuthenticityDescription2:\n      \"Each Receipt is put through a hashing algorithm in the exact order they appear in the collection. The resulting hashes are then combined and hashed one last time to produce the Provenance Hash (essentially, the transaction Receipt).\",\n    receiptAuthenticityDescription3: `This hash is written to the blockchain. Anyone can follow the same process to discover the same hash and prove the collection has not been tampered with prior to launch.`,\n    receiptCostMessage: (amount: number) => `Receipt Cost ${amount} ETH`,\n    receiptHasBeenMinted: \"Receipt has been Minted.\",\n    receiptHeading: \"Get a Receipt\",\n    receiptOverviewDescription1: `Omakasea has limited membership—there’s only space for 1,111 active members. Your membership (A.K.A. Receipt) grants you lifetime access to the Kitchen.`,\n    receiptOverviewDescription2: `Minting a Receipt costs 5 ETH. No bonding curves or elaborate pricing schemes. Memberships cost the same for everyone.`,\n    receiptSpecsDescription1: `Receipt NFTs (memberships) are unique digital collectibles, generated with various attributes such as menu items, ingredients and designs.`,\n    receiptSpecsDescription2: `Receipts are stored as ERC-721 tokens on the Ethereum blockchain and hosted on IPFS.`,\n    receiptSubHeadingAuthenticity: \"Authenticity\",\n    receiptSubHeadingOverview: \"Overview\",\n    receiptSubHeadingSpecs: \"Specs\",\n    receipts: \"Receipts\",\n    revealCollection: \"Reveal Collection\",\n    revealCollectionMessage:\n      \"Revealing the collection exposes the IPFS base URL in the smart contract. This URL is the web address that links to the Metadata associated with each NFT.  Make sure to reveal the collection after the last NFT has been minted. Exposing the IPFS base URL prematurely bears the risk of rare NFTs getting bought first.\",\n    skip: \"Skip\",\n    skipAndEnableMinting: \"Skip and Enable Minting\",\n    somethingWentWrong: \"Something Went Wrong\",\n    startNewCollection: \"Start New Collection\",\n    startNftCollection: \"Start NFT Collection\",\n    switchNetworkMessage: \"Switch to Ethereum Mainnet.\",\n    totalMinted: \"Total Minted\",\n    transactionInProgressMessage: \"This might take a few minutes.\",\n    visitKitchenDescription1:\n      \"Create your own unique randomly generated NFT collections. No programming or development experience is required.\",\n    visitKitchenDescription2:\n      \"To access the Kitchen, holders must be signed into a web wallet such as MetaMask containing a valid Receipt.\",\n    visitKitchenDescription3:\n      \"Use art layers to create your collection. Customize your name, description, mint cost, trait rarity, max supply and more.\",\n    visitKitchenHeading: \"Visit Kitchen\",\n    walletAddress: \"Wallet Address\",\n    // Kitchen Page\n    introHeaderKitchen1: \"Welcome to the Kitchen\",\n    introHeaderKitchen2:\n      \"Upload art. Create your fully customizable, NFT collection. Zero code required.\",\n    prepareHeading: \"Prepare your files\",\n    prepareDescription:\n      \"Only images in .PNG format can be uploaded. Image size on all traits must be the same with a transparent background. Make sure all the elements are in the correct overlay position.\",\n    createHeading: \"Create and rearrange attributes\",\n    createDescription:\n      \"Add the attributes (folders) you need. Rearrange them in the desired order. Each attribute overlays over one another to generate random unique images.\",\n    addHeading: \"Add unique traits to each attribute\",\n    addDescription:\n      \"Set the rarity percentage for each trait. This determines the frequency with which the trait appears in the collection.\",\n    previewHeading: \"Preview your NFT Collection\",\n    previewDescription:\n      \"Generate an instant preview of your collection. Re-order any attributes if necessary.\",\n    customizeHeading: \"Customize your collection details\",\n    customizeDescription:\n      \"Make sure your description, mint cost, trait rarity, max supply and all collection details are correct. After that you are ready to generate your collection.\",\n    customizeList1: \"NFT Cost\",\n    customizeList2: \"Number of Items\",\n    customizeList3: \"Extra Metadata\",\n    infoHeading: \"What else you should know\",\n    infoDescription1:\n      \"When creating your collection, you will need to deploy the Smart Contract on the Ethereum Blockchain. Don’t worry, this is a seamless process. Just make sure you have a sufficient ETH balance to pay for the deployment. Gas fees vary and are hard to predict. Set aside around 1 ETH for this process.\",\n    welcomeToTheKitchen: \"Welcome to the Kitchen.\",\n    welcomeToTheKitchenDescription:\n      \"Upload art. Create your fully customizable, NFT collection. Zero code required.\",\n    withdrawETHButtonLabel: \"Withdraw ETH\",\n    withdrawFundsTooltip:\n      \"Withdraws all ETH collected from sales into your wallet.\",\n    wrongNetwork: \"Wrong Network\",\n\n    // modal connect wallet\n    selectWallet: \"Select Wallet\",\n    metamask: \"Metamask\",\n    safepal: \"SafePal\",\n    setProvenance: \"Set Provenance\",\n    trustWallet: \"Trust Wallet\",\n    tokenPocket: \"Token Pocket\",\n    walletConnect: \"Wallet Connect\",\n\n    // Create Collection Page\n    createCollectionAddMetadata: \"Add New\",\n    createCollectionCostDescription:\n      \"The cost to mint one NFT in ETH. All items are the same price.\",\n    createCollectionCostLabel: \"NFT Cost*\",\n    createCollectionCostPlaceholder: \"Max 30 characters. Max 18 decimals.\",\n    createCollectionDecimalsError: \"Maximum decimals should be 18 decimals\",\n    createCollectionDescriptionDescription:\n      \"Provide detailed description of your Collection\",\n    createCollectionDescriptionLabel: \"Description\",\n    createCollectionDownloadLabel: \"Download Image\",\n    createCollectionGenerateButtonDescription:\n      \"Choose a folder or Drop it here.\",\n    createCollectionGenerateButtonLabel: \"Add New Attribute\",\n    createCollectionGenerateDescription:\n      \"Each attribute (folder) should be sorted in the order they appear. Example: “Background” comes before “Body” to avoid any unwanted visual collisions.\",\n    createCollectionGenerateLabel: \"Upload Artwork*\",\n    createCollectionGenerateTooltip:\n      \"Each attribute is a folder, which contains the traits for that feature. (e.g., all the different eye colours traits will be added in the eye colour attribute folder.)\",\n    createCollectionMax10000: \"Max 10000\",\n    createCollectionMax150Characters: \"Maximum length should be 150 characters\",\n    createCollectionMax30Characters: \"Maximum length should be 30 characters\",\n    createCollectionMetadataDescription1:\n      \"Data will display in the NFT Collection Metadata. Data will be displayed in the NFT Collection Metadata.\",\n    createCollectionMetadataDescription2:\n      \"Add up to five keys and values. The data cannot be changed after the collection is created.\",\n    createCollectionMetadataError: \"Maximum value should be 10000\",\n    createCollectionMetadataExample: \"Ex: Creator. Max 30 characters.\",\n    createCollectionValueExample: \"Ex: Carmen Santiago\",\n    createCollectionMetadataLabel: \"Extra Metadata\",\n    createCollectionNameDescription: \"Enter Collection Name\",\n    createCollectionNameLabel: \"Name*\",\n    createCollectionPlaceholder30Characters: \"Max 30 characters.\",\n    createCollectionPlaceholderMax10Characters: \"Max 10 characters.\",\n    createCollectionPlaceholderMax150Characters: \"Max 150 characters.\",\n    createCollectionPreviewTip1: \"Bottom\",\n    createCollectionPreviewTip2: \"Overlay Position\",\n    createCollectionPreviewTip3: \"Top\",\n    createCollectionRequired: \"This is required\",\n    createCollectionSubmitButton: \"Review Collection\",\n    createCollectionSymbolDescription:\n      \"Symbol will appear as Collection Ticker\",\n    createCollectionSymbolLabel: \"Symbol*\",\n    createCollectionTitle: \"Start Building your NFT Collection\",\n    createCollectionTotalDescription:\n      \"Specify the number of items in your Collection.\",\n    createCollectionTotalLabel: \"Number of Items*\",\n    createCollectionMax10Characters: \"Maximum length should be 10 characters\",\n    deleteCollectionModal: \"Delete Attribute\",\n    deleteCollectionTitle: \"Delete Attribute?\",\n    deleteCollectionButton1: \"Delete\",\n    deleteCollectionButton2: \"Cancel\",\n    deleteCollectionTraitTitle: \"Delete Trait?\",\n    fileErrorTitle: \"Upload Error\",\n    fileErrorDescription: \"Files must be .png format and have less than 10MB\",\n\n    // Review Collection Page\n    reviewCollectionTitle: \"Review your Collection\",\n    reviewCollectionEditButtonLabel: \"Edit Details\",\n    reviewCollectionTitleDescription:\n      \"After your Collection is created you won’t be able to edit.\",\n    reviewCollectionCreateButton: \"Create Collection\",\n    reviewCollectionName: \"Name\",\n    reviewCollectionSymbol: \"Symbol\",\n    reviewCollectionDescription: \"Description\",\n    reviewCollectionUploaded1: \"Uploaded Artwork\",\n    reviewCollectionUploaded2: \"Attributes\",\n    reviewCollectionCost: \"NFT Cost\",\n    reviewCollectionTotal: \"Number of Items\",\n    reviewCollectionMetadata: \"Extra Metadata\",\n    reviewCollectionKey: \"Key\",\n    reviewCollectionValue: \"Value\",\n    reviewCardProcessingTitle: \"We're creating your collection\",\n    reviewCardProcessingSubTitle: \"This may take a while\",\n    reviewCardProcessingBottomSubTitle1: \"Keep your browser\",\n    reviewCardProcessingBottomSubTitle2: \"open the entire time\",\n    reviewCardDeployingTitle1: \"Processing\",\n    reviewCardDeployingTitle2: \"Transaction...\",\n    reviewCardDeployingSubtitle: \"This might take a few minutes\",\n    reviewCardFailTitle: \"Something went wrong.\",\n    reviewCardFailSubTitle: \"Check your Wallet for details.\",\n    reviewCardCollectionFailedTitle: \"Collection Failed\",\n    reviewCardCollectionFailedSubtitle1: \"Unable to generate enough NFT’s\",\n    reviewCardCollectionFailedSubtitle2:\n      \"with the amount uploaded. Increase the \",\n    reviewCardCollectionFailedSubtitle3:\n      \"size of yourcollection and start over\",\n    reviewCardInsufficientTitle: \"Insufficient ETH Balance\",\n    reviewCardInsufficientSubtitle1: \"Make sure you have a sufficient\",\n    reviewCardInsufficientSubtitle2: \"ETH balance to deploy your contract.\",\n    reviewCardSuccessTitle: \"Almost There\",\n    reviewCardSuccessSubTitle1: \"Now that your Collection is created\",\n    reviewCardSuccessSubTitle2: \"deploy it on the Ethereum Blockchain.\",\n    reviewCardSuccessButton: \"Deploy Contract\",\n    reviewCardSuccessDescription:\n      \"Make sure you have a sufficient ETH balance to deploy your contract.\",\n    reviewed: \"Reviewed\",\n    created: \"Created\",\n    deployed: \"Deployed\",\n\n    // Success Collection Page\n    successCollectionTitle: \"Congratulations.\",\n    successCollectionSubTitle1: \"Your Collection\",\n    successCollectionSubTitle2: \"has been deployed.\",\n    successCollectionSubTitle3:\n      \"Manage your Collection at any time by connecting your wallet.\",\n    successCollectionButton1: \"Back to Kitchen\",\n    successCollectionButton2: \"Create New Collection\",\n\n    // Mint Page\n    mintNow: \"Mint Now\",\n    createdWith: \"Created with Omakasea\",\n    // Customize Mint Page\n    customizeMintTitle: \"Customize Mint Page\",\n    customizeMintCollectionLink:\n      \"Share the link so Collectors can find you and start Minting your NFTs\",\n    customizeMintBannerTitle: \"Page Banner\",\n    customizeMintBannerDescription:\n      \"Add a Collection Cover for your mint page, the Mint Button will appear automatically\",\n    customizeMintBoxDescription: \"Add a Collection Cover\",\n    customizeMintDesktopTitle: \"Desktop\",\n    customizeMintDesktopDescription: \"1366x 768 Recommend Size\",\n    customizeMintMobileTitle: \"Mobile\",\n    customizeMintMobileDescription: \"375x667 Recommend Size\",\n    customizeMintButtonArea: \"Mint Button Area\",\n    customizeMintLinks: \"Links\",\n    discord: \"Discord\",\n    instagram: \"Instagram\",\n    twitter: \"Twitter\",\n    opensea: \"OpenSea\",\n    saveDetails: \"Save Details\",\n    viewMintPage: \"View Mint Page\",\n    lightPaper: \"Light Paper\",\n  };\n  return { uiText };\n};\n","import { Box, Flex, Image, Text } from \"@chakra-ui/react\";\nimport { APP_HEADER_TEXT_COLOR } from \"../../theme/colors\";\nimport { AttributeCardProps } from \"./types\";\n\nfunction AttributeCard({\n  image,\n  name,\n  totalTraits,\n  width,\n  height,\n  marginTop,\n  onClick,\n}: AttributeCardProps) {\n  return (\n    <Flex\n      bgColor={APP_HEADER_TEXT_COLOR}\n      width={width || \"177px\"}\n      height={height || \"231px\"}\n      cursor={\"pointer\"}\n      mt={marginTop || \"0px\"}\n      borderRadius={\"4px\"}\n      shadow={\"md\"}\n      borderWidth={\"1px\"}\n      borderColor={\"#0000004D\"}\n      direction=\"column\"\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      onClick={onClick}\n      px=\"14px\"\n    >\n      <Box\n        marginBottom={\"14px\"}\n        borderWidth={\"0.2px\"}\n        borderColor={\"#0000004D\"}\n      >\n        <Image src={image} w=\"100%\" h=\"100%\" objectFit={\"contain\"} />\n      </Box>\n      <Text\n        fontFamily={\"heading\"}\n        fontWeight={\"medium\"}\n        fontSize={\"12px\"}\n        textAlign={\"left\"}\n        w=\"100%\"\n        color=\"#939393\"\n      >{`${totalTraits} Traits`}</Text>\n      <Text\n        fontFamily={\"heading\"}\n        fontWeight={\"medium\"}\n        fontSize={\"16px\"}\n        textAlign={\"left\"}\n        color=\"#1A1818\"\n        w=\"100%\"\n      >\n        {name}\n      </Text>\n    </Flex>\n  );\n}\n\nexport default AttributeCard;\n","import { Box, Button, chakra, Flex, Grid } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { v4 } from \"uuid\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport AttributeCard from \"../../components/cards/AttributeCard\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport { CollectionFormDataType } from \"../../types\";\nimport { WalletContext } from \"../../system/context/WalletContext\";\nimport { utils, ContractFactory } from \"ethers\";\nimport ReviewCollectionContent from \"../../components/labels/ReviewCollectionContent\";\nimport { abi, bytecode } from \"../../contracts/MasterchefMasatoshi.json\";\nimport ReviewProcessingCard from \"../../components/cards/ReviewProcessingCard\";\nimport ReviewFailCard from \"../../components/cards/ReviewFailCard\";\nimport ReviewInsufficientCard from \"../../components/cards/ReviewInsufficientCard\";\nimport ReviewSuccessCard from \"../../components/cards/ReviewSuccessCard\";\nimport ReviewDeployingCard from \"../../components/cards/ReviewDeployingCard\";\nimport CollectionFailedCard from \"../../components/cards/CollectionFailedCard\";\nconst https = require(\"https\");\nconst httpsAgent = new https.Agent({ rejectUnauthorized: false });\n\ntype ReviewStatusType =\n  | \"PROCESSING\"\n  | \"SUCCESS\"\n  | \"DEPLOYING\"\n  | \"DEPLOYED\"\n  | \"NOT_ENOUGH_TRAITS\"\n  | \"INSUFFICIENT\";\n\nfunction ReviewCollection() {\n  const [pageLoading, setPageLoading] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState<ReviewStatusType>(\"PROCESSING\");\n  const [isError, setIsError] = useState(false);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  let location = useLocation();\n  const props: CollectionFormDataType = location.state;\n  let navigate = useNavigate();\n  const { uiText } = useUiText();\n  if (!props) {\n    navigate(\"/home\", { replace: true });\n  }\n  const { account, ethereum, sign } = useContext(WalletContext);\n\n  const [collectionId, setCollectionId] = useState(\"\");\n\n  useEffect(() => {\n    if (props) {\n      setPageLoading(false);\n      const image = new Image();\n      let url: string;\n      image.onload = function () {\n        setImageHeight(image.height);\n        setImageWidth(image.width);\n      };\n      url = URL.createObjectURL(props.attributes[0].files[0]);\n      image.src = url;\n    }\n  }, [props]);\n\n  const signMessage = async () => {\n    if (!ethereum) setIsError(true);\n    const id = v4();\n    const message = `0x${Buffer.from(id, \"utf8\").toString(\"hex\")}`;\n    const result = await sign(account, message, \"null\");\n    return {\n      message,\n      result,\n      id,\n    };\n  };\n\n  const deployContract = async () => {\n    if (!ethereum) setIsError(true);\n    const signer = ethereum?.getSigner(account);\n    const factory = new ContractFactory(abi, bytecode, signer);\n    const { name, symbol, total, cost } = props;\n    const contract = await factory.deploy(\n      name,\n      symbol,\n      total,\n      utils.parseEther(cost.toString()),\n      \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n    );\n    await contract.deployTransaction.wait(3);\n    const deployTxHash = contract.deployTransaction.hash;\n    const contractAddress = contract.address;\n    return {\n      deployTxHash,\n      contractAddress,\n    };\n  };\n\n  const SubmitCollection = async (res: any) => {\n    // Form Data\n    let formData = new FormData();\n    const id = res.id;\n    setCollectionId(id);\n    formData.append(\"collectionName\", props.name);\n    formData.append(\"symbol\", props.symbol);\n    formData.append(\"price\", props.cost);\n    formData.append(\"description\", props.description);\n    formData.append(\"creatorAddress\", account!);\n    formData.append(\"maxSupply\", props.total);\n    formData.append(\"id\", id);\n    formData.append(\"isPreview\", \"false\");\n    formData.append(\"validation\", JSON.stringify(res));\n    props.attributes.map((attribute) => {\n      const filename = attribute.name;\n      const files = attribute.files;\n      return files.map((file) => {\n        return formData.append(`${filename}`, file);\n      });\n    });\n    const metadata: { [key: string]: string } = {};\n    props.metadata.map((data) => {\n      const key = data.key;\n      const value = data.value;\n      return (metadata[key] = value);\n    });\n    formData.append(\"imageHeight\", String(imageHeight));\n    formData.append(\"imageWidth\", String(imageWidth));\n    formData.append(\"extraMetadata\", JSON.stringify(metadata));\n\n    await Axios({\n      method: \"POST\",\n      httpsAgent,\n      url: `https://${process.env.REACT_APP_SERVER_URL}.com/make`,\n      data: formData,\n      responseType: \"blob\",\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((res) => {\n        setStatus(\"SUCCESS\");\n        return res;\n      })\n      .catch((err) => {\n        setIsError(true);\n        if (!err.response) {\n          // network error\n          console.log(\"Submit Collection\", err.response, err);\n          return Promise.reject(\"Error: Network Error\");\n        } else {\n          console.log(\"Submit Collection\", err.response);\n          return Promise.reject(err);\n        }\n      });\n  };\n\n  const LaunchCollection = async () => {\n    setIsLoading(true);\n    setStatus(\"PROCESSING\");\n    signMessage()\n      .then(async ({ message, result, id }) => {\n        SubmitCollection({\n          message,\n          result,\n          id,\n        });\n      })\n      .catch((e) => {\n        setIsError(true);\n        return;\n      });\n  };\n\n  const deployAndVerify = async () => {\n    setStatus(\"DEPLOYING\");\n    const { deployTxHash, contractAddress } = await deployContract().catch(\n      (err) => {\n        setIsError(true);\n        return Promise.reject(err);\n      }\n    );\n    await Axios({\n      method: \"POST\",\n      responseType: \"json\",\n      httpsAgent,\n      url: `https://${process.env.REACT_APP_SERVER_URL}.com/verify`,\n      data: {\n        collectionId,\n        deployTxHash,\n        contractAddress,\n        network: ethereum?.network?.name!,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        setStatus(\"DEPLOYED\");\n        setIsLoading(false);\n        navigate(\"/success-collection\", {\n          replace: true,\n          state: { isFromReview: true, id: collectionId },\n        });\n        return res;\n      })\n      .catch((err) => {\n        setIsError(true);\n        if (!err.response) {\n          // network error\n          Promise.reject(\"Error: Network Error\");\n        } else {\n          Promise.reject(err);\n        }\n      });\n  };\n\n  const renderCard = () => {\n    if (isError) {\n      return (\n        <ReviewFailCard\n          onClose={() => {\n            setIsError(false);\n            if (status !== \"SUCCESS\") {\n              setIsLoading(false);\n              setStatus(\"PROCESSING\");\n            }\n          }}\n        />\n      );\n    }\n    switch (status) {\n      case \"PROCESSING\":\n        return <ReviewProcessingCard />;\n      case \"INSUFFICIENT\":\n        return (\n          <ReviewInsufficientCard\n            onClose={() => {\n              setIsLoading(false);\n              setStatus(\"PROCESSING\");\n            }}\n          />\n        );\n      case \"SUCCESS\":\n        return <ReviewSuccessCard onDeploy={deployAndVerify} />;\n      case \"DEPLOYING\":\n        return <ReviewDeployingCard />;\n      case \"NOT_ENOUGH_TRAITS\":\n        return (\n          <CollectionFailedCard\n            onClick={() =>\n              navigate(\"/create-collection\", { replace: true, state: props })\n            }\n            onClose={() => {\n              setIsLoading(false);\n              setStatus(\"PROCESSING\");\n            }}\n          />\n        );\n    }\n  };\n\n  return pageLoading ? (\n    <div>Loading</div>\n  ) : (\n    <Box px={\"120px\"} w=\"100%\" mb={\"180px\"}>\n      <Flex flexDir=\"row\">\n        {isLoading && renderCard()}\n        {!isLoading && (\n          <Flex flexDir={\"column\"} flex={1} mt={\"140px\"}>\n            <chakra.h1 fontSize={\"44px\"} textAlign={\"left\"} mb={\"26px\"}>\n              {uiText.reviewCollectionTitle}\n            </chakra.h1>\n            <chakra.h1\n              color={APP_TEXT_INACTIVE_COLOR}\n              fontSize={\"15px\"}\n              textAlign={\"left\"}\n              mb={\"88px\"}\n            >\n              {uiText.reviewCollectionTitleDescription}\n            </chakra.h1>\n            <Button\n              onClick={() =>\n                navigate(\"/create-collection\", { replace: true, state: props })\n              }\n              fontSize={\"16px\"}\n              width=\"100%\"\n              bgColor={APP_PRIMARY_CONTRAST_COLOR}\n              borderWidth={\"1px\"}\n              borderColor={{ HOMEPAGE_BACKGROUND_COLOR }}\n              borderRadius={\"8px\"}\n            >\n              {uiText.reviewCollectionEditButtonLabel}\n            </Button>\n\n            <Button\n              isDisabled={isLoading}\n              isLoading={isLoading}\n              onClick={LaunchCollection}\n              fontSize={\"16px\"}\n              bgColor={APP_SECONDARY_COLOR}\n              borderRadius={\"8px\"}\n              mt={\"16px\"}\n            >\n              {uiText.reviewCollectionCreateButton}\n            </Button>\n          </Flex>\n        )}\n        <Flex\n          flexDir={\"column\"}\n          alignItems={\"flex-start\"}\n          flex={2}\n          mt={\"60px\"}\n          ml={\"60px\"}\n        >\n          <Flex\n            mb={\"72px\"}\n            flexDir={\"row\"}\n            width=\"100%\"\n            justifyContent={\"space-between\"}\n          >\n            <ReviewCollectionContent\n              label={uiText.reviewCollectionName}\n              content={props.name}\n              flex={1}\n            />\n\n            <ReviewCollectionContent\n              label={uiText.reviewCollectionSymbol}\n              content={props.symbol}\n              flex={1}\n            />\n          </Flex>\n\n          <ReviewCollectionContent\n            label={uiText.reviewCollectionDescription}\n            content={props.description}\n          />\n          <chakra.h1\n            mt={\"72px\"}\n            color={APP_TEXT_INACTIVE_COLOR}\n            fontSize={\"16px\"}\n            mb={\"12px\"}\n          >\n            {`${uiText.reviewCollectionUploaded1} (${props.attributes?.length} ${uiText.reviewCollectionUploaded2})`}\n          </chakra.h1>\n          <Grid marginTop=\"20px\" templateColumns=\"repeat(4, 1fr)\" gap={5}>\n            {props.attributes?.map((attribute, index) => {\n              const imageURL = URL.createObjectURL(attribute.files[0]);\n              return (\n                <AttributeCard\n                  key={index}\n                  name={attribute.name}\n                  image={imageURL}\n                  totalTraits={attribute.files.length}\n                />\n              );\n            })}\n          </Grid>\n          <Flex\n            mt={\"72px\"}\n            flexDir={\"row\"}\n            width=\"100%\"\n            justifyContent={\"space-between\"}\n          >\n            <ReviewCollectionContent\n              label={uiText.reviewCollectionCost}\n              content={props.cost}\n              flex={1}\n            />\n\n            <ReviewCollectionContent\n              label={uiText.reviewCollectionTotal}\n              content={props.total}\n              flex={1}\n            />\n          </Flex>\n          <chakra.h1\n            mt={\"72px\"}\n            color={APP_TEXT_INACTIVE_COLOR}\n            fontSize={\"16px\"}\n          >\n            {uiText.reviewCollectionMetadata}\n          </chakra.h1>\n          <Flex\n            mt={\"20px\"}\n            flexDir={\"row\"}\n            width=\"100%\"\n            justifyContent={\"space-between\"}\n          >\n            <Box flex={1}>\n              <chakra.h1\n                textAlign={\"left\"}\n                color={APP_TEXT_INACTIVE_COLOR}\n                fontSize={\"16px\"}\n              >\n                {uiText.reviewCollectionKey}\n              </chakra.h1>\n            </Box>\n            <Box flex={1}>\n              <chakra.h1\n                textAlign={\"left\"}\n                color={APP_TEXT_INACTIVE_COLOR}\n                fontSize={\"16px\"}\n              >\n                {uiText.reviewCollectionValue}\n              </chakra.h1>\n            </Box>\n          </Flex>\n          {props.metadata?.map((data, index) => {\n            return (\n              <Flex\n                key={index}\n                width=\"100%\"\n                flexDir={\"row\"}\n                justifyContent={\"space-between\"}\n              >\n                <Box flex={1}>\n                  <chakra.h1\n                    textAlign={\"left\"}\n                    color={HOMEPAGE_BACKGROUND_COLOR}\n                    fontSize={\"20px\"}\n                  >\n                    {data.key || \"-\"}\n                  </chakra.h1>\n                </Box>\n                <Box flex={1}>\n                  <chakra.h1\n                    textAlign={\"left\"}\n                    color={HOMEPAGE_BACKGROUND_COLOR}\n                    fontSize={\"20px\"}\n                  >\n                    {data.value || \"-\"}\n                  </chakra.h1>\n                </Box>\n              </Flex>\n            );\n          })}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ReviewCollection;\n","import { Box, chakra, Flex, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_SECONDARY_NEON_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../theme/colors\";\n\nfunction ReviewProcessingCard() {\n  const { uiText } = useUiText();\n  return (\n    <Box>\n      <Flex\n        flexDir={\"column\"}\n        flex={1}\n        mt={\"60px\"}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        width={\"358px\"}\n        height={\"612px\"}\n        borderRadius={\"12px\"}\n        py={\"50px\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        <Box flexDir={\"column\"} alignItems={\"center\"} display={\"flex\"}>\n          <chakra.h2\n            fontSize={\"25px\"}\n            fontWeight={\"bold\"}\n            width={\"200px\"}\n            color={APP_SECONDARY_NEON_COLOR}\n          >\n            {uiText.reviewCardProcessingTitle}\n          </chakra.h2>\n          <Flex flexDir={\"row\"} align=\"center\">\n            <chakra.h2\n              mt=\"12px\"\n              fontWeight={\"semibold\"}\n              color={APP_HEADER_TEXT_COLOR}\n              fontSize={\"12px\"}\n              width={\"250px\"}\n            >\n              {uiText.reviewCardProcessingSubTitle}\n            </chakra.h2>\n          </Flex>\n        </Box>\n        <Image\n          src={\"./LoadingAnimation.gif\"}\n          w=\"293px\"\n          h=\"293px\"\n          objectFit={\"contain\"}\n        />\n        <chakra.h2\n          textAlign={\"center\"}\n          fontWeight={\"semibold\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n        >\n          {uiText.reviewCardProcessingBottomSubTitle1} <br />\n          {uiText.reviewCardProcessingBottomSubTitle2}\n        </chakra.h2>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ReviewProcessingCard;\n","import { Box, Button, chakra, Flex, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_WARNING_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../theme/colors\";\nimport { ReviewCardProps } from \"./types\";\n\nfunction ReviewFailCard({ onClose }: ReviewCardProps) {\n  const { uiText } = useUiText();\n  return (\n    <Box position={\"relative\"}>\n      <Button\n        onClick={onClose}\n        position=\"absolute\"\n        right={3}\n        top={70}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n      >\n        <chakra.h2\n          style={{ transform: \"rotate(45deg)\" }}\n          color={APP_HEADER_TEXT_COLOR}\n          fontSize={\"22px\"}\n        >\n          +\n        </chakra.h2>\n      </Button>\n      <Flex\n        flexDir={\"column\"}\n        flex={1}\n        mt={\"60px\"}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        width={\"358px\"}\n        height={\"612px\"}\n        borderRadius={\"12px\"}\n        py={\"50px\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        <Box flexDir={\"column\"} alignItems={\"center\"} display={\"flex\"}>\n          <chakra.h1\n            fontSize={\"25px\"}\n            fontWeight={\"bold\"}\n            width={\"180px\"}\n            color={APP_WARNING_COLOR}\n          >\n            {uiText.reviewCardFailTitle}\n          </chakra.h1>\n        </Box>\n        <Image src={\"./bones.png\"} w=\"293px\" h=\"293px\" objectFit={\"contain\"} />\n        <chakra.h1\n          fontWeight={\"semibold\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n        >\n          {uiText.reviewCardFailSubTitle}\n        </chakra.h1>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ReviewFailCard;\n","import { Box, Button, chakra, Flex, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_WARNING_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../theme/colors\";\nimport { ReviewCardProps } from \"./types\";\n\nfunction ReviewInsufficientCard({ onClose }: ReviewCardProps) {\n  const { uiText } = useUiText();\n  return (\n    <Box position={\"relative\"}>\n      <Button\n        onClick={onClose}\n        position=\"absolute\"\n        right={3}\n        top={70}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n      >\n        <chakra.h2\n          style={{ transform: \"rotate(45deg)\" }}\n          color={APP_HEADER_TEXT_COLOR}\n          fontSize={\"22px\"}\n        >\n          +\n        </chakra.h2>\n      </Button>\n      <Flex\n        flexDir={\"column\"}\n        flex={1}\n        mt={\"60px\"}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        width={\"358px\"}\n        height={\"612px\"}\n        borderRadius={\"12px\"}\n        py={\"50px\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        <Box flexDir={\"column\"} alignItems={\"center\"} display={\"flex\"}>\n          <chakra.h2\n            fontSize={\"25px\"}\n            fontWeight={\"bold\"}\n            width={\"180px\"}\n            color={APP_WARNING_COLOR}\n          >\n            {uiText.reviewCardInsufficientTitle}\n          </chakra.h2>\n        </Box>\n        <Image src={\"./Wallet.png\"} w=\"293px\" h=\"293px\" objectFit={\"contain\"} />\n        <chakra.h2\n          fontWeight={\"semibold\"}\n          textAlign={\"center\"}\n          width={\"270px\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n        >\n          {uiText.reviewCardInsufficientSubtitle1}\n          <br />\n          {uiText.reviewCardInsufficientSubtitle2}\n        </chakra.h2>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ReviewInsufficientCard;\n","import { Box, Button, chakra, Flex, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_IMAGE_PLACEHOLDER_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_SECONDARY_LABEL,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../theme/colors\";\nimport { ReviewCardProps } from \"./types\";\n\nfunction ReviewSuccessCard({ onDeploy }: ReviewCardProps) {\n  const { uiText } = useUiText();\n  return (\n    <Box position={\"relative\"}>\n      <Flex\n        flexDir={\"column\"}\n        flex={1}\n        mt={\"60px\"}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        width={\"358px\"}\n        height={\"612px\"}\n        borderRadius={\"12px\"}\n        py={\"50px\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        <Box flexDir={\"column\"} alignItems={\"center\"} display={\"flex\"}>\n          <chakra.h2\n            fontWeight={\"bold\"}\n            color={APP_SECONDARY_LABEL}\n            fontSize={\"28px\"}\n            width={\"234px\"}\n          >\n            {uiText.reviewCardSuccessTitle}\n          </chakra.h2>\n          <chakra.h2\n            mt=\"12px\"\n            fontWeight={\"semibold\"}\n            color={APP_HEADER_TEXT_COLOR}\n            fontSize={\"12px\"}\n            width={\"250px\"}\n          >\n            {uiText.reviewCardSuccessSubTitle1}\n            <br />\n            {uiText.reviewCardSuccessSubTitle2}\n          </chakra.h2>\n        </Box>\n        <Box width=\"280px\" display=\"flex\" flexDir={\"row\"} alignItems={\"center\"}>\n          <Flex\n            flex={1}\n            flexDir=\"column\"\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            mr=\"-5px\"\n          >\n            <Box\n              width=\"22px\"\n              height=\"22px\"\n              borderWidth={\"1px\"}\n              borderColor={APP_HEADER_TEXT_COLOR}\n              borderRadius={\"22px\"}\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              mb={\"22px\"}\n            >\n              <Image\n                src={\"./correct-mark.png\"}\n                w=\"8px\"\n                h=\"8px\"\n                objectFit={\"contain\"}\n              />\n            </Box>\n            <chakra.h2\n              color={APP_HEADER_TEXT_COLOR}\n              fontSize={\"12px\"}\n              fontWeight={\"semibold\"}\n            >\n              {uiText.reviewed}\n            </chakra.h2>\n          </Flex>\n          <Box\n            width=\"100%\"\n            borderTopWidth={\"1px\"}\n            borderColor={APP_HEADER_TEXT_COLOR}\n            borderRadius={\"22px\"}\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            mx={\"-13px\"}\n            mb={\"39px\"}\n          />\n          <Flex\n            flex={1}\n            flexDir=\"column\"\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n          >\n            <Box\n              width=\"22px\"\n              height=\"22px\"\n              borderWidth={\"1px\"}\n              borderColor={APP_HEADER_TEXT_COLOR}\n              borderRadius={\"22px\"}\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              mb={\"22px\"}\n            >\n              <Image\n                src={\"./correct-mark.png\"}\n                w=\"8px\"\n                h=\"8px\"\n                objectFit={\"contain\"}\n              />\n            </Box>\n            <chakra.h2\n              color={APP_HEADER_TEXT_COLOR}\n              fontSize={\"12px\"}\n              fontWeight={\"semibold\"}\n            >\n              {uiText.created}\n            </chakra.h2>\n          </Flex>\n          <Box\n            width=\"100%\"\n            borderTopWidth={\"0.5px\"}\n            borderColor={APP_HEADER_TEXT_COLOR}\n            borderRadius={\"22px\"}\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            mx={\"-13px\"}\n            mb={\"39px\"}\n          />\n          <Flex\n            flex={1}\n            ml=\"-4px\"\n            flexDir=\"column\"\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n          >\n            <Box\n              width=\"22px\"\n              height=\"22px\"\n              borderWidth={\"1px\"}\n              borderColor={APP_HEADER_TEXT_COLOR}\n              borderRadius={\"22px\"}\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              mb={\"22px\"}\n            >\n              <Box width={\"8px\"} height={\"8px\"} />\n            </Box>\n            <chakra.h2\n              color={APP_HEADER_TEXT_COLOR}\n              fontSize={\"12px\"}\n              fontWeight={\"semibold\"}\n            >\n              {uiText.deployed}\n            </chakra.h2>\n          </Flex>\n        </Box>\n        <Box\n          display={\"flex\"}\n          flexDir={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Button\n            backgroundColor={APP_SECONDARY_COLOR}\n            fontSize={\"12px\"}\n            width={\"205px\"}\n            borderColor={APP_SECONDARY_COLOR}\n            borderWidth={\"1px\"}\n            fontWeight={\"bold\"}\n            onClick={onDeploy}\n            _hover={{ color: APP_SECONDARY_COLOR }}\n          >\n            {uiText.reviewCardSuccessButton}\n          </Button>\n          <chakra.h2\n            fontSize={\"10px\"}\n            width=\"190px\"\n            color={APP_IMAGE_PLACEHOLDER_COLOR}\n            textAlign={\"center\"}\n            mt=\"20px\"\n          >\n            {uiText.reviewCardSuccessDescription}\n          </chakra.h2>\n        </Box>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ReviewSuccessCard;\n","import { Box, chakra, Flex, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_SECONDARY_LABEL,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../theme/colors\";\n\nfunction ReviewDeployingCard() {\n  const { uiText } = useUiText();\n  return (\n    <Box>\n      <Flex\n        flexDir={\"column\"}\n        flex={1}\n        mt={\"60px\"}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        width={\"358px\"}\n        height={\"612px\"}\n        borderRadius={\"12px\"}\n        py={\"50px\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        <Box flexDir={\"column\"} alignItems={\"center\"} display={\"flex\"}>\n          <chakra.h2\n            fontSize={\"25px\"}\n            fontWeight={\"bold\"}\n            width={\"200px\"}\n            color={APP_SECONDARY_LABEL}\n          >\n            {uiText.reviewCardDeployingTitle1} <br /> {uiText.reviewCardDeployingTitle2}\n          </chakra.h2>\n        </Box>\n        <Image\n          src={\"./LoadingAnimation.gif\"}\n          w=\"293px\"\n          h=\"293px\"\n          objectFit={\"contain\"}\n        />\n        <chakra.h2\n          textAlign={\"center\"}\n          fontWeight={\"semibold\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n        >\n          {uiText.reviewCardDeployingSubtitle}\n        </chakra.h2>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ReviewDeployingCard;\n","import { Box, Button, chakra, Flex, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_WARNING_COLOR,\n  BUTTON_BORDER_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../theme/colors\";\nimport { ReviewCardProps } from \"./types\";\n\nfunction CollectionFailedCard({ onClose, onClick }: ReviewCardProps) {\n  const { uiText } = useUiText();\n\n  return (\n    <Box position={\"relative\"}>\n      <Button\n        onClick={onClose}\n        position=\"absolute\"\n        right={3}\n        top={70}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n      >\n        <chakra.h2\n          style={{ transform: \"rotate(45deg)\" }}\n          color={APP_HEADER_TEXT_COLOR}\n          fontSize={\"22px\"}\n        >\n          +\n        </chakra.h2>\n      </Button>\n      <Flex\n        flexDir={\"column\"}\n        flex={1}\n        mt={\"60px\"}\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        width={\"358px\"}\n        height={\"612px\"}\n        borderRadius={\"12px\"}\n        py={\"50px\"}\n        alignItems={\"center\"}\n      >\n        <Box flexDir={\"column\"} alignItems={\"center\"} display={\"flex\"}>\n          <chakra.h1\n            fontSize={\"25px\"}\n            fontWeight={\"bold\"}\n            color={APP_WARNING_COLOR}\n            fontFamily=\"heading\"\n          >\n            {uiText.reviewCardCollectionFailedTitle}\n          </chakra.h1>\n        </Box>\n        <Image\n          src={\"./bones.png\"}\n          w=\"258px\"\n          h=\"243px\"\n          objectFit={\"contain\"}\n          mt={\"64px\"}\n        />\n        <chakra.h1\n          fontWeight={\"medium\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n          fontFamily=\"heading\"\n        >\n          {uiText.reviewCardCollectionFailedSubtitle1}\n        </chakra.h1>\n        <chakra.h1\n          fontWeight={\"medium\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n          fontFamily=\"heading\"\n        >\n          {uiText.reviewCardCollectionFailedSubtitle2}\n        </chakra.h1>\n        <chakra.h1\n          fontWeight={\"medium\"}\n          fontSize={\"14px\"}\n          color={APP_HEADER_TEXT_COLOR}\n          fontFamily=\"heading\"\n        >\n          {uiText.reviewCardCollectionFailedSubtitle3}\n        </chakra.h1>\n        <Button\n          onClick={onClick}\n          fontSize={\"16px\"}\n          width={\"205px\"}\n          py=\"15px\"\n          mt={\"66px\"}\n          bgColor={APP_PRIMARY_COLOR}\n          color={APP_PRIMARY_CONTRAST_COLOR}\n          borderWidth={\"1px\"}\n          borderColor={BUTTON_BORDER_COLOR}\n          borderRadius={\"8px\"}\n        >\n          {uiText.reviewCollectionEditButtonLabel}\n        </Button>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default CollectionFailedCard;\n","import React from \"react\";\nimport {\n  EthereumWallet,\n  useEthereumWallet,\n} from \"../hooks/ethereum/useEthereumWallet\";\n\ninterface IWalletContext extends EthereumWallet {}\n\nexport const WalletContext = React.createContext<IWalletContext>({\n  account: \"\",\n  accountChangePending: false,\n  balance: \"\",\n  connect: (isMetaMask?: boolean) => {\n    return;\n  },\n  disconnect: () => {\n    return;\n  },\n  ethereum: {} as any,\n  isWrongNetwork: false,\n  switchNetwork: () => {\n    return;\n  },\n  // Ignoring this until we get the full result type for type definition\n  // @ts-ignore\n  sign: (account: string | undefined, msg: string, pass: string) => {\n    return new Promise(() => {});\n  },\n  validation: \"\",\n});\n\nexport const WalletProvider: React.FC = ({ children }) => {\n  const wallet = useEthereumWallet();\n  return (\n    <WalletContext.Provider value={{ ...wallet }}>\n      {children}\n    </WalletContext.Provider>\n  );\n};\n","export const APP_HEADER_BACKGROUND_COLOR = \"appHeaderBackgroundColor\";\nexport const APP_HEADER_TEXT_COLOR = \"appHeaderTextColor\";\nexport const APP_PRIMARY_COLOR = \"appPrimaryColor\";\nexport const APP_PRIMARY_CONTRAST_COLOR = \"appPrimaryContrastColor\";\nexport const APP_PRIMARY_BUTTON_TEXT = \"appPrimaryButtonTextColor\";\nexport const APP_SECONDARY_COLOR = \"appSecondaryColor\";\nexport const APP_SECONDARY_COLOR_DARK = \"appSecondaryColorDark\";\nexport const APP_PRIMARY_TEXT_COLOR = \"appPrimaryTextColor\";\nexport const APP_DIVIDER_COLOR = \"appDividerColor\";\nexport const APP_DESCRIPTION_COLOR = \"appDescriptionColor\";\nexport const APP_TEXT_INACTIVE_COLOR = \"appTextInactiveColor\";\nexport const APP_BORDER_COLOR_DARK = \"appBorderColorDark\";\nexport const APP_ERROR_COLOR = \"appErrorColor\";\nexport const APP_INFO_BACKGROUND_COLOR = \"appInfoBackgroundColor\";\nexport const APP_TAB_LIST_SELECTED_COLOR = \"appTabListSelectedColor\";\nexport const WALLET_MODAL_HEADER_BG_COLOR = \"walletModalHeaderBackgroundColor\";\nexport const HOMEPAGE_BACKGROUND_COLOR = \"homePageBackgroundColor\";\nexport const WALLET_MODAL_BODY_BG_COLOR = \"walletModalBodyBackgroundColor\";\nexport const APP_IMAGE_PLACEHOLDER_COLOR = \"appImagePlaceholderColor\";\nexport const WALLET_MODAL_ALT_BG_COLOR = \"walletModalAltBackgroundColor\";\nexport const APP_WARNING_COLOR = \"appWarningColor\";\nexport const APP_SECONDARY_LABEL = \"appSecondaryLabel\";\nexport const BUTTON_BORDER_COLOR = \"buttonBorderColor\";\nexport const APP_SECONDARY_NEON_COLOR = \"appSecondaryNeonColor\";\nexport const DELETE_BUTTON_COLOR = \"deleteButtonColor\";\nexport const FILE_ERROR_COLOR = \"fileErrorColor\";\nexport const DESCRIPTION_COLOR = \"descriptionColor\";\nexport const COLLECTOR_BORDER_COLOR = \"collectorBorderColor\";\nexport const UPLOAD_BOX_TEXT_COLOR = \"uploadBoxTextColor\";\nexport const COLLECTION_IMAGE_BACKGROUND = \"collectionImageBackground\";\nexport const COLLECTION_IMAGE_TEXT = \"collectionImageText\";\n","import { ApiCollection, Collection, MintPageContent } from \"./types\";\nimport moment from \"moment\";\n\nexport const mapApiCollectionToCollection = (\n  apiCollection: ApiCollection\n): Collection => {\n  return {\n    id: apiCollection._id,\n    symbol: apiCollection.symbol,\n    name: apiCollection.collectionName,\n    collectionImage: apiCollection.imgBaseUrl\n      ? `${convertIpfsUrl(apiCollection.imgBaseUrl)}/0`\n      : \"\",\n    contractAddress: apiCollection.contractAddress,\n    creatorAddress: apiCollection.creatorAddress,\n    contractBalance: \"0\",\n    dateCreated: moment(apiCollection.date).format(\"LL\"),\n    total: apiCollection.maxSupply,\n    cost: apiCollection.price,\n    deployStatus: apiCollection.contractAddress ? \"DEPLOYED\" : \"NOTDEPLOYED\",\n    metaDataBaseUrl: apiCollection.metaDataBaseUrl,\n    provenanceHash: apiCollection.provenanceHash,\n    mintPageImgBaseUrl: apiCollection.mintPageImgBaseUrl,\n    mintPageDesktopImageUrl: apiCollection.mintPageDesktopImageUrl\n      ? convertIpfsUrl(apiCollection.mintPageDesktopImageUrl)\n      : \"\",\n    mintPageMobileImageUrl: apiCollection.mintPageMobileImageUrl\n      ? convertIpfsUrl(apiCollection.mintPageMobileImageUrl)\n      : \"\",\n    discord: apiCollection.discord,\n    instagram: apiCollection.instagram,\n    opensea: apiCollection.opensea,\n    telegram: apiCollection.telegram,\n    twitter: apiCollection.twitter,\n  };\n};\n\nexport const mintPageContentMapper = (mintPageContent: MintPageContent) => {\n  return {\n    mintPageDesktopImageUrl: mintPageContent.mintPageDesktopImageUrl\n      ? convertIpfsUrl(mintPageContent.mintPageDesktopImageUrl)\n      : \"\",\n    mintPageMobileImageUrl: mintPageContent.mintPageMobileImageUrl\n      ? convertIpfsUrl(mintPageContent.mintPageMobileImageUrl)\n      : \"\",\n    discord: mintPageContent.discord,\n    instagram: mintPageContent.instagram,\n    opensea: mintPageContent.opensea,\n    telegram: mintPageContent.telegram,\n    twitter: mintPageContent.twitter,\n  };\n};\n\nconst convertIpfsUrl = (url: string) => {\n  const id = url.split(\"//\")[1];\n  const imageUrl = `https://hightable.mypinata.cloud/ipfs/${id}`;\n  return imageUrl;\n};\n","import axios from \"axios\";\nimport { mapApiCollectionToCollection, mintPageContentMapper } from \"./mappers\";\nimport { ApiCollection, Collection } from \"./types\";\nimport { utils } from \"ethers\";\n\nconst baseURL = `https://${process.env.REACT_APP_SERVER_URL}.com`;\n\nconst apiGet = axios.create({\n  baseURL,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\nconst apiCreate = axios.create({\n  baseURL,\n  headers: { \"Content-Type\": \"multipart/form-data\" },\n  responseType: \"blob\",\n});\n\nexport const getCollections = async (\n  creatorAddress: string,\n  validation: string\n): Promise<Collection[]> => {\n  creatorAddress = utils.getAddress(creatorAddress);\n  apiGet.defaults.responseType = \"json\";\n\n  const data: { collections: ApiCollection[] } = await apiGet\n    .post(\"/getCollectionsByCreatorAddress\", { creatorAddress, validation })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response) {\n        console.log(\"getCollectionsAPI\", err.response);\n      }\n    });\n\n  const collections = data?.collections?.map((c) =>\n    mapApiCollectionToCollection(c)\n  );\n  return collections;\n};\n\nexport const getSingleCollection = async (\n  contractAddress: string,\n  validation: string\n): Promise<any> => {\n  const data = await apiGet\n    .post(\"/getCollectionByContractAddress\", { contractAddress, validation })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response) {\n        console.log(\"getCollectionByContractAddress\", err.response);\n      }\n    });\n\n  const collection = mapApiCollectionToCollection(data.collections);\n  return collection;\n};\n\nexport const getMintPageContent = async (\n  contractAddress: string\n): Promise<any> => {\n  const data = await apiGet\n    .post(\"/getMintPageContent\", { contractAddress })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response) {\n        console.log(\"getMintPageContent\", err.response);\n      }\n    });\n\n  const mintPageContent = mintPageContentMapper(data);\n  return mintPageContent;\n};\n\nexport const getNftImagesByIds = async (\n  contractAddress: string,\n  nftIds: string[],\n  validation: string\n): Promise<any> => {\n  const data = await apiGet\n    .post(\"/getNftImagesByIds\", { nftIds, validation, contractAddress })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response) {\n        console.log(\"getNftImagesByIds\", err.response);\n      }\n    });\n\n  return data;\n};\n\nexport const updateMintPage = async (\n  data: any,\n  success: () => void,\n  failure: () => void\n) => {\n  const mintPage = await apiCreate\n    .post(\"/uploadMintPage\", data)\n    .then((res) => {\n      success();\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response) {\n        console.log(\"uploadMintPageApi\", err.response);\n        failure();\n      }\n    });\n\n  return mintPage;\n};\n\nexport const uploadPlaceholderMetaData = async (data: any) => {\n  const placeholderMetaData = await apiCreate\n    .post(\"/uploadPlaceholderMetaData\", data)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      if (err.response) {\n        console.log(\"uploadPlaceholderMetaData\", err.response);\n      }\n    });\n\n  return placeholderMetaData;\n};\n","import { createContext } from \"react\";\nimport {\n  CollectorControllerType,\n  useCollectorController,\n} from \"../hooks/useCollectorController\";\n\ninterface ICollectorContext extends CollectorControllerType {}\n\nexport const CollectorContext = createContext<ICollectorContext>(\n  {} as ICollectorContext\n);\n\nexport const CollectorProvider: React.FC = ({ children }) => {\n  const collectorController = useCollectorController();\n\n  return (\n    <CollectorContext.Provider value={{ ...collectorController }}>\n      {children}\n    </CollectorContext.Provider>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMintPageContent } from \"../api/api\";\nimport { MintPageContent } from \"../api/types\";\n\nexport type CollectorControllerType = {\n  isMintPage: boolean;\n  content: MintPageContent;\n};\n\nexport const useCollectorController = (): CollectorControllerType => {\n  const { pathname } = useLocation();\n  const isMintPage = pathname.includes(\"/mint\");\n\n  const [collection, setCollection] = useState<MintPageContent>(\n    {} as MintPageContent\n  );\n\n  useEffect(() => {\n    if (isMintPage) {\n      getMintPageContent(pathname.split(\"/mint/\")[1])\n        .then((collection: MintPageContent) => {\n          setCollection(collection);\n        })\n        .catch(() => {\n          console.log(\"could not find that collection\");\n        });\n    }\n  }, [pathname, isMintPage]);\n\n  return {\n    isMintPage,\n    content: collection,\n  };\n};\n","import { useEffect, useState } from \"react\";\n\nconst useDeviceDetect = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const handleWindowResize = () => {\n    setWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []);\n\n  return {\n    isMobile: width <= 1024,\n    isBigScreen: width >= 1920,\n  };\n};\n\nexport default useDeviceDetect;\n","import { Button, Flex, Image, Text } from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\nimport { CollectorContext } from \"../../system/context/CollectorContext\";\nimport useDeviceDetect from \"../../system/hooks/useDeviceDetect\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_BACKGROUND_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n} from \"../../theme/colors\";\n\nexport const AppFooter = () => {\n  const { isMobile } = useDeviceDetect();\n  const { uiText } = useUiText();\n  const { isMintPage, content } = useContext(CollectorContext);\n  return !isMintPage ? (\n    <Flex\n      h=\"200px\"\n      background={`linear-gradient( rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) ),  url(/foot_background.png)`}\n      backgroundSize=\"cover\"\n      backgroundRepeat=\"no-repeat\"\n      backgroundColor={APP_HEADER_BACKGROUND_COLOR}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Image src=\"/omakasea_symbol.png\" h=\"100px\" />\n    </Flex>\n  ) : (\n    <Flex\n      h=\"80px\"\n      bgColor={APP_HEADER_BACKGROUND_COLOR}\n      flexDir=\"row\"\n      justifyContent=\"space-between\"\n      alignItems={\"center\"}\n      px={isMobile ? \"25px\" : \"70px\"}\n    >\n      <Flex>\n        <Image src=\"/omakasea_symbol.png\" h=\"15px\" mr=\"8px\" />\n        <Text\n          fontFamily={\"body\"}\n          fontSize={\"10px\"}\n          color={APP_PRIMARY_CONTRAST_COLOR}\n        >\n          {uiText.createdWith}\n        </Text>\n      </Flex>\n      <Flex>\n        <Button\n          bgColor={APP_HEADER_BACKGROUND_COLOR}\n          _hover={{ opacity: \"0.8\" }}\n          mr={isMobile ? \"1px\" : \"5px\"}\n          p={0}\n          size={isMobile ? \"xs\" : \"lg\"}\n          as=\"a\"\n          href={content.discord}\n        >\n          <Image\n            src=\"/discord-white.png\"\n            h={isMobile ? \"24px\" : \"34px\"}\n            w={isMobile ? \"20px\" : \"30px\"}\n            objectFit={\"contain\"}\n          />\n        </Button>\n        <Button\n          bgColor={APP_HEADER_BACKGROUND_COLOR}\n          _hover={{ opacity: \"0.8\" }}\n          mr={isMobile ? \"1px\" : \"5px\"}\n          p={0}\n          size={isMobile ? \"xs\" : \"lg\"}\n          as=\"a\"\n          href={content.twitter}\n        >\n          <Image\n            src=\"/twitter-white.png\"\n            h={isMobile ? \"24px\" : \"34px\"}\n            w={isMobile ? \"20px\" : \"30px\"}\n            objectFit={\"contain\"}\n          />\n        </Button>\n        <Button\n          bgColor={APP_HEADER_BACKGROUND_COLOR}\n          _hover={{ opacity: \"0.8\" }}\n          mr={isMobile ? \"1px\" : \"5px\"}\n          p={0}\n          size={isMobile ? \"xs\" : \"lg\"}\n          as=\"a\"\n          href={content.instagram}\n        >\n          <Image\n            src=\"/instagram-white.png\"\n            h={isMobile ? \"24px\" : \"34px\"}\n            w={isMobile ? \"20px\" : \"30px\"}\n            objectFit={\"contain\"}\n          />\n        </Button>\n        <Button\n          bgColor={APP_HEADER_BACKGROUND_COLOR}\n          _hover={{ opacity: \"0.8\" }}\n          mr={isMobile ? \"1px\" : \"5px\"}\n          p={0}\n          size={isMobile ? \"xs\" : \"lg\"}\n          as=\"a\"\n          href={content.opensea}\n        >\n          <Image\n            src=\"/opensea-white.png\"\n            h={isMobile ? \"24px\" : \"34px\"}\n            w={isMobile ? \"20px\" : \"30px\"}\n            objectFit={\"contain\"}\n          />\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Button, Text } from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\nimport { FaWallet } from \"react-icons/fa\";\nimport { CollectorContext } from \"../../system/context/CollectorContext\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_BACKGROUND_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n} from \"../../theme/colors\";\nimport { ConnectWalletButtonProps } from \"./types\";\n\nexport const ConnectWalletButton = ({\n  onClick,\n  isConnected,\n  connectPending,\n}: ConnectWalletButtonProps) => {\n  const { uiText } = useUiText();\n  const { isMintPage } = useContext(CollectorContext);\n  return (\n    <Button\n      p={1}\n      disabled={isConnected && isMintPage}\n      _disabled={{ opacity: 100, cursor: \"default\" }}\n      color={APP_SECONDARY_COLOR}\n      rightIcon={<FaWallet />}\n      onClick={onClick}\n      variant=\"ghost\"\n      _hover={{ backgroundColor: APP_HEADER_BACKGROUND_COLOR }}\n      _active={{ bg: \"none\" }}\n      _focus={{ borderColor: \"white\" }}\n      isLoading={connectPending}\n    >\n      <Text\n        display={isMintPage ? \"block\" : [\"none\", \"none\", \"block\"]}\n        fontSize={[\"12px\", \"12px\", \"16px\"]}\n        fontFamily=\"body\"\n        fontWeight={\"semibold\"}\n        color={isConnected ? APP_SECONDARY_COLOR : APP_PRIMARY_CONTRAST_COLOR}\n        mr={[\"8px\", \"8px\", 5]}\n      >\n        {isConnected ? `Connected` : uiText.connectWallet}\n      </Text>\n    </Button>\n  );\n};\n","import { Button } from \"@chakra-ui/button\";\nimport {\n  APP_PRIMARY_BUTTON_TEXT,\n  APP_SECONDARY_COLOR_DARK,\n  APP_SECONDARY_COLOR,\n} from \"../../theme/colors\";\nimport { ButtonProps } from \"./types\";\n\nexport const PrimaryButton = ({ text, ...rest }: ButtonProps) => {\n  return (\n    <Button\n      color={APP_PRIMARY_BUTTON_TEXT}\n      backgroundColor={APP_SECONDARY_COLOR}\n      _hover={{ backgroundColor: APP_SECONDARY_COLOR_DARK }}\n      _focus={{ border: \"none\" }}\n      p=\"25px 40px 25px 40px\"\n      fontFamily={\"montserrat\"}\n      fontSize={\"16px\"}\n      fontWeight={\"bold\"}\n      {...rest}\n    >\n      {text}\n    </Button>\n  );\n};\n","import {\n  Flex,\n  ModalCloseButton,\n  Image,\n  chakra,\n  Button,\n  ModalContent,\n  Modal,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_WARNING_COLOR,\n  BUTTON_BORDER_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../../theme/colors\";\nimport { NoReceiptModalProps } from \"./types\";\n\nfunction NoReceiptModal({ isOpen, onClose }: NoReceiptModalProps) {\n  const { uiText } = useUiText();\n  const { walletModal } = React.useContext(ModalContext);\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} scrollBehavior=\"inside\">\n        <ModalOverlay />\n        <ModalContent\n          mb={0}\n          h=\"86vh\"\n          bg=\"transparent\"\n          position=\"absolute\"\n          right=\"85px\"\n        >\n          <ModalCloseButton color={APP_PRIMARY_CONTRAST_COLOR} />\n          <Flex\n            flexDir=\"column\"\n            h=\"100%\"\n            align=\"center\"\n            justifyContent={\"center\"}\n            bgColor={WALLET_MODAL_ALT_BG_COLOR}\n            p={\"10px\"}\n            borderRadius={8}\n          >\n            <Flex flexDir=\"column\" align=\"center\">\n              <chakra.h1\n                color={APP_WARNING_COLOR}\n                textAlign={\"center\"}\n                fontSize={\"28px\"}\n                fontWeight={\"bold\"}\n                width={\"218px\"}\n              >\n                {uiText.noReceiptsTitle}\n              </chakra.h1>\n              <chakra.h1\n                mt=\"11px\"\n                color={APP_HEADER_TEXT_COLOR}\n                textAlign={\"center\"}\n                fontSize={\"12px\"}\n              >\n                {uiText.noReceiptsSubTitle}\n              </chakra.h1>\n            </Flex>\n            <Image\n              src=\"/Chef.png\"\n              height={\"332px\"}\n              width={\"332px\"}\n              objectFit={\"contain\"}\n            />\n            <Button\n              w={\"205px\"}\n              height={\"44px\"}\n              color={APP_HEADER_TEXT_COLOR}\n              bgColor={WALLET_MODAL_ALT_BG_COLOR}\n              borderWidth={1}\n              borderColor={BUTTON_BORDER_COLOR}\n              fontSize={\"12px\"}\n              _hover={{ color: BUTTON_BORDER_COLOR }}\n              onClick={() => walletModal.onOpen()}\n            >\n              {uiText.mintReceipt}\n            </Button>\n            <Button\n              height={\"44px\"}\n              color={APP_HEADER_TEXT_COLOR}\n              bgColor={WALLET_MODAL_ALT_BG_COLOR}\n              fontSize={\"12px\"}\n              _hover={{ color: BUTTON_BORDER_COLOR }}\n              as=\"a\"\n              href=\"/home#receipt-section\"\n              onClick={() => onClose()}\n            >\n              {uiText.learnMore}\n            </Button>\n          </Flex>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default NoReceiptModal;\n","import React from \"react\";\n\nenum AppModals {\n  walletModal = \"walletModal\",\n  noReceiptsModal = \"noReceiptsModal\",\n  transactionPendingModal = \"transactionPendingModal\",\n  transactionSuccessful = \"transactionPendingModal\",\n}\n\nexport type ModalController = {\n  [Name in AppModals]: {\n    isOpen: boolean;\n    onOpen: (tabIndex?: number, collectionId?: string) => void;\n    onClose: () => void;\n  };\n} & {\n  walletModalTabIndex: number;\n  collectionId: string;\n};\n\nexport const useModalController = (): ModalController => {\n  const [walletModalIsOpen, setWalletModalIsOpen] =\n    React.useState<boolean>(false);\n\n  const [noReceiptsModalIsOpen, setNoReceiptsModalIsOpen] =\n    React.useState<boolean>(false);\n\n  const [transactionPendingModalIsOpen, setTransactionPendingModalIsOpen] =\n    React.useState<boolean>(false);\n\n  const [walletModalTabIndex, setWalletTabIndex] = React.useState<number>(0);\n  const [collectionId, setCollectionId] = React.useState<string>(\"\");\n\n  return {\n    walletModal: {\n      isOpen: walletModalIsOpen,\n      onOpen: (tabIndex?: number, collectionId?: string) => {\n        setWalletModalIsOpen(true);\n        setWalletTabIndex(tabIndex || 0);\n        setCollectionId(collectionId || \"\");\n      },\n      onClose: () => setWalletModalIsOpen(false),\n    },\n    noReceiptsModal: {\n      isOpen: noReceiptsModalIsOpen,\n      onOpen: (tabIndex?: number, collectionId?: string) => {\n        setNoReceiptsModalIsOpen(true);\n      },\n      onClose: () => setNoReceiptsModalIsOpen(false),\n    },\n    transactionPendingModal: {\n      isOpen: transactionPendingModalIsOpen,\n      onOpen: (tabIndex?: number, collectionId?: string) => {\n        setTransactionPendingModalIsOpen(true);\n      },\n      onClose: () => setTransactionPendingModalIsOpen(false),\n    },\n    walletModalTabIndex,\n    collectionId,\n  };\n};\n","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\nimport { Image, Modal, ModalOverlay, ModalContent } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_LABEL,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../../theme/colors\";\nimport { TransactionPendingModalProps } from \"./types\";\n\nexport const TransactionPendingModal = ({\n  isOpen,\n  onClose,\n}: TransactionPendingModalProps) => {\n  const { uiText } = useUiText();\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} scrollBehavior=\"inside\">\n        <ModalOverlay />\n        <ModalContent\n          mb={0}\n          maxWidth=\"388px\"\n          height=\"663px\"\n          top={3}\n          position=\"absolute\"\n          right=\"85px\"\n          bgColor=\"transparent\"\n        >\n          <Flex\n            flexDir=\"column\"\n            h=\"100%\"\n            align=\"center\"\n            justify=\"space-around\"\n            bgColor={WALLET_MODAL_ALT_BG_COLOR}\n            p={10}\n            borderRadius={\"12px\"}\n          >\n            <Flex flexDir=\"column\" align=\"center\">\n              <Heading\n                w={\"160px\"}\n                fontSize={\"25px\"}\n                fontWeight={\"bold\"}\n                color={APP_SECONDARY_LABEL}\n                textAlign={\"center\"}\n              >\n                {uiText.processingTransaction}\n              </Heading>\n            </Flex>\n            <Image\n              src={\"./LoadingAnimation.gif\"}\n              w=\"293px\"\n              h=\"293px\"\n              objectFit={\"contain\"}\n            />\n            <Text\n              fontWeight={\"semibold\"}\n              fontSize={\"14px\"}\n              fontFamily={\"heading\"}\n              color={APP_PRIMARY_CONTRAST_COLOR}\n            >\n              {uiText.transactionInProgressMessage}\n            </Text>\n          </Flex>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","export const DISCORD_PAGE_HREF = \"http://discord.gg/omakasea\";\nexport const MASATOSHI_CONTRACT_ADDRESS = process.env.REACT_APP_MASATOSHI_CONTRACT_ADDRESS;\nexport const whitelistedAddresses = [\n  \"0x8e3E7850b360B9C152481aDd56b7A510880495e7\"\n]\n","import { ethers } from \"ethers\";\nimport React from \"react\";\nimport {\n  MASATOSHI_CONTRACT_ADDRESS,\n  whitelistedAddresses,\n} from \"../../constants\";\nimport { WalletContext } from \"../../context/WalletContext\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { EthereumRequests } from \"./ethereumRequests\";\n\nconst masterchefMasatoshi_json = require(\"../../../contracts/MasterchefMasatoshi.json\");\n\nexport type Contract = {\n  contract: ethers.Contract | undefined;\n  hasReceipt: boolean;\n  mintToken: () => any;\n  preMint: (amount: number) => void;\n  transactionPending: boolean;\n  transactionSuccessful: boolean;\n  transactionUnSuccessful: boolean;\n  resetTransactionState: () => void;\n  tokenIds: number[];\n  enableMinting: () => void;\n  saleIsActive: boolean;\n  tokenBalancePending: boolean;\n  currentTokenBalance: number;\n  withDrawEth: (ethereum: Web3Provider, address: string) => void;\n  getTotalSupply: () => void;\n  totalSupply: number;\n  revealCollection: (uri: string) => void;\n  baseUri: string;\n  setProvenance: (provenanceHash: string) => void;\n  provenance: string;\n  mintPrice: number;\n};\n\nexport const useContract = (address?: string) => {\n  const { ethereum, account, isWrongNetwork } = React.useContext(WalletContext);\n\n  const [contract, setContract] = React.useState<ethers.Contract>();\n  const [currentTokenBalance, setCurrentTokenBalance] = React.useState<number>(\n    undefined as unknown as number\n  );\n  const [isWhitelistedAddress, setIsWhitelistedAddress] = React.useState(false);\n  const [totalSupply, setTotalSupply] = React.useState<number>(\n    undefined as unknown as number\n  );\n  const [transactionPending, setTransactionPending] = React.useState(false);\n  const [transactionSuccessful, setTransactionSuccessful] =\n    React.useState(false);\n  const [transactionUnSuccessful, setTransactionUnSuccessful] =\n    React.useState(false);\n  const [tokenIds, setTokenIds] = React.useState<number[]>([]);\n  const [saleIsActive, setSaleIsActive] = React.useState<boolean>(false);\n  const [currentBaseUri, setCurrentBaseUri] = React.useState<string>(\n    undefined as unknown as string\n  );\n  const [currentProvenance, setCurrentProvenance] = React.useState<string>(\n    undefined as unknown as string\n  );\n\n  const [tokenBalancePending, setTokenBalancePending] =\n    React.useState<boolean>(false);\n\n  const [mintPrice, setMintPrice] = React.useState<number>(0);\n\n  const getTokenBalance = async (\n    contract: ethers.Contract,\n    account: string\n  ) => {\n    setTokenBalancePending(true);\n    if (contract && account && !isWrongNetwork)\n      for (let address of whitelistedAddresses) {\n        if (account === address) {\n          setIsWhitelistedAddress(true);\n        }\n      }\n    await contract\n      .balanceOf(account)\n      .then((b: any) => {\n        setCurrentTokenBalance(b.toNumber());\n      })\n      .catch((err: any) => console.log(err));\n  };\n\n  const getTotalSupply = async () => {\n    if (contract) {\n      await contract.totalSupply().then((b: any) => {\n        setTotalSupply(b.toNumber());\n      });\n    }\n  };\n\n  const getBaseUri = async (contract: ethers.Contract) => {\n    if (contract)\n      await contract\n        .baseURI()\n        .then((b: any) => {\n          setCurrentBaseUri(b);\n        })\n        .catch((err: any) => console.log(err));\n  };\n\n  const getProvenance = async () => {\n    if (contract)\n      await contract\n        .PROVENANCE()\n        .then((p: any) => {\n          setCurrentProvenance(p);\n        })\n        .catch((err: any) => console.log(err));\n  };\n\n  const getReceipts = async (\n    contract: ethers.Contract,\n    tokenBalance: number\n  ) => {\n    setTokenBalancePending(true);\n\n    if (tokenBalance && account) {\n      let ids: number[] = [];\n      for (let i = 0; i < tokenBalance; i++) {\n        await contract\n          .tokenOfOwnerByIndex(account, i)\n          .then((id: any) => ids.push(id.toNumber()))\n          .then(() => setTokenIds(ids))\n          .catch((err: any) => {\n            setTokenIds([]);\n          });\n      }\n    }\n    setTokenBalancePending(false);\n  };\n\n  const getSalesState = async (contract: ethers.Contract) => {\n    const enabled = await contract?.saleIsActive();\n    setSaleIsActive(enabled);\n  };\n\n  const resetTransactionState = () => {\n    setTransactionSuccessful(false);\n    setTransactionUnSuccessful(false);\n  };\n\n  const getMintPrice = async () => {\n    await contract?.mintPrice().then((p: any) => {\n      const price = parseInt(p) / Math.pow(10, 18) || 0;\n      setMintPrice(price);\n    });\n  };\n\n  React.useEffect(() => {\n    if (ethereum && account && !isWrongNetwork) {\n      const contract =\n        ethereum &&\n        new ethers.Contract(\n          address || MASATOSHI_CONTRACT_ADDRESS!,\n          masterchefMasatoshi_json[\"abi\"],\n          ethereum.getSigner(account)\n        );\n      setContract(contract);\n      getTokenBalance(contract, account);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ethereum, account, isWrongNetwork]);\n\n  React.useEffect(() => {\n    if (transactionSuccessful && contract && account) {\n      getTokenBalance(contract, account);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transactionSuccessful, contract, account]);\n\n  React.useEffect(() => {\n    if (contract) {\n      getReceipts(contract, currentTokenBalance);\n      getMintPrice();\n      getSalesState(contract);\n\n      if (contract.address !== MASATOSHI_CONTRACT_ADDRESS) {\n        getTotalSupply();\n        getBaseUri(contract);\n        getProvenance();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentTokenBalance, contract]);\n\n  const mintToken = async () => {\n    setTransactionPending(true);\n    setTokenBalancePending(true);\n\n    const price = await contract?.mintPrice();\n\n    await contract\n      ?.mintTokens(1, { value: price })\n      .then(() => {\n        let tokenBalance: number;\n\n        const pollTransactionState = setInterval(() => {\n          contract?.balanceOf(account).then((b: any) => {\n            tokenBalance = b.toNumber();\n          });\n          if (tokenBalance === currentTokenBalance + 1) {\n            clearInterval(pollTransactionState);\n            setCurrentTokenBalance(tokenBalance);\n            setTransactionPending(false);\n            setTransactionSuccessful(true);\n          }\n        }, 5000);\n      })\n      .catch(() => {\n        setTransactionUnSuccessful(true);\n        setTransactionPending(false);\n      });\n  };\n\n  const preMint = async (amount: number) => {\n    setTransactionPending(true);\n    await contract\n      ?.preMint(amount)\n      .then(() => {\n        setTransactionSuccessful(true);\n        let tokenBalance: number;\n\n        const pollTransactionState = setInterval(() => {\n          contract?.balanceOf(account).then((b: any) => {\n            tokenBalance = b.toNumber();\n          });\n\n          if (tokenBalance === currentTokenBalance + 1) {\n            clearInterval(pollTransactionState);\n            setCurrentTokenBalance(tokenBalance);\n            setTransactionPending(false);\n          }\n        }, 5000);\n      })\n      .catch((err: any) => {\n        console.error(err);\n        setTransactionUnSuccessful(true);\n        setTransactionPending(false);\n      });\n  };\n\n  const enableMinting = async () => {\n    setTransactionPending(true);\n    await contract\n      ?.flipSaleState()\n      .then(() => {\n        let saleState: boolean;\n\n        const pollSaleState = setInterval(() => {\n          contract?.saleIsActive().then((s: boolean) => (saleState = s));\n          if (saleState === !saleIsActive) {\n            clearInterval(pollSaleState);\n            setSaleIsActive(saleState);\n            setTransactionPending(false);\n          }\n        }, 5000);\n      })\n      .catch((err: any) => {\n        console.error(err);\n        setTransactionPending(false);\n      });\n  };\n\n  const revealCollection = async (baseUri: string) => {\n    setTransactionPending(true);\n    await contract\n      ?.setBaseURI(baseUri)\n      .then(() => {\n        let baseUri: string;\n\n        const pollBaseUriState = setInterval(() => {\n          contract?.baseURI().then((uri: string) => (baseUri = uri));\n          if (!!baseUri) {\n            clearInterval(pollBaseUriState);\n            setCurrentBaseUri(baseUri);\n            setTransactionPending(false);\n          }\n        }, 5000);\n      })\n      .catch((err: any) => {\n        console.log(err);\n        setTransactionPending(false);\n      });\n  };\n\n  const withDrawEth = async (ethereum: Web3Provider, address: string) => {\n    setTransactionPending(true);\n    await contract\n      ?.withdraw()\n      .then(() => {\n        let balance: number;\n\n        const pollSaleState = setInterval(() => {\n          const requests = new EthereumRequests(ethereum);\n          requests.getBalance(address).then((b) => {\n            const value = parseInt(b) / Math.pow(10, 18) || 0;\n            balance = value;\n          });\n          if (balance === 0) {\n            clearInterval(pollSaleState);\n            setTransactionPending(false);\n          }\n        }, 5000);\n      })\n      .catch((err: any) => {\n        console.log(err);\n        setTransactionPending(false);\n      });\n  };\n\n  const setProvenance = async (provenanceHash: string) => {\n    setTransactionPending(true);\n    await contract\n      ?.setProvenanceHash(provenanceHash)\n      .then(() => {\n        let provenance: string;\n\n        const pollProvenanceState = setInterval(() => {\n          contract.PROVENANCE().then((p: any) => {\n            provenance = p;\n          });\n          if (!!provenance) {\n            clearInterval(pollProvenanceState);\n            setCurrentProvenance(provenance);\n            setTransactionPending(false);\n          }\n        }, 5000);\n      })\n      .catch((err: any) => {\n        console.log(err);\n        setTransactionPending(false);\n      });\n  };\n\n  return {\n    contract,\n    hasReceipt: !!currentTokenBalance || !!isWhitelistedAddress,\n    mintToken,\n    preMint,\n    transactionPending,\n    transactionSuccessful,\n    transactionUnSuccessful,\n    resetTransactionState,\n    tokenIds,\n    enableMinting,\n    saleIsActive,\n    tokenBalancePending,\n    currentTokenBalance,\n    getTokenBalance,\n    withDrawEth,\n    getTotalSupply,\n    totalSupply,\n    revealCollection,\n    baseUri: currentBaseUri,\n    setProvenance,\n    provenance: currentProvenance,\n    mintPrice,\n  };\n};\n","import { ethers } from \"ethers\";\nimport React from \"react\";\nimport { Contract, useContract } from \"../hooks/ethereum/useContract\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\ninterface IContractContext extends Contract {}\n\nexport const ContractContext = React.createContext<IContractContext>({\n  contract: {} as ethers.Contract,\n  hasReceipt: false,\n  mintToken: () => null,\n  preMint: (amount: number) => null,\n  transactionPending: false,\n  transactionSuccessful: false,\n  transactionUnSuccessful: false,\n  resetTransactionState: () => null,\n  tokenIds: [],\n  enableMinting: () => null,\n  saleIsActive: false,\n  tokenBalancePending: false,\n  currentTokenBalance: 0,\n  withDrawEth: (ethereum: Web3Provider, address: string) => null,\n  totalSupply: 0,\n  getTotalSupply: () => null,\n  revealCollection: (uri: string) => null,\n  baseUri: undefined as unknown as string,\n  setProvenance: (provenanceHash: string) => null,\n  provenance: undefined as unknown as string,\n  mintPrice: 0,\n});\n\nexport const ContractProvider: React.FC = React.memo(({ children }) => {\n  const contract = useContract();\n\n  return (\n    <ContractContext.Provider value={{ ...contract }}>\n      {children}\n    </ContractContext.Provider>\n  );\n});\n","import { ethers } from \"ethers\";\nimport React from \"react\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\nimport {\n  Contract,\n  useContract,\n} from \"../../../system/hooks/ethereum/useContract\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\ninterface IContractContext extends Contract {}\n\nexport const CollectionContractContext = React.createContext<IContractContext>({\n  contract: {} as ethers.Contract,\n  hasReceipt: false,\n  mintToken: () => null,\n  preMint: (amount: number) => null,\n  transactionPending: false,\n  transactionSuccessful: false,\n  transactionUnSuccessful: false,\n  resetTransactionState: () => null,\n  tokenIds: [],\n  enableMinting: () => null,\n  saleIsActive: false,\n  tokenBalancePending: false,\n  currentTokenBalance: 0,\n  withDrawEth: (ethereum: Web3Provider, address: string) => null,\n  totalSupply: 0,\n  getTotalSupply: () => null,\n  revealCollection: (uri: string) => null,\n  baseUri: undefined as unknown as string,\n  setProvenance: (provenanceHash: string) => null,\n  provenance: undefined as unknown as string,\n  mintPrice: undefined as unknown as number,\n});\n\nexport const CollectionContractProvider: React.FC<{\n  contractAddress: string;\n}> = ({ children, contractAddress }) => {\n  const contract = useContract(contractAddress);\n  const { transactionPendingModal } = React.useContext(ModalContext);\n\n  React.useEffect(() => {\n    if (contract.transactionPending && !transactionPendingModal.isOpen) {\n      transactionPendingModal.onOpen();\n    }\n\n    if (!contract.transactionPending && transactionPendingModal.isOpen) {\n      transactionPendingModal.onClose();\n    }\n  }, [contract.transactionPending, transactionPendingModal]);\n\n  return (\n    <CollectionContractContext.Provider value={{ ...contract }}>\n      {children}\n    </CollectionContractContext.Provider>\n  );\n};\n","import { Button } from \"@chakra-ui/button\";\nimport {\n  APP_ERROR_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n} from \"../../theme/colors\";\nimport { ButtonProps } from \"./types\";\n\nexport const WarningButton = ({ text, ...rest }: ButtonProps) => {\n  return (\n    <Button\n      color={APP_PRIMARY_CONTRAST_COLOR}\n      backgroundColor={APP_ERROR_COLOR}\n      _hover={{ backgroundColor: APP_ERROR_COLOR }}\n      _focus={{ border: \"none\" }}\n      p=\"25px 40px 25px 40px\"\n      fontFamily={\"heading\"}\n      fontWeight={\"bold\"}\n      fontSize={\"12px\"}\n      {...rest}\n    >\n      {text}\n    </Button>\n  );\n};\n","import {\n  Heading,\n  Button,\n  Box,\n  ModalHeader,\n  Text,\n  Flex,\n  IconButton,\n  Divider,\n  Tooltip,\n  Image,\n} from \"@chakra-ui/react\";\nimport {\n  APP_IMAGE_PLACEHOLDER_COLOR,\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n  COLLECTION_IMAGE_BACKGROUND,\n  COLLECTION_IMAGE_TEXT,\n} from \"../../../theme/colors\";\nimport { CollectionDetailsProps } from \"./types\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { PrimaryButton } from \"../../../components/buttons\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { AiFillQuestionCircle } from \"react-icons/ai\";\nimport React, { useState } from \"react\";\nimport { EthereumRequests } from \"../../../system/hooks/ethereum/ethereumRequests\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { WalletContext } from \"../../../system/context/WalletContext\";\nimport { WarningButton } from \"../../../components/buttons/WarningButton\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\nimport { CollectionContractContext } from \"./CollectionContractContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Dropzone, { FileWithPath } from \"react-dropzone\";\nimport { uploadPlaceholderMetaData } from \"../../../system/api/api\";\n\nconst INFO_ICON_BG_COLOR = \"#b2b2b2\";\n\nexport const CollectionDetails = ({\n  collection,\n  onBackToCollections,\n  goToEnableMinting,\n  goToProvenance,\n  goToRevealCollection,\n}: CollectionDetailsProps) => {\n  const { uiText } = useUiText();\n  const navigate = useNavigate();\n  const { ethereum, validation } = React.useContext(WalletContext);\n  const { walletModal } = React.useContext(ModalContext);\n\n  const {\n    saleIsActive,\n    enableMinting,\n    transactionPending,\n    getTotalSupply,\n    totalSupply,\n    baseUri,\n    withDrawEth,\n    provenance,\n  } = React.useContext(CollectionContractContext);\n  const { transactionPendingModal } = React.useContext(ModalContext);\n  const [collectionThumbnail, setCollectionThumbnail] = useState(\"\");\n  const [collectionThumbnailFile, setCollectionThumbnailFile] =\n    useState<FileWithPath>();\n  const [copyButtonTooltip, setCopyButtonTooltip] = React.useState<string>(\n    uiText.copyButtonTooltip\n  );\n  const [balance, setBalance] = React.useState(0);\n\n  const handleGoToEnableMinting = () => {\n    goToEnableMinting(true);\n  };\n\n  const handleGoToProvenance = () => {\n    goToProvenance(true);\n  };\n\n  const handleDisableMinting = () => {\n    enableMinting();\n  };\n\n  const handleCopy = () => {\n    setCopyButtonTooltip(uiText.copyButtonSuccessTooltip);\n    setTimeout(() => {\n      setCopyButtonTooltip(uiText.copyButtonTooltip);\n    }, 5000);\n  };\n\n  const handleBalance = async (ethereum: Web3Provider, address: string) => {\n    const requests = new EthereumRequests(ethereum);\n    const balance = await requests.getBalance(address).then((balance) => {\n      const value = parseInt(balance) / Math.pow(10, 18) || 0;\n      return value;\n    });\n    return balance;\n  };\n\n  const handleWithdrawEth = () => {\n    if (balance === 0)\n      if (ethereum) {\n        withDrawEth(ethereum, collection.contractAddress);\n      }\n  };\n\n  const uploadImageData = () => {\n    let formData = new FormData();\n\n    formData.append(\"validation\", validation);\n    formData.append(\"contractAddress\", collection?.contractAddress || \"\");\n    formData.append(\"description\", \"\");\n    formData.append(\"placeholders\", collectionThumbnailFile as FileWithPath);\n\n    uploadPlaceholderMetaData(formData);\n  };\n\n  React.useEffect(() => {\n    if (ethereum) {\n      handleBalance(ethereum, collection.contractAddress).then((b) =>\n        setBalance(b)\n      );\n    }\n  }, [collection, ethereum]);\n\n  React.useEffect(() => {\n    if (transactionPending) {\n      transactionPendingModal.onOpen();\n    }\n  }, [transactionPending, transactionPendingModal]);\n\n  React.useEffect(() => {\n    getTotalSupply();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (collectionThumbnailFile) {\n      uploadImageData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [collectionThumbnailFile]);\n\n  const renderEnableMintingButtons = () => {\n    return saleIsActive ? (\n      <WarningButton\n        w=\"160px\"\n        text={uiText.pauseMinting}\n        onClick={handleDisableMinting}\n      />\n    ) : (\n      <PrimaryButton\n        w=\"160px\"\n        fontFamily={\"heading\"}\n        fontWeight={\"bold\"}\n        fontSize={\"12px\"}\n        text={provenance ? uiText.enableMinting : uiText.startSale}\n        onClick={provenance ? handleGoToEnableMinting : handleGoToProvenance}\n      />\n    );\n  };\n\n  const openInNewTab = (url: string) => {\n    window.open(url, \"_blank\")?.focus();\n  };\n\n  const renderCollectionImage = () => {\n    return !collection.collectionImage ? (\n      <Image\n        h={\"236px\"}\n        w={\"210px\"}\n        objectFit=\"cover\"\n        borderRadius=\"5px\"\n        src={collection.collectionImage}\n        bgColor={APP_IMAGE_PLACEHOLDER_COLOR}\n        mr={\"32px\"}\n      />\n    ) : (\n      <Dropzone\n        onDrop={(acceptedFiles) => {\n          //auto save from here\n          setCollectionThumbnail(URL.createObjectURL(acceptedFiles[0]));\n          setCollectionThumbnailFile(acceptedFiles[0]);\n        }}\n        multiple={false}\n        accept=\"image/*\"\n        maxSize={10485760}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Flex\n            h={\"236px\"}\n            w={\"224px\"}\n            bgColor={COLLECTION_IMAGE_BACKGROUND}\n            mr={\"32px\"}\n            borderRadius=\"5px\"\n            flexDir={\"column\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            {...getRootProps()}\n          >\n            <input {...getInputProps()} />\n            {collectionThumbnail ? (\n              <Image\n                h={\"236px\"}\n                w={\"224px\"}\n                objectFit=\"cover\"\n                borderRadius=\"5px\"\n                src={collectionThumbnail}\n                bgColor={APP_IMAGE_PLACEHOLDER_COLOR}\n              />\n            ) : (\n              <Flex\n                flexDir={\"column\"}\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Image\n                  src=\"/add-image.png\"\n                  w=\"35px\"\n                  h=\"35px\"\n                  objectFit={\"contain\"}\n                  opacity={0.25}\n                  mb=\"17px\"\n                />\n                <Text\n                  fontFamily={\"heading\"}\n                  fontSize=\"8px\"\n                  fontWeight={\"medium\"}\n                  color={COLLECTION_IMAGE_TEXT}\n                  opacity={0.25}\n                  w=\"52px\"\n                  textAlign={\"center\"}\n                >\n                  {uiText.addPreviewImage}\n                </Text>\n              </Flex>\n            )}\n          </Flex>\n        )}\n      </Dropzone>\n    );\n  };\n\n  return (\n    <Box\n      overflow={\"auto\"}\n      display={\"flex\"}\n      flexDir={\"column\"}\n      justifyContent={\"space-between\"}\n      pb={10}\n    >\n      <Box>\n        <ModalHeader position=\"relative\">\n          <Text\n            fontFamily={\"body\"}\n            fontWeight={\"normal\"}\n            color={APP_TEXT_INACTIVE_COLOR}\n            fontSize=\"12px\"\n          >\n            {collection?.symbol}\n          </Text>\n          <Heading fontSize={\"28px\"} fontWeight={\"bold\"}>\n            {collection?.name}\n          </Heading>\n          <IconButton\n            aria-label=\"button\"\n            position=\"absolute\"\n            top={2}\n            right={5}\n            onClick={onBackToCollections}\n            size={\"lg\"}\n            bg=\"transparent\"\n            _focus={{ border: \"none\" }}\n            _hover={{ cursor: \"pointer\" }}\n            icon={<AiOutlineArrowLeft />}\n          />\n        </ModalHeader>\n        <Flex flexDir=\"column\" p=\"5px 30px 30px 30px\">\n          <Flex mb={5}>\n            {renderCollectionImage()}\n            <Flex flexDir=\"column\" justifyContent=\"center\">\n              <Box>\n                <Text\n                  fontFamily={\"heading\"}\n                  fontSize=\"11px\"\n                  fontWeight={\"bold\"}\n                  w=\"80px\"\n                >\n                  {uiText.createdOn}\n                </Text>\n                <Text fontSize=\"9px\" fontFamily={\"aeonik\"}>\n                  {collection.dateCreated}\n                </Text>\n              </Box>\n              <Box mt={\"32px\"} w=\"80px\">\n                <Text\n                  fontFamily={\"heading\"}\n                  fontWeight={\"bold\"}\n                  fontSize=\"11px\"\n                >\n                  {uiText.totalMinted}\n                </Text>\n                <Text fontSize=\"9px\" fontFamily={\"aeonik\"}>\n                  {totalSupply}\n                </Text>\n              </Box>\n              <Flex\n                flex={1}\n                flexDir={\"column\"}\n                alignItems={\"center\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Button\n                  onClick={() =>\n                    openInNewTab(\n                      `https://etherscan.io/address/${collection.contractAddress}`\n                    )\n                  }\n                  height={\"39px\"}\n                  width={\"30px\"}\n                  borderRadius={\"40px\"}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  p=\"0\"\n                  bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                >\n                  <Image\n                    alt=\"Etherscan\"\n                    w=\"30px\"\n                    h=\"29px\"\n                    objectFit={\"contain\"}\n                    src=\"./etherscan.png\"\n                  />\n                </Button>\n                <Button\n                  alt=\"Opensea\"\n                  disabled\n                  mx={\"5px\"}\n                  height={\"39px\"}\n                  width={\"30px\"}\n                  borderRadius={\"40px\"}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  p=\"0\"\n                  bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                >\n                  <Image\n                    w=\"30px\"\n                    h=\"29px\"\n                    objectFit={\"contain\"}\n                    src=\"./opensea.png\"\n                  />\n                </Button>\n                <Button\n                  onClick={() => {\n                    const metaDataBaseUrl = collection.metaDataBaseUrl;\n                    const ipfs = metaDataBaseUrl.split(\"ipfs://\")[1];\n                    openInNewTab(`https://ipfs.io/ipfs/${ipfs}`);\n                  }}\n                  alt=\"IPFS\"\n                  height={\"39px\"}\n                  width={\"30px\"}\n                  borderRadius={\"40px\"}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  p=\"0\"\n                  bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                >\n                  <Image\n                    w=\"30px\"\n                    h=\"29px\"\n                    objectFit={\"contain\"}\n                    src=\"./ipfs.png\"\n                  />\n                </Button>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex flexDir=\"column\">\n            <Flex justify=\"space-between\" mb={3}>\n              <Box>\n                <Text\n                  fontFamily={\"heading\"}\n                  fontWeight={\"bold\"}\n                  fontSize=\"11px\"\n                >\n                  {uiText.contractAddress}\n                </Text>\n                <Text\n                  mt=\"4px\"\n                  w=\"238px\"\n                  fontFamily={\"body\"}\n                  whiteSpace={\"nowrap\"}\n                  overflow={\"hidden\"}\n                  textOverflow={\"ellipsis\"}\n                  color={APP_TEXT_INACTIVE_COLOR}\n                  fontSize={\"10px\"}\n                >\n                  {collection.contractAddress}\n                </Text>\n              </Box>\n              <Tooltip\n                label={copyButtonTooltip}\n                closeOnClick={false}\n                arrow\n                shouldWrapChildren\n              >\n                <CopyToClipboard\n                  text={collection.contractAddress}\n                  onCopy={handleCopy}\n                >\n                  <IconButton\n                    bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                    aria-label=\"button\"\n                    icon={<MdContentCopy />}\n                  />\n                </CopyToClipboard>\n              </Tooltip>\n            </Flex>\n            <Divider mb={3} />\n            <Flex\n              flexDir={\"row\"}\n              alignItems={\"center\"}\n              justify=\"space-between\"\n              mb={3}\n            >\n              <Box>\n                <Flex alignItems={\"center\"}>\n                  <Text\n                    fontFamily={\"heading\"}\n                    fontWeight={\"bold\"}\n                    fontSize=\"11px\"\n                    mr={\"10px\"}\n                  >\n                    {uiText.contractBalance}\n                  </Text>\n                  <Tooltip\n                    label={uiText.withdrawFundsTooltip}\n                    placement=\"top\"\n                    fontFamily={\"body\"}\n                    fontWeight={\"bold\"}\n                    fontSize=\"11px\"\n                    borderRadius={\"5px\"}\n                    p={\"12px\"}\n                    maxW={200}\n                    hasArrow\n                    shouldWrapChildren\n                  >\n                    <AiFillQuestionCircle\n                      color={INFO_ICON_BG_COLOR}\n                      cursor=\"pointer\"\n                      size={\"11px\"}\n                    />\n                  </Tooltip>\n                </Flex>\n                <Flex flexDir={\"row\"} fontFamily={\"row\"} mt={\"4px\"}>\n                  <Flex flex={\"col\"}>\n                    <Text\n                      fontSize={\"10px\"}\n                      fontFamily={\"body\"}\n                      fontWeight={\"normal\"}\n                      color={APP_TEXT_INACTIVE_COLOR}\n                      mr={1}\n                    >\n                      {balance}\n                    </Text>\n                    <Text\n                      fontFamily={\"body\"}\n                      fontSize=\"10px\"\n                      color={APP_TEXT_INACTIVE_COLOR}\n                    >\n                      {uiText.ethereumAbbr}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </Box>\n              <Button\n                color=\"black\"\n                borderColor={APP_PRIMARY_COLOR}\n                variant=\"outline\"\n                borderRadius=\"20px\"\n                disabled={balance === 0}\n                onClick={handleWithdrawEth}\n                fontSize=\"8px\"\n                w=\"87px\"\n                h={\"23px\"}\n                fontFamily={\"body\"}\n                fontWeight={\"bold\"}\n              >\n                {uiText.withdrawETHButtonLabel}\n              </Button>\n            </Flex>\n            <Divider mb={3} />\n            <Flex justify=\"space-between\">\n              <Box>\n                <Flex alignItems={\"center\"}>\n                  <Text\n                    fontFamily={\"heading\"}\n                    fontWeight={\"bold\"}\n                    fontSize=\"11px\"\n                    mr={\"10px\"}\n                  >\n                    {baseUri\n                      ? uiText.collectionRevealed\n                      : uiText.revealCollection}\n                  </Text>\n                  <Tooltip\n                    label={uiText.revealCollectionMessage}\n                    placement=\"top\"\n                    hasArrow\n                    shouldWrapChildren\n                    fontFamily={\"body\"}\n                    fontWeight={\"bold\"}\n                    fontSize=\"11px\"\n                    borderRadius={\"5px\"}\n                    p={\"12px\"}\n                  >\n                    <AiFillQuestionCircle\n                      color={INFO_ICON_BG_COLOR}\n                      cursor=\"pointer\"\n                      size={\"11px\"}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Box>\n              {!baseUri && (\n                <Button\n                  color=\"black\"\n                  borderColor={APP_PRIMARY_COLOR}\n                  variant=\"outline\"\n                  borderRadius=\"20px\"\n                  fontSize=\"8px\"\n                  fontFamily={\"body\"}\n                  fontWeight={\"bold\"}\n                  w=\"87px\"\n                  h={\"23px\"}\n                  onClick={() => goToRevealCollection(true)}\n                >\n                  {uiText.revealCollection}\n                </Button>\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n      <Flex mx={\"30px\"} flexDir={\"row\"} justifyContent={\"space-between\"}>\n        <PrimaryButton\n          w=\"160px\"\n          fontFamily={\"heading\"}\n          fontWeight={\"bold\"}\n          fontSize={\"12px\"}\n          backgroundColor={APP_PRIMARY_COLOR}\n          _hover={{\n            opacity: 0.8,\n          }}\n          color={APP_PRIMARY_CONTRAST_COLOR}\n          text={uiText.mintPage}\n          mr=\"10px\"\n          onClick={() => {\n            walletModal.onClose();\n            navigate(`/customize/${collection.contractAddress}`, {\n              state: { collection },\n            });\n          }}\n        />\n        <Flex justify=\"center\">{renderEnableMintingButtons()}</Flex>\n      </Flex>\n    </Box>\n  );\n};\n","import { Button } from \"@chakra-ui/button\";\nimport {\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n} from \"../../theme/colors\";\nimport { ButtonProps } from \"./types\";\n\nexport const SecondaryButton = ({ text, dark, ...rest }: ButtonProps) => {\n  return (\n    <Button\n      _hover={{ backgroundColor: APP_TEXT_INACTIVE_COLOR }}\n      _focus={{ border: \"none\" }}\n      borderColor={APP_SECONDARY_COLOR}\n      p=\"25px 40px 25px 40px\"\n      fontFamily=\"'Open Sans', sans-serif\"\n      fontSize=\"16px\"\n      variant=\"outline\"\n      color={dark ? APP_PRIMARY_CONTRAST_COLOR : APP_PRIMARY_COLOR}\n      {...rest}\n    >\n      {text}\n    </Button>\n  );\n};\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { ModalPageNumberProps } from \"./types\";\n\nexport const ModalPageNumber = ({\n  numberOfPages,\n  currentPage,\n}: ModalPageNumberProps) => {\n  const renderPageNumbers = () => {\n    const pageNumber = [];\n    for (var i = 1; i <= numberOfPages; i++) {\n      pageNumber.push(\n        <Box\n          color={currentPage === i ? \"white\" : \"black\"}\n          border=\"0.5px solid black\"\n          borderRadius=\"40px\"\n          p=\"4px\"\n          pl=\"8px\"\n          pr=\"8px\"\n          mr=\"4px\"\n          fontSize=\"8px\"\n          bgColor={currentPage === i ? \"black\" : \"white\"}\n        >\n          {i}\n        </Box>\n      );\n    }\n    return pageNumber;\n  };\n  return <Flex>{renderPageNumbers()}</Flex>;\n};\n","import { Flex, Heading, Text, Box } from \"@chakra-ui/layout\";\nimport { ModalHeader, Input, IconButton } from \"@chakra-ui/react\";\nimport React, { ChangeEvent } from \"react\";\nimport { PrimaryButton } from \"../../../components/buttons\";\nimport { SecondaryButton } from \"../../../components/buttons/SecondaryButton\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n} from \"../../../theme/colors\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { CollectionPreMintViewProps } from \"./types\";\nimport { WarningButton } from \"../../../components/buttons/WarningButton\";\nimport { CollectionContractContext } from \"./CollectionContractContext\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\nimport { ModalPageNumber } from \"../../../components/modals/ModalPageNumber\";\n\nexport const CollectionPreMintView = ({\n  goBack,\n}: CollectionPreMintViewProps) => {\n  const { uiText } = useUiText();\n  const {\n    preMint,\n    enableMinting,\n    saleIsActive,\n    transactionPending,\n    provenance,\n  } = React.useContext(CollectionContractContext);\n  const [amount, setAmount] = React.useState(0);\n  const [preMintPending, setPreMintPending] = React.useState(false);\n  const { transactionPendingModal } = React.useContext(ModalContext);\n\n  const handlePreMint = async () => {\n    setPreMintPending(true);\n    await preMint(amount);\n    setPreMintPending(false);\n    goBack();\n  };\n\n  const handleEnableMinting = async () => {\n    await enableMinting();\n    goBack();\n  };\n\n  React.useEffect(() => {\n    if (transactionPending) {\n      transactionPendingModal.onOpen();\n    }\n  }, [transactionPending, transactionPendingModal]);\n\n  return (\n    <Box\n      h=\"100%\"\n      display={\"flex\"}\n      flexDir={\"column\"}\n      justifyContent={\"space-between\"}\n      overflow={\"auto\"}\n    >\n      <Box>\n        <ModalHeader>\n          {!provenance && <ModalPageNumber currentPage={2} numberOfPages={2} />}\n          <IconButton\n            aria-label=\"button\"\n            position=\"absolute\"\n            top=\"5px\"\n            right=\"5px\"\n            onClick={() => goBack()}\n            size=\"lg\"\n            bg=\"transparent\"\n            _hover={{ cursor: \"pointer\" }}\n            _focus={{ border: \"none\" }}\n            icon={<AiOutlineArrowLeft />}\n          />\n        </ModalHeader>\n        <Flex flexDir=\"column\" p=\"30px\" mt=\"100px\">\n          <Heading fontWeight={\"bold\"} fontSize={\"28px\"}>\n            {uiText.preMint}\n          </Heading>\n          <Text\n            fontWeight={\"normal\"}\n            fontSize={\"16px\"}\n            color={APP_PRIMARY_CONTRAST_COLOR}\n          >\n            {uiText.readyToStartCollection}\n          </Text>\n          <Text\n            fontWeight={\"normal\"}\n            fontSize={\"16px\"}\n            color={APP_TEXT_INACTIVE_COLOR}\n          >\n            {uiText.preMintMessage}\n          </Text>\n          <Input\n            mt=\"50px\"\n            fontSize={\"14px\"}\n            placeholder=\"Enter Amount\"\n            onChange={(e: ChangeEvent<HTMLInputElement>) => {\n              setAmount(parseInt(e.target.value));\n            }}\n          />\n        </Flex>\n      </Box>\n      <Flex placeSelf={\"center\"} flexDir={\"column\"} w={\"205px\"} mb={\"25px\"}>\n        <PrimaryButton\n          isLoading={preMintPending}\n          mb=\"10px\"\n          fontSize={\"12px\"}\n          fontWeight={\"bold\"}\n          fontFamily={\"heading\"}\n          text={uiText.enablePreMint}\n          onClick={handlePreMint}\n          disabled={!amount}\n        />\n        {saleIsActive ? (\n          <WarningButton\n            fontSize={\"14px\"}\n            text={uiText.pauseMinting}\n            onClick={handleEnableMinting}\n          />\n        ) : (\n          <SecondaryButton\n            fontSize={\"12px\"}\n            fontWeight={\"bold\"}\n            fontFamily={\"heading\"}\n            isLoading={transactionPending}\n            text={uiText.skipAndEnableMinting}\n            border=\"none\"\n            onClick={handleEnableMinting}\n          />\n        )}\n      </Flex>\n    </Box>\n  );\n};\n","import { Flex, Heading, Text, Box } from \"@chakra-ui/layout\";\nimport { ModalHeader, IconButton } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { PrimaryButton } from \"../../../components/buttons\";\nimport { SecondaryButton } from \"../../../components/buttons/SecondaryButton\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n} from \"../../../theme/colors\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { CollectionProvenanceViewProps } from \"./types\";\nimport { CollectionContractContext } from \"./CollectionContractContext\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\nimport { ModalPageNumber } from \"../../../components/modals/ModalPageNumber\";\n\nexport const CollectionProvenanceView = ({\n  goBack,\n  goToEnableMinting,\n  collection,\n}: CollectionProvenanceViewProps) => {\n  const { uiText } = useUiText();\n  const { transactionPending, setProvenance } = React.useContext(\n    CollectionContractContext\n  );\n  const { transactionPendingModal } = React.useContext(ModalContext);\n\n  const handleSetProvenance = async () => {\n    setProvenance(collection.provenanceHash);\n    goBack();\n  };\n\n  React.useEffect(() => {\n    if (transactionPending) {\n      transactionPendingModal.onOpen();\n    }\n  }, [transactionPending, transactionPendingModal]);\n\n  return (\n    <Box\n      h=\"100%\"\n      display={\"flex\"}\n      flexDir={\"column\"}\n      justifyContent={\"space-between\"}\n      overflow={\"auto\"}\n    >\n      <Box>\n        <ModalHeader>\n          <ModalPageNumber currentPage={1} numberOfPages={2} />\n          <IconButton\n            aria-label=\"button\"\n            position=\"absolute\"\n            top=\"5px\"\n            right=\"5px\"\n            onClick={() => goBack()}\n            size=\"lg\"\n            bg=\"transparent\"\n            _hover={{ cursor: \"pointer\" }}\n            _focus={{ border: \"none\" }}\n            icon={<AiOutlineArrowLeft />}\n          />\n        </ModalHeader>\n        <Flex flexDir=\"column\" p=\"30px\" mt=\"100px\">\n          <Heading>{uiText.provenance}</Heading>\n          <Text color={APP_PRIMARY_CONTRAST_COLOR}>\n            {uiText.readyToStartCollection}\n          </Text>\n          <Text color={APP_TEXT_INACTIVE_COLOR}>\n            {uiText.provenancePopupDescription}\n          </Text>\n        </Flex>\n      </Box>\n      <Flex placeSelf={\"center\"} flexDir={\"column\"} w={\"205px\"} mb={\"25px\"}>\n        <PrimaryButton\n          mb=\"10px\"\n          fontSize={\"14px\"}\n          text={uiText.setProvenance}\n          onClick={handleSetProvenance}\n        />\n        <SecondaryButton\n          fontSize={\"14px\"}\n          isLoading={transactionPending}\n          text={uiText.skip}\n          border=\"none\"\n          onClick={goToEnableMinting}\n        />\n      </Flex>\n    </Box>\n  );\n};\n","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\nimport { ModalHeader, IconButton } from \"@chakra-ui/react\";\nimport { PrimaryButton } from \"../../../components/buttons\";\nimport { SecondaryButton } from \"../../../components/buttons/SecondaryButton\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport { APP_TEXT_INACTIVE_COLOR } from \"../../../theme/colors\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport React from \"react\";\nimport { CollectionContractContext } from \"./CollectionContractContext\";\nimport { CollectionRevealViewProps } from \"./types\";\n\nexport const CollectionRevealView = ({\n  goBack,\n  collection,\n}: CollectionRevealViewProps) => {\n  const { uiText } = useUiText();\n  const { revealCollection } = React.useContext(CollectionContractContext);\n\n  const handleRevealCollection = () => {\n    revealCollection(collection.metaDataBaseUrl);\n    goBack();\n  };\n\n  return (\n    <>\n      <ModalHeader>\n        <IconButton\n          aria-label=\"button\"\n          position=\"absolute\"\n          top=\"5px\"\n          right=\"5px\"\n          onClick={() => goBack()}\n          size=\"lg\"\n          bg=\"transparent\"\n          _hover={{ cursor: \"pointer\" }}\n          _focus={{ border: \"none\" }}\n          icon={<AiOutlineArrowLeft />}\n        />\n      </ModalHeader>\n      <Flex flexDir=\"column\" p=\"30px\" mt=\"100px\">\n        <Heading mb={5}>{uiText.revealCollection}</Heading>\n        <Text color={APP_TEXT_INACTIVE_COLOR}>\n          {uiText.revealCollectionMessage}\n        </Text>\n        <Flex position=\"absolute\" bottom=\"25px\" right=\"25%\" flexDir={\"column\"}>\n          <PrimaryButton\n            mb=\"10px\"\n            text={uiText.revealCollection}\n            onClick={handleRevealCollection}\n          />\n          <SecondaryButton\n            text={uiText.cancel}\n            border=\"none\"\n            onClick={() => goBack()}\n          />\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nexport const theme = extendTheme({\n  fonts: {\n    body: \"Open Sans\",\n    heading: \"Montserrat\",\n    aeonik: \"Aeonik\",\n  },\n  colors: {\n    appHeaderBackgroundColor: \"#1C171A\",\n    appHeaderTextColor: \"#fff\",\n    appPrimaryColor: \"#000\",\n    appImagePlaceholderColor: \"#F1F1F1\",\n    appPrimaryButtonTextColor: \"#000\",\n    appPrimaryContrastColor: \"#fff\",\n    appSecondaryColor: \"#95ffce\",\n    appSecondaryNeonColor: \"#2FFFA7\",\n    appSecondaryColorDark: \"#75c9a2\",\n    appPrimaryTextColor: \"#565656\",\n    appDividerColor: \"#00000029\",\n    appInfoBackgroundColor: \"#292727\",\n    appTextInactiveColor: \"#939393\",\n    appErrorColor: \"#fe4166\",\n    appDescriptionColor: \"#585757\",\n    appBorderColorDark: \"#1A1818\",\n    appTabListSelectedColor: \"#fff\",\n    moreInfoButtonColor: \"#B2B2B2\",\n    walletModalHeaderBackgroundColor: \"#0a0a0a\",\n    walletModalBodyBackgroundColor: \"#fff\",\n    homePageBackgroundColor: \"#121212\",\n    walletModalAltBackgroundColor: \"#120f11\",\n    appWarningColor: \"#FF2F67\",\n    appSecondaryLabel: \"#FCEAB6\",\n    buttonBorderColor: \"#99FECF\",\n    deleteButtonColor: \"#FC355B\",\n    fileErrorColor: \"#FC3469\",\n    descriptionColor: \"#707070\",\n    collectorBorderColor: \"#909090\",\n    uploadBoxTextColor: \"#9C9B9B\",\n    collectionImageBackground: \"#F6F6F6\",\n    collectionImageText: \"#292727\",\n  },\n  components: {\n    TabList: {\n      defaultProps: {\n        fontFamily: \"'Montserrat', sans-serif\",\n      },\n    },\n    Button: {\n      defaultProps: {\n        fontFamily: \"'Montserrat', sans-serif\",\n      },\n    },\n  },\n});\n\nexport const scrollBarStyles = {\n  \"&::-webkit-scrollbar\": {\n    width: \"5px\",\n    height: \"5px\",\n    borderRadius: \"20px\",\n    backgroundColor: \"white\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    backgroundColor: \"#95ffce\",\n  },\n};\n","import {\n  Box,\n  Flex,\n  HStack,\n  Text,\n  Tooltip,\n  Image,\n  Button,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { utils, ContractFactory } from \"ethers\";\nimport { useContext } from \"react\";\nimport { PrimaryButton } from \"../../../components/buttons\";\nimport { WalletContext } from \"../../../system/context/WalletContext\";\nimport React from \"react\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\n\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_ERROR_COLOR,\n  APP_IMAGE_PLACEHOLDER_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n  APP_WARNING_COLOR,\n} from \"../../../theme/colors\";\nimport { scrollBarStyles } from \"../../../theme/theme\";\nimport { MyCollectionsSectionProps } from \"./types\";\nimport { abi, bytecode } from \"../../../contracts/MasterchefMasatoshi.json\";\nimport Axios from \"axios\";\nimport { Collection, DeployStatusType } from \"../../../system/api/types\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport const MyCollectionsSection = ({\n  collections,\n  setCollection,\n  hasReceipt,\n  updateCollections,\n}: MyCollectionsSectionProps) => {\n  const navigate = useNavigate();\n  const { uiText } = useUiText();\n\n  const { account, ethereum } = useContext(WalletContext);\n  const https = require(\"https\");\n  const httpsAgent = new https.Agent({ rejectUnauthorized: false });\n\n  const changeDeployStatus = (index: number, status: DeployStatusType) => {\n    const newCollections = [...collections];\n    newCollections[index].deployStatus = status;\n    updateCollections(newCollections);\n  };\n\n  const deployContract = async (\n    { name, cost, symbol, total }: Collection,\n    index: number\n  ) => {\n    if (!ethereum) {\n      changeDeployStatus(index, \"NOTDEPLOYED\");\n    }\n    const signer = ethereum?.getSigner(account);\n    const factory = new ContractFactory(abi, bytecode, signer);\n    const contract = await factory.deploy(\n      name,\n      symbol,\n      total,\n      utils.parseEther(cost.toString()),\n      \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n    );\n    await contract.deployTransaction.wait(3);\n    const deployTxHash = contract.deployTransaction.hash;\n    const contractAddress = contract.address;\n    return {\n      deployTxHash,\n      contractAddress,\n    };\n  };\n\n  const deployAndVerify = async (collection: Collection, index: number) => {\n    changeDeployStatus(index, \"PROCESSING\");\n    const { deployTxHash, contractAddress } = await deployContract(\n      collection,\n      index\n    ).catch((err) => {\n      changeDeployStatus(index, \"NOTDEPLOYED\");\n      return Promise.reject(err);\n    });\n    await Axios({\n      method: \"POST\",\n      responseType: \"json\",\n      httpsAgent,\n      url: `https://${process.env.REACT_APP_SERVER_URL}.com/verify`,\n      data: {\n        collectionId: collection.id,\n        deployTxHash,\n        contractAddress,\n        network: ethereum?.network?.name!,\n      },\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        changeDeployStatus(index, \"DEPLOYED\");\n        navigate(\"/success-collection\", {\n          replace: true,\n          state: { isFromReview: true, id: collection.id },\n        });\n        return res;\n      })\n      .catch((err) => {\n        changeDeployStatus(index, \"NOTDEPLOYED\");\n        if (!err.response) {\n          // network error\n          return Promise.reject(\"Error: Network Error\");\n        } else {\n          return Promise.reject(err);\n        }\n      });\n  };\n\n  const { noReceiptsModal, walletModal } = React.useContext(ModalContext);\n  const renderCreateNewCollection = () => {\n    if (hasReceipt) {\n      return (\n        <Link\n          to=\"/create-collection\"\n          style={{ textDecoration: \"none\" }}\n          onClick={() => walletModal.onClose()}\n        >\n          <PrimaryButton\n            fontSize={\"12px\"}\n            fontWeight={\"bold\"}\n            fontFamily={\"heading\"}\n            text={uiText.startNewCollection}\n          />\n        </Link>\n      );\n    } else {\n      return (\n        <PrimaryButton\n          text={uiText.startNewCollection}\n          onClick={() => {\n            walletModal.onClose();\n            noReceiptsModal.onOpen();\n          }}\n        />\n      );\n    }\n  };\n  return (\n    <Box\n      h={\"100%\"}\n      display={\"flex\"}\n      flexDir={\"column\"}\n      justifyContent={\"space-between\"}\n    >\n      <Flex align=\"center\" h=\"100%\" justifyContent={\"center\"} flexDir=\"column\">\n        {!collections.length && (\n          <Text color={APP_TEXT_INACTIVE_COLOR}>\n            {uiText.noCollectionsMessage}\n          </Text>\n        )}\n        {!!collections.length && (\n          <HStack\n            overflow=\"auto\"\n            maxW=\"100%\"\n            sx={scrollBarStyles}\n            paddingBottom={\"10px\"}\n          >\n            {collections.map((c, index) => (\n              <Flex\n                flexDir=\"column\"\n                onClick={() =>\n                  c.deployStatus === \"PROCESSING\"\n                    ? null\n                    : c.contractAddress\n                    ? setCollection(c.id, collections)\n                    : deployAndVerify(c, index)\n                }\n                key={`collection-${c.id}`}\n                _hover={{\n                  opacity: !c.contractAddress ? 1 : 0.7,\n                  cursor: \"pointer\",\n                }}\n              >\n                <Box position={\"relative\"}>\n                  <Image\n                    h={\"236px\"}\n                    minW={\"210px\"}\n                    objectFit={\"cover\"}\n                    borderRadius={\"5px\"}\n                    bgColor={APP_IMAGE_PLACEHOLDER_COLOR}\n                    src={c.collectionImage}\n                  />\n                  {!c.contractAddress && (\n                    <Box\n                      top={0}\n                      h={\"236px\"}\n                      minW={\"210px\"}\n                      borderRadius={\"5px\"}\n                      bg=\"rgba(18, 18, 18, 0.5)\"\n                      display={\"flex\"}\n                      position=\"absolute\"\n                      justifyContent={\"center\"}\n                      alignItems={\"center\"}\n                    >\n                      <Button\n                        bgColor={APP_WARNING_COLOR}\n                        w=\"145px\"\n                        h=\"38px\"\n                        display={\"flex\"}\n                        justifyContent={\"center\"}\n                        alignItems={\"center\"}\n                        borderRadius={\"6px\"}\n                        zIndex={10}\n                        disabled={c.deployStatus === \"PROCESSING\"}\n                        _hover={{\n                          opacity: 0.9,\n                          bgColor: APP_WARNING_COLOR,\n                        }}\n                        _disabled={{\n                          _hover: {\n                            opacity: 1,\n                            bgColor: APP_WARNING_COLOR,\n                          },\n                          cursor: \"progress\",\n                        }}\n                      >\n                        {c.deployStatus === \"PROCESSING\" ? (\n                          <Spinner\n                            size=\"sm\"\n                            color={APP_PRIMARY_CONTRAST_COLOR}\n                          />\n                        ) : (\n                          <Text\n                            fontSize={\"12px\"}\n                            fontWeight={\"bold\"}\n                            color=\"#FFF\"\n                          >\n                            {uiText.deployCollection}\n                          </Text>\n                        )}\n                      </Button>\n                    </Box>\n                  )}\n                </Box>\n                <Text\n                  fontFamily={\"heading\"}\n                  mt={\"15px\"}\n                  fontSize=\"10px\"\n                  fontWeight={\"medium\"}\n                >\n                  {c.symbol}\n                </Text>\n                <Text\n                  fontFamily={\"heading\"}\n                  fontSize=\"14px\"\n                  fontWeight=\"semibold\"\n                >\n                  {c.name}\n                </Text>\n              </Flex>\n            ))}\n          </HStack>\n        )}\n      </Flex>\n      <Box placeSelf={\"center\"}>\n        <Tooltip\n          label={uiText.getReceiptMessage}\n          bg={APP_ERROR_COLOR}\n          p=\"10px 20px 10px 20px\"\n          placement=\"top\"\n          mb={4}\n          borderRadius=\"4px\"\n          shouldWrapChildren\n          hasArrow\n          isDisabled={hasReceipt}\n        >\n          {renderCreateNewCollection()}\n        </Tooltip>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  Box,\n  Heading,\n  Flex,\n  Text,\n  Tooltip,\n  HStack,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { FaEthereum } from \"react-icons/fa\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_ERROR_COLOR,\n  APP_IMAGE_PLACEHOLDER_COLOR,\n  APP_PRIMARY_TEXT_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n} from \"../../../theme/colors\";\nimport { MyReceiptsSectionProps } from \"./types\";\nimport { IoMdAlert } from \"react-icons/io\";\nimport { PrimaryButton } from \"../../../components/buttons\";\nimport React from \"react\";\nimport { ContractContext } from \"../../../system/context/ContractContext\";\nimport { scrollBarStyles } from \"../../../theme/theme\";\n\nexport const MyReceiptsSection = ({\n  receipts,\n  balance,\n  insufficientFunds,\n}: MyReceiptsSectionProps) => {\n  const { mintToken, currentTokenBalance, tokenBalancePending, mintPrice } =\n    React.useContext(ContractContext);\n  const { uiText } = useUiText();\n\n  return (\n    <Flex h=\"100%\" flexDir={\"column\"} justifyContent={\"space-between\"}>\n      <Box>\n        <Box>\n          <Heading fontSize={\"14px\"} fontWeight={\"semibold\"} mb={\"16px\"}>\n            {uiText.balance}\n          </Heading>\n          <Flex align=\"center\" justify=\"space-between\">\n            <Flex flexDir=\"row-reverse\" justify=\"space-evenly\">\n              <Text\n                fontFamily={\"body\"}\n                fontSize={\"16px\"}\n                fontWeight={\"regular\"}\n              >\n                {uiText.ethereum}\n              </Text>\n              <Flex align=\"center\">\n                <FaEthereum style={{ marginRight: 10 }} />\n              </Flex>\n            </Flex>\n            <Tooltip\n              label={uiText.insufficientFundsMessage}\n              hasArrow\n              bg={APP_ERROR_COLOR}\n              isDisabled={!insufficientFunds}\n            >\n              <Flex\n                justifyContent=\"center\"\n                align=\"center\"\n                color={\n                  insufficientFunds ? APP_ERROR_COLOR : APP_PRIMARY_TEXT_COLOR\n                }\n              >\n                <Text\n                  fontFamily={\"body\"}\n                  fontSize={\"16px\"}\n                  fontWeight={\"regular\"}\n                  color={insufficientFunds ? APP_ERROR_COLOR : \"#292727\"}\n                  cursor=\"pointer\"\n                  mr={1}\n                >\n                  {balance} {uiText.ethereumAbbr}\n                </Text>\n                {insufficientFunds && <IoMdAlert />}\n              </Flex>\n            </Tooltip>\n          </Flex>\n        </Box>\n        {tokenBalancePending ? (\n          <Spinner color={APP_SECONDARY_COLOR} />\n        ) : (\n          <Box mt={\"51px\"}>\n            <Heading fontSize={\"14px\"} fontWeight={\"semibold\"} mb={5}>\n              {uiText.receipts} {`(${currentTokenBalance || 0})`}\n            </Heading>\n            <Flex align=\"center\" justify=\"center\" flexDir=\"column\">\n              {!receipts.length && (\n                <Text color={APP_TEXT_INACTIVE_COLOR} m=\"20px 0px 20px 0px\">\n                  {uiText.noReceiptMessage}\n                </Text>\n              )}\n              {receipts && (\n                <HStack\n                  overflow=\"auto\"\n                  maxW=\"100%\"\n                  sx={scrollBarStyles}\n                  paddingBottom={5}\n                  pl=\"15px\"\n                >\n                  {receipts.map((r, i) => (\n                    <Flex\n                      key={`receipt-${i}`}\n                      flexDir=\"column\"\n                      _hover={{ opacity: 0.7, cursor: \"pointer\" }}\n                    >\n                      <Box\n                        h={\"166px\"}\n                        w={\"131px\"}\n                        borderRadius=\"4px\"\n                        bgColor={APP_IMAGE_PLACEHOLDER_COLOR}\n                        boxShadow=\"md\"\n                        mr=\"12px\"\n                      ></Box>\n                    </Flex>\n                  ))}\n                </HStack>\n              )}\n            </Flex>\n          </Box>\n        )}\n      </Box>\n      <Flex flexDir=\"column\" align=\"center\">\n        <Text\n          fontFamily={\"heading\"}\n          fontSize={\"12px\"}\n          fontWeight={\"medium\"}\n          mb={\"14px\"}\n        >\n          {uiText.receiptCostMessage(mintPrice)}\n        </Text>\n        <PrimaryButton\n          text={uiText.mintNewReceipt}\n          isDisabled={insufficientFunds}\n          onClick={() => mintToken()}\n          fontSize={\"12px\"}\n          fontWeight={\"bold\"}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, Heading } from \"@chakra-ui/layout\";\nimport { ModalCloseButton, Image } from \"@chakra-ui/react\";\nimport { SecondaryButton } from \"../../../components/buttons/SecondaryButton\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_ERROR_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../../theme/colors\";\nimport { WalletModalChangeNetworkViewProps } from \"./types\";\n\nexport const WalletModalChangeNetworkView = ({\n  handleReconnect,\n}: WalletModalChangeNetworkViewProps) => {\n  const { uiText } = useUiText();\n  return (\n    <>\n      <ModalCloseButton color={APP_PRIMARY_CONTRAST_COLOR} />\n      <Flex\n        flexDir=\"column\"\n        h=\"100%\"\n        align=\"center\"\n        justify=\"space-around\"\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n      >\n        <Flex flexDir=\"column\" align=\"center\">\n          <Heading color={APP_ERROR_COLOR}>{uiText.wrongNetwork}</Heading>\n        </Flex>\n        <Image src=\"/wrong_door.svg\" />\n        <SecondaryButton text={uiText.switchNetworkMessage} onClick={handleReconnect} mb={5} dark />\n      </Flex>\n    </>\n  );\n};\n","import { Flex } from \"@chakra-ui/layout\";\nimport { Text, Image, Button } from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\nimport { SecondaryButton } from \"../../../components/buttons/SecondaryButton\";\nimport { CollectorContext } from \"../../../system/context/CollectorContext\";\nimport useDeviceDetect from \"../../../system/hooks/useDeviceDetect\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_DIVIDER_COLOR,\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n} from \"../../../theme/colors\";\nimport { WalletModalConnectViewProps } from \"./types\";\n\nexport const WalletModalConnectView = ({\n  handleConnect,\n  onClose,\n}: WalletModalConnectViewProps) => {\n  const { uiText } = useUiText();\n  const { isMobile } = useDeviceDetect();\n  const { isMintPage } = useContext(CollectorContext);\n  const isMobileMint = isMobile && isMintPage;\n  const wallets = [\n    { src: \"/metamask-fox.svg\", text: uiText.metamask },\n    { src: \"/safepal.png\", text: uiText.safepal },\n    { src: \"/trustWallet.png\", text: uiText.trustWallet },\n    { src: \"/tokenPocket.png\", text: uiText.tokenPocket },\n    { src: \"/walletConnect.png\", text: uiText.walletConnect },\n  ];\n\n  const renderWalletSelection = (src: string, text: string, last: boolean) => {\n    const connect = () => {\n      handleConnect(text === \"Metamask\" ? true : false);\n    };\n\n    return (\n      <Flex\n        key={`wallet-${text}`}\n        w=\"100%\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        _hover={{ cursor: \"pointer\", backgroundColor: \"#f2f2f2\" }}\n        onClick={connect}\n        borderBottom={last ? \"none\" : \"1px solid\"}\n        borderColor={APP_DIVIDER_COLOR}\n        py={\"20px\"}\n        pl={1}\n      >\n        <Image src={src} w=\"37px\" h=\"37px\" mr=\"34px\" objectFit={\"contain\"} />\n        <Text\n          fontFamily=\"heading\"\n          fontWeight=\"medium\"\n          fontSize={\"16px\"}\n          color={APP_PRIMARY_COLOR}\n        >\n          {text}\n        </Text>\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex\n      position={\"relative\"}\n      flexDir=\"column\"\n      height=\"100%\"\n      paddingY=\"48px\"\n      paddingX=\"43px\"\n    >\n      {isMobileMint && (\n        <Button\n          onClick={onClose}\n          _hover={{\n            borderColor: \"transparent\",\n            bgColor: APP_PRIMARY_CONTRAST_COLOR,\n          }}\n          _active={{\n            borderColor: \"transparent\",\n            bgColor: APP_PRIMARY_CONTRAST_COLOR,\n          }}\n          _focus={{\n            borderColor: \"transparent\",\n            bgColor: APP_PRIMARY_CONTRAST_COLOR,\n          }}\n          top={0}\n          w={\"full\"}\n          position={\"absolute\"}\n          alignSelf=\"center\"\n          bgColor={APP_PRIMARY_CONTRAST_COLOR}\n        >\n          <Image\n            src={\"/arrow-down.png\"}\n            w=\"40px\"\n            h=\"30px\"\n            objectFit={\"contain\"}\n          />\n        </Button>\n      )}\n      <Text\n        fontSize={\"28px\"}\n        fontWeight=\"bold\"\n        fontFamily={\"heading\"}\n        mb=\"23px\"\n      >\n        {uiText.selectWallet}\n      </Text>\n      <Flex flexDir=\"column\" h=\"100%\" align=\"center\">\n        {wallets.map((w, i) =>\n          renderWalletSelection(w.src, w.text, i === wallets.length - 1)\n        )}\n      </Flex>\n      <SecondaryButton\n        borderColor={APP_PRIMARY_COLOR}\n        alignSelf=\"center\"\n        width={\"205px\"}\n        fontSize=\"12px\"\n        fontFamily={\"heading\"}\n        py='15px'\n        mt={\"20px\"}\n        text={uiText.cancel}\n        onClick={() => onClose()}\n      />\n    </Flex>\n  );\n};\n","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\nimport { ModalCloseButton, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_ERROR_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../../theme/colors\";\n\nexport const WalletModalTransactionFailedView = () => {\n  const { uiText } = useUiText();\n  return (\n    <>\n      <ModalCloseButton color={APP_PRIMARY_CONTRAST_COLOR} />\n      <Flex\n        flexDir=\"column\"\n        h=\"100%\"\n        align=\"center\"\n        justify=\"space-around\"\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        p={10}\n        borderRadius={8}\n      >\n        <Flex flexDir=\"column\" align=\"center\">\n          <Heading color={APP_ERROR_COLOR} textAlign=\"center\">\n            {uiText.somethingWentWrong}\n          </Heading>\n        </Flex>\n        <Image src=\"/bones.png\" />\n        <Text color={APP_PRIMARY_CONTRAST_COLOR}>{uiText.failedTransactionMessage}</Text>\n      </Flex>\n    </>\n  );\n};\n","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\nimport { ModalCloseButton, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_LABEL,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../../theme/colors\";\n\nexport const WalletModalTransactionPendingView = () => {\n  const { uiText } = useUiText();\n  return (\n    <>\n      <ModalCloseButton color={APP_PRIMARY_CONTRAST_COLOR} />\n      <Flex\n        maxWidth=\"388px\"\n        height=\"663px\"\n        flexDir=\"column\"\n        align=\"center\"\n        top={3}\n        // justify=\"space-around\"\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        borderRadius={\"12px\"}\n      >\n        <Flex flexDir=\"column\" align=\"center\">\n          <Heading color={APP_SECONDARY_LABEL} textAlign={\"center\"}>\n            {uiText.processingTransaction}\n          </Heading>\n        </Flex>\n        <Image src=\"/Cashlady.png\" />\n        <Text color={APP_PRIMARY_CONTRAST_COLOR}>\n          {uiText.transactionInProgressMessage}\n        </Text>\n      </Flex>\n    </>\n  );\n};\n","import { Flex, Heading, Text } from \"@chakra-ui/layout\";\nimport { ModalCloseButton, Image, Link } from \"@chakra-ui/react\";\nimport { SecondaryButton } from \"../../../components/buttons/SecondaryButton\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n  WALLET_MODAL_ALT_BG_COLOR,\n} from \"../../../theme/colors\";\n\nexport const WalletModalTransactionSuccessfulView = () => {\n  const { uiText } = useUiText();\n  return (\n    <>\n      <ModalCloseButton color={APP_PRIMARY_CONTRAST_COLOR} />\n      <Flex\n        flexDir=\"column\"\n        h=\"100%\"\n        align=\"center\"\n        justify=\"space-around\"\n        bgColor={WALLET_MODAL_ALT_BG_COLOR}\n        p={10}\n        borderRadius={8}\n      >\n        <Flex flexDir=\"column\" align=\"center\">\n          <Heading color={APP_SECONDARY_COLOR} textAlign={\"center\"}>\n            {uiText.receiptHasBeenMinted}\n          </Heading>\n          <Text color={APP_PRIMARY_CONTRAST_COLOR}>{uiText.readyToStartCollection}</Text>\n        </Flex>\n        <Image src=\"/Receipt.png\" />\n        <Link href=\"create-collection\">\n          <SecondaryButton text={uiText.startNewCollection} dark />\n        </Link>\n      </Flex>\n    </>\n  );\n};\n","import {\n  Center,\n  Divider,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { Collection } from \"../../../system/api/types\";\nimport { CollectorContext } from \"../../../system/context/CollectorContext\";\nimport useDeviceDetect from \"../../../system/hooks/useDeviceDetect\";\nimport { useUiText } from \"../../../system/hooks/useUiText\";\nimport {\n  APP_DIVIDER_COLOR,\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n  WALLET_MODAL_BODY_BG_COLOR,\n  WALLET_MODAL_HEADER_BG_COLOR,\n} from \"../../../theme/colors\";\nimport { CollectionContractProvider } from \"./CollectionContractContext\";\nimport { CollectionDetails } from \"./CollectionDetails\";\nimport { CollectionPreMintView } from \"./CollectionPreMintView\";\nimport { CollectionProvenanceView } from \"./CollectionProvenanceView\";\nimport { CollectionRevealView } from \"./CollectionRevealView\";\nimport { MyCollectionsSection } from \"./MyCollectionsSection\";\nimport { MyReceiptsSection } from \"./MyReceiptsSection\";\nimport { WalletModalProps } from \"./types\";\nimport { WalletModalChangeNetworkView } from \"./WalletModalChangeNetworkView\";\nimport { WalletModalConnectView } from \"./WalletModalConnectView\";\nimport { WalletModalTransactionFailedView } from \"./WalletModalTransactionFailedView\";\nimport { WalletModalTransactionPendingView } from \"./WalletModalTransactionPendingView\";\nimport { WalletModalTransactionSuccessfulView } from \"./WalletModalTransactionSuccessfulView\";\n\nexport const WalletModal = ({\n  account,\n  accountChangePending,\n  balance,\n  clearSelectedCollection,\n  collections,\n  handleClose,\n  handleConnect,\n  handleDisconnect,\n  handleSelectCollection,\n  handleUpdateCollections,\n  handleViewPreMint,\n  handleViewReveal,\n  handleViewProvenance,\n  hasReceipt,\n  insufficientFunds,\n  isOpen,\n  isWrongNetwork,\n  onClose,\n  selectedCollection,\n  switchNetwork,\n  tokenIds,\n  transactionPending,\n  transactionSuccessful,\n  transactionUnSuccessful,\n  viewPreMint,\n  viewReveal,\n  viewProvenance,\n  walletModalTabIndex,\n}: WalletModalProps) => {\n  const { uiText } = useUiText();\n  const [tabIndex, setTabIndex] = React.useState(0);\n  React.useEffect(() => {\n    setTabIndex(walletModalTabIndex);\n  }, [walletModalTabIndex]);\n  const { isMintPage } = useContext(CollectorContext);\n  const { isMobile } = useDeviceDetect();\n  const isMobileMint = isMobile && isMintPage;\n\n  const renderModalContentView = () => {\n    return (\n      <>\n        {!selectedCollection && (\n          <>\n            <ModalHeader\n              mx={\"-2px\"}\n              mt={\"-2px\"}\n              borderWidth={\"1px\"}\n              borderTopRadius={\"12px\"}\n              borderColor={WALLET_MODAL_HEADER_BG_COLOR}\n              bgColor={WALLET_MODAL_HEADER_BG_COLOR}\n              color={APP_PRIMARY_CONTRAST_COLOR}\n            >\n              <Flex\n                flexDir={\"row\"}\n                alignItems={\"center\"}\n                justifyContent={\"space-between\"}\n              >\n                <Flex flexDir={\"column\"}>\n                  <Text\n                    fontSize=\"12px\"\n                    fontFamily={\"heading\"}\n                    fontWeight=\"semibold\"\n                  >\n                    {uiText.walletAddress}\n                  </Text>\n                  <Text\n                    fontFamily={\"body\"}\n                    fontWeight={\"normal\"}\n                    whiteSpace={\"nowrap\"}\n                    overflow={\"hidden\"}\n                    textOverflow={\"ellipsis\"}\n                    fontSize=\"12px\"\n                    w=\"161px\"\n                  >\n                    {account}\n                  </Text>\n                </Flex>\n                <Text\n                  as=\"button\"\n                  fontFamily={\"heading\"}\n                  fontSize=\"12px\"\n                  fontWeight=\"semibold\"\n                  _hover={{ opacity: 0.7 }}\n                  onClick={handleDisconnect}\n                >\n                  {uiText.disconnect}\n                </Text>\n              </Flex>\n            </ModalHeader>\n            <Divider color={APP_DIVIDER_COLOR} />\n            <ModalBody\n              p=\"5px 5px 0px 15px\"\n              color={\"#000\"}\n              bgColor={WALLET_MODAL_BODY_BG_COLOR}\n              borderBottomRadius=\"8px\"\n            >\n              <Tabs\n                variant=\"line\"\n                isLazy\n                h=\"95%\"\n                position=\"relative\"\n                defaultIndex={tabIndex}\n              >\n                <TabList borderBottom=\"none\">\n                  {[uiText.myReceipts, uiText.collections].map((subHeading) => (\n                    <Tab\n                      key={`sub-heading-${subHeading}`}\n                      _selected={{\n                        borderBottomWidth: \"3px\",\n                        borderColor: APP_SECONDARY_COLOR,\n                        color: APP_PRIMARY_COLOR,\n                        fontWeight: 600,\n                      }}\n                      _focus={{ boxShadow: \"none\" }}\n                      _active={{ background: \"none\" }}\n                      fontSize=\"20px\"\n                      fontFamily={\"heading\"}\n                      fontWeight={\"semibold\"}\n                      color={APP_TEXT_INACTIVE_COLOR}\n                      mr=\"40px\"\n                      mb=\"20px\"\n                    >\n                      {subHeading}\n                    </Tab>\n                  ))}\n                </TabList>\n                <TabPanels zIndex=\"2\">\n                  <TabPanel h=\"455px\">\n                    <MyReceiptsSection\n                      receipts={tokenIds}\n                      balance={balance}\n                      insufficientFunds={insufficientFunds}\n                    />\n                  </TabPanel>\n                  <TabPanel h=\"455px\" bg={APP_PRIMARY_CONTRAST_COLOR}>\n                    <MyCollectionsSection\n                      hasReceipt={hasReceipt}\n                      collections={\n                        collections.sort(function (\n                          a: Collection,\n                          b: Collection\n                        ) {\n                          return (\n                            new Date(b.dateCreated).valueOf() -\n                            new Date(a.dateCreated).valueOf()\n                          );\n                        }) || []\n                      }\n                      setCollection={handleSelectCollection}\n                      updateCollections={handleUpdateCollections}\n                    />\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            </ModalBody>\n          </>\n        )}\n      </>\n    );\n  };\n\n  const renderLoadingState = () => {\n    return (\n      <Center h=\"100%\">\n        <Spinner color={APP_SECONDARY_COLOR} />\n      </Center>\n    );\n  };\n\n  function renderWithModal<P>(\n    Component: React.FC<P>,\n    props: P,\n    transparent?: boolean,\n    collectionAddress?: string\n  ) {\n    return isMobileMint ? (\n      <Modal\n        isOpen={isOpen}\n        onClose={handleClose}\n        scrollBehavior=\"inside\"\n        motionPreset=\"slideInBottom\"\n      >\n        <ModalOverlay />\n        <ModalContent\n          minH={\"full\"}\n          borderRadius={\"12px\"}\n          borderWidth={\"1px\"}\n          borderColor={\"transparent\"}\n          bg={transparent ? \"transparent\" : WALLET_MODAL_BODY_BG_COLOR}\n        >\n          {!!collectionAddress ? (\n            <CollectionContractProvider contractAddress={collectionAddress}>\n              <Component {...props} />\n            </CollectionContractProvider>\n          ) : (\n            <Component {...props} />\n          )}\n        </ModalContent>\n      </Modal>\n    ) : (\n      <Modal\n        isOpen={isOpen}\n        onClose={handleClose}\n        scrollBehavior=\"inside\"\n        isCentered={isMintPage}\n      >\n        <ModalOverlay />\n        <ModalContent\n          maxWidth=\"388px\"\n          height=\"663px\"\n          borderRadius={\"12px\"}\n          borderWidth={\"1px\"}\n          borderColor={\"transparent\"}\n          bg={transparent ? \"transparent\" : WALLET_MODAL_BODY_BG_COLOR}\n          position={isMintPage ? undefined : \"absolute\"}\n          top={isMintPage ? undefined : 3}\n          right={isMintPage ? undefined : \"85px\"}\n        >\n          {!!collectionAddress ? (\n            <CollectionContractProvider contractAddress={collectionAddress}>\n              <Component {...props} />\n            </CollectionContractProvider>\n          ) : (\n            <Component {...props} />\n          )}\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  if (isWrongNetwork) {\n    return renderWithModal(\n      WalletModalChangeNetworkView,\n      {\n        handleReconnect: switchNetwork,\n      },\n      true\n    );\n  }\n\n  if (transactionPending) {\n    return renderWithModal(WalletModalTransactionPendingView, {}, true);\n  }\n\n  if (transactionSuccessful) {\n    return renderWithModal(WalletModalTransactionSuccessfulView, {}, true);\n  }\n\n  if (transactionUnSuccessful) {\n    return renderWithModal(WalletModalTransactionFailedView, {}, true);\n  }\n\n  if (viewPreMint) {\n    return renderWithModal(\n      CollectionPreMintView,\n      {\n        goBack: () => handleViewPreMint(false),\n      },\n      false,\n      selectedCollection?.contractAddress\n    );\n  }\n\n  if (viewProvenance) {\n    return renderWithModal(\n      CollectionProvenanceView,\n      {\n        goBack: () => handleViewProvenance(false),\n        goToEnableMinting: () => handleViewPreMint(true),\n        collection: selectedCollection as Collection,\n      },\n      false,\n      selectedCollection?.contractAddress\n    );\n  }\n\n  if (viewReveal) {\n    return renderWithModal(\n      CollectionRevealView,\n      {\n        goBack: () => handleViewReveal(false),\n        collection: selectedCollection as Collection,\n      },\n      false,\n      selectedCollection?.contractAddress\n    );\n  }\n\n  if (!account && !accountChangePending) {\n    return renderWithModal(WalletModalConnectView, {\n      handleConnect,\n      onClose,\n    });\n  }\n\n  if (selectedCollection) {\n    return renderWithModal(\n      CollectionDetails,\n      {\n        collection: selectedCollection as Collection,\n        onBackToCollections: () => {\n          clearSelectedCollection();\n          setTabIndex(1);\n        },\n        goToEnableMinting: handleViewPreMint,\n        goToProvenance: handleViewProvenance,\n        goToRevealCollection: handleViewReveal,\n      },\n      false,\n      selectedCollection.contractAddress\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      scrollBehavior=\"inside\"\n      isCentered={isMintPage}\n    >\n      <ModalOverlay />\n      <ModalContent\n        maxWidth=\"388px\"\n        height=\"663px\"\n        borderRadius={\"12px\"}\n        borderWidth={\"2px\"}\n        borderColor={\"transparent\"}\n        position={isMintPage ? undefined : \"absolute\"}\n        top={isMintPage ? undefined : 3}\n        right={isMintPage ? undefined : \"85px\"}\n      >\n        {accountChangePending && renderLoadingState()}\n        {account &&\n          !accountChangePending &&\n          !isMintPage &&\n          renderModalContentView()}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { usePrevious } from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getCollections } from \"../../../system/api/api\";\nimport { Collection } from \"../../../system/api/types\";\nimport { CollectorContext } from \"../../../system/context/CollectorContext\";\nimport { ContractContext } from \"../../../system/context/ContractContext\";\nimport { WalletContext } from \"../../../system/context/WalletContext\";\nimport { WalletModalContainerProps } from \"./types\";\nimport { WalletModal } from \"./WalletModal\";\n\nexport const WalletModalContainer = ({\n  isOpen,\n  onClose,\n  walletModalTabIndex,\n  collectionId,\n}: WalletModalContainerProps) => {\n  const {\n    balance,\n    disconnect,\n    account,\n    ethereum,\n    connect,\n    accountChangePending,\n    isWrongNetwork,\n    switchNetwork,\n    validation,\n  } = React.useContext(WalletContext);\n\n  const {\n    transactionPending,\n    transactionSuccessful,\n    transactionUnSuccessful,\n    resetTransactionState,\n    tokenIds,\n    hasReceipt,\n    mintPrice,\n  } = React.useContext(ContractContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedCollection, setSelectedCollection] =\n    React.useState<Collection>();\n\n  const [viewPreMint, setViewPreMint] = React.useState(false);\n  const [viewReveal, setViewReveal] = React.useState(false);\n  const [viewProvenance, setViewProvenance] = React.useState(false);\n\n  const [collections, setCollections] = React.useState<Collection[]>();\n\n  const prevCollectionId = usePrevious(collectionId);\n  const { isMintPage } = useContext(CollectorContext);\n\n  React.useEffect(() => {\n    if (isOpen && account && ethereum) {\n      getCollections(account, validation).then((collections) => {\n        setCollections(collections);\n      });\n    }\n  }, [account, ethereum, isOpen, validation]);\n\n  React.useEffect(() => {\n    if (collectionId && prevCollectionId !== collectionId) {\n      if (account) {\n        getCollections(account, validation).then((collections) => {\n          setCollections(collections);\n          handleSelectCollection(collectionId, collections);\n        });\n      }\n    }\n  }, [collectionId, collections, prevCollectionId, account, validation]);\n\n  const handleSelectCollection = (id: string, collections: Collection[]) => {\n    const collection = collections?.find((c) => c.id === id);\n    setSelectedCollection(collection);\n  };\n\n  const handleUpdateCollections = (collections: Collection[]) => {\n    setCollections([...collections]);\n  };\n\n  const handleConnect = (isMetaMask: boolean) => {\n    connect(isMetaMask);\n    if (isMintPage) {\n      onClose();\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n    handleClose();\n    const path = location.pathname;\n    if (path !== \"/home\" && path !== \"/kitchen\") {\n      navigate(\"/home\", { replace: true });\n    }\n  };\n\n  const handleClose = () => {\n    // Clean up modal state before closing\n    resetTransactionState();\n    setSelectedCollection(undefined);\n    setViewPreMint(false);\n    setViewProvenance(false);\n    setViewReveal(false);\n\n    onClose();\n  };\n\n  return (\n    <WalletModal\n      balance={balance}\n      insufficientFunds={parseInt(balance) < mintPrice}\n      account={account}\n      accountChangePending={accountChangePending}\n      collections={collections || []}\n      isWrongNetwork={isWrongNetwork}\n      switchNetwork={switchNetwork}\n      transactionPending={transactionPending}\n      transactionSuccessful={transactionSuccessful}\n      transactionUnSuccessful={transactionUnSuccessful}\n      tokenIds={tokenIds}\n      viewPreMint={viewPreMint}\n      viewReveal={viewReveal}\n      viewProvenance={viewProvenance}\n      handleSelectCollection={handleSelectCollection}\n      handleUpdateCollections={handleUpdateCollections}\n      handleConnect={handleConnect}\n      handleDisconnect={handleDisconnect}\n      handleClose={handleClose}\n      handleViewPreMint={(view: boolean) => setViewPreMint(view)}\n      handleViewReveal={(view: boolean) => setViewReveal(view)}\n      handleViewProvenance={(view: boolean) => setViewProvenance(view)}\n      hasReceipt={hasReceipt}\n      walletModalTabIndex={walletModalTabIndex}\n      isOpen={isOpen}\n      onClose={onClose}\n      selectedCollection={selectedCollection}\n      clearSelectedCollection={() => setSelectedCollection(undefined)}\n    />\n  );\n};\n","import React from \"react\";\nimport NoReceiptModal from \"../../pages/Modals/NoReceiptModal/NoReceiptModal\";\nimport { TransactionPendingModal } from \"../../pages/Modals/TransactionPendingModal/TransactionPendingModal\";\nimport { WalletModalContainer } from \"../../pages/Modals/WalletModal/WalletModalContainer\";\nimport {\n  ModalController,\n  useModalController,\n} from \"../hooks/useModalController\";\n\ninterface IModalContext extends ModalController {}\n\nexport const ModalContext = React.createContext<IModalContext>(\n  {} as IModalContext\n);\n\nexport const ModalProvider: React.FC = ({ children }) => {\n  const modalController = useModalController();\n  return (\n    <ModalContext.Provider value={{ ...modalController }}>\n      {children}\n      <WalletModalContainer\n        isOpen={modalController.walletModal.isOpen}\n        onClose={modalController.walletModal.onClose}\n        walletModalTabIndex={modalController.walletModalTabIndex}\n        collectionId={modalController.collectionId}\n      />\n      <NoReceiptModal\n        isOpen={modalController.noReceiptsModal.isOpen}\n        onClose={modalController.noReceiptsModal.onClose}\n      />\n      <TransactionPendingModal\n        isOpen={modalController.transactionPendingModal.isOpen}\n        onClose={modalController.transactionPendingModal.onClose}\n      />\n    </ModalContext.Provider>\n  );\n};\n","import { Button } from \"@chakra-ui/button\";\nimport {\n  APP_SECONDARY_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n} from \"../../theme/colors\";\nimport { HeaderButtonProps } from \"./types\";\n\nexport const HeaderButton = ({ text, profile, ...rest }: HeaderButtonProps) => {\n  return (\n    <Button\n      color={profile ? \"#fff\" : APP_SECONDARY_COLOR}\n      _focus={{ borderColor: profile ? APP_SECONDARY_COLOR : \"none\" }}\n      _disabled={{ cursor: \"default\", color: APP_TEXT_INACTIVE_COLOR }}\n      _hover={{ bgColor: \"#282828\" }}\n      _active={{ bgColor: \"none\" }}\n      fontFamily={profile ? \"heading\" : \"body\"}\n      fontSize=\"16px\"\n      fontWeight={profile ? \"bold\" : \"normal\"}\n      borderColor={profile ? APP_SECONDARY_COLOR : \"none\"}\n      variant={profile ? \"outline\" : \"ghost\"}\n      ml={profile ? \"65px\" : 0}\n      {...rest}\n    >\n      {text}\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ContractContext } from \"../../../system/context/ContractContext\";\nimport { ModalContext } from \"../../../system/context/ModalContext\";\nimport { WalletContext } from \"../../../system/context/WalletContext\";\n\nexport const useNoReceipt = () => {\n  const { hasReceipt } = React.useContext(ContractContext);\n  const { account } = React.useContext(WalletContext);\n  const { noReceiptsModal, walletModal } = React.useContext(ModalContext);\n  let navigate = useNavigate();\n  const handleCreateNewCollection = () => {\n    if (!account) {\n      walletModal.onOpen();\n      return;\n    }\n\n    if (hasReceipt) {\n      navigate(\"/create-collection\");\n    } else {\n      noReceiptsModal.onOpen();\n    }\n  };\n\n  return {\n    handleCreateNewCollection,\n  };\n};\n","import {\n  Flex,\n  Image,\n  Box,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport {\n  APP_HEADER_BACKGROUND_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport React, { useContext } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { WalletContext } from \"../../system/context/WalletContext\";\nimport { ConnectWalletButton } from \"../../components/buttons\";\nimport { ModalContext } from \"../../system/context/ModalContext\";\nimport { HeaderButton } from \"../../components/buttons/HeaderButton\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport { useScreenSize } from \"../../system/hooks/useScreenSize\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { ContractContext } from \"../../system/context/ContractContext\";\nimport { FaDiscord } from \"react-icons/fa\";\nimport { BsChevronDown } from \"react-icons/bs\";\nimport { DISCORD_PAGE_HREF } from \"../../system/constants\";\nimport { useNoReceipt } from \"../../pages/Modals/NoReceiptModal/useNoReceipt\";\nimport { CollectorContext } from \"../../system/context/CollectorContext\";\n\nexport const AppHeader = () => {\n  const { accountChangePending, account } = React.useContext(WalletContext);\n  const { hasReceipt } = useContext(ContractContext);\n  const { walletModal } = useContext(ModalContext);\n  const { uiText } = useUiText();\n  const { isWidthOrGreater } = useScreenSize(1024);\n  const { handleCreateNewCollection } = useNoReceipt();\n  const location = useLocation();\n  const { isMintPage } = useContext(CollectorContext);\n\n  const handleConnect = () => {\n    walletModal.onOpen();\n  };\n\n  const navItems = [\n    <HeaderButton\n      text={uiText.startNewCollection}\n      disabled={location.pathname === \"/create-collection\" || !hasReceipt}\n      display={!account ? \"none\" : \"block\"}\n      onClick={handleCreateNewCollection}\n      mr={\"30px\"}\n    />,\n    <Link to=\"/kitchen\">\n      <HeaderButton\n        text={uiText.enterKitchen}\n        disabled={location.pathname === \"/kitchen\"}\n        display={!account ? \"none\" : \"block\"}\n        mr={\"30px\"}\n      />\n    </Link>,\n    <HeaderButton\n      text={uiText.mintReceipt}\n      disabled={!account}\n      onClick={handleConnect}\n      display={!account ? \"none\" : \"block\"}\n    />,\n    <Flex flexDir=\"row\" alignItems=\"center\">\n      {account ? (\n        !isMintPage ? (\n          <HeaderButton\n            text={uiText.myProfile}\n            onClick={handleConnect}\n            rightIcon={<BsChevronDown color=\"#95ffce\" />}\n            profile\n          />\n        ) : (\n          <ConnectWalletButton\n            isConnected={!!account}\n            onClick={handleConnect}\n            connectPending={accountChangePending}\n          />\n        )\n      ) : (\n        <ConnectWalletButton\n          isConnected={!!account}\n          onClick={handleConnect}\n          connectPending={accountChangePending}\n        />\n      )}\n    </Flex>,\n    <IconButton\n      aria-label=\"link\"\n      as=\"a\"\n      href={DISCORD_PAGE_HREF}\n      bg=\"transparent\"\n      icon={<FaDiscord size=\"22px\" color=\"#fff\" />}\n      _hover={{ bgColor: \"#282828\" }}\n      ml=\"35px\"\n    />,\n  ];\n\n  const mobileHeader = () => {\n    return !isMintPage ? (\n      <Menu>\n        <MenuButton\n          as={IconButton}\n          icon={<GiHamburgerMenu />}\n          colorScheme={\"black\"}\n        />\n        <MenuList bgColor={HOMEPAGE_BACKGROUND_COLOR}>\n          {navItems.map((n, i) => (\n            <MenuItem\n              key={`nav-item-${i}`}\n              _hover={{ bg: \"transparent\" }}\n              _active={{ bgColor: \"transparent\" }}\n              _focus={{ bgColor: \"transparent\" }}\n            >\n              {n}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    ) : (\n      <Flex justify={\"center\"}>{navItems[3]}</Flex>\n    );\n  };\n\n  return (\n    <Flex\n      backgroundColor={APP_HEADER_BACKGROUND_COLOR}\n      minH=\"40px\"\n      paddingLeft={['25px', '25px', \"70px\"]}\n      paddingRight=\"32px\"\n      py={\"20px\"}\n      position=\"sticky\"\n      top={0}\n      zIndex={10}\n      justifyContent=\"space-between\"\n    >\n      <Flex alignItems=\"center\">\n        {isWidthOrGreater ? (\n          <Box w={120}>\n            <Link to=\"/home\">\n              <Image objectFit=\"contain\" h={8} src=\"/logo_omakasea.png\" />\n            </Link>\n          </Box>\n        ) : (\n          <Box w={200}>\n            <Link to=\"/home\">\n              <Image h={8} src=\"/logo_omakasea.png\" marginRight={2} />\n            </Link>\n          </Box>\n        )}\n      </Flex>\n      <Flex>\n        {isWidthOrGreater ? (\n          mobileHeader()\n        ) : (\n          <>\n            {isMintPage ? (\n              <Flex justify={\"center\"}>{navItems[3]}</Flex>\n            ) : (\n              navItems.map((n, i) => {\n                return (\n                  <Flex key={`nav-item-${i}`} justify={\"center\"}>\n                    {n}\n                  </Flex>\n                );\n              })\n            )}\n          </>\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n","import React from \"react\";\n\nexport const useScreenSize = (width: number) => {\n  const [isWidthOrGreater, setIsWidthOrGreater] = React.useState(\n    window.innerWidth < width\n  );\n\n  const updateMedia = () => {\n    setIsWidthOrGreater(window.innerWidth < width);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n\n  return {\n    isWidthOrGreater,\n  };\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { AppFooter } from \"../AppFooter/AppFooter\";\nimport { AppHeader } from \"../AppHeader/AppHeader\";\n\nexport const AppContainer: React.FC = ({ children }) => {\n  return (\n    <>\n      <AppHeader />\n      <Flex paddingTop={0} justifyContent=\"center\" overflow=\"hidden\">\n        <Flex h=\"100%\" w=\"100%\">\n          {children}\n        </Flex>\n      </Flex>\n      <AppFooter />\n    </>\n  );\n};\n","import { Heading } from \"@chakra-ui/react\";\nimport { SectionHeadingProps } from \"./types\";\n\nexport const SectionHeading = ({ text, ...rest }: SectionHeadingProps) => {\n  return (\n    <Heading\n      w={\"500px\"}\n      textAlign=\"left\"\n      letterSpacing=\"-0.72px\"\n      fontSize={{ base: \"20px\", md: \"40px\", lg: \"40px\" }}\n      {...rest}\n    >\n      {text}\n    </Heading>\n  );\n};\n","import { Text } from \"@chakra-ui/react\";\nimport { APP_PRIMARY_TEXT_COLOR } from \"../../theme/colors\";\nimport { SectionTextProps } from \"./types\";\n\nexport const SectionText = ({ text, ...rest }: SectionTextProps) => {\n  return (\n    <Text\n      textAlign=\"left\"\n      fontSize=\"18px\"\n      maxW={450}\n      color={APP_PRIMARY_TEXT_COLOR}\n      {...rest}\n    >\n      {text}\n    </Text>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { DescriptionPageLayoutProps } from \"./types\";\n\nexport const DescriptionPageLayout = ({\n  introSection,\n  sections,\n  bgColor,\n}: DescriptionPageLayoutProps) => {\n  return (\n    <Flex\n      flexDir=\"column\"\n      alignItems=\"center\"\n      pr={[10, 10, 10, 0, 0]}\n      pl={[10, 10, 10, 0, 0]}\n      w=\"100%\"\n      bgColor={bgColor}\n    >\n      <Flex\n        flexWrap=\"nowrap\"\n        flexDir={[\"column\", \"column\", \"column\", \"row\", \"row\"]}\n        justify=\"space-between\"\n        w=\"100%\"\n        mb={[100, 100, 200, 200]}\n      >\n        {/* Intro Section */}\n        {introSection}\n      </Flex>\n      {/* Additional Sections */}\n      {sections.map((section, i) => {\n        if (i % 2 === 0) {\n          return (\n            <Flex\n              key={`key-${i}`}\n              flexDir={[\n                \"column-reverse\",\n                \"column-reverse\",\n                \"column-reverse\",\n                \"row\",\n                \"row\",\n              ]}\n              mb={100}\n            >\n              {section}\n            </Flex>\n          );\n        } else {\n          return (\n            <Flex\n              key={`key-${i}`}\n              flexDir={[\"column\", \"column\", \"column\", \"row\", \"row\"]}\n              mb={150}\n              w={[\"100%\", \"100%\", \"100%\", \"auto\", \"auto\"]}\n            >\n              {section}\n            </Flex>\n          );\n        }\n      })}\n    </Flex>\n  );\n};\n","import {\n  Flex,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Image,\n  chakra,\n  Box,\n  Text,\n  Button,\n} from \"@chakra-ui/react\";\nimport {\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_TAB_LIST_SELECTED_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PrimaryButton } from \"../../components/buttons\";\nimport { SectionHeading, SectionText } from \"../../components/text\";\nimport { ModalContext } from \"../../system/context/ModalContext\";\nimport { DescriptionPageLayout } from \"../../layout/DescriptionPageLayout/DescriptionPageLayout\";\nimport { useNoReceipt } from \"../Modals/NoReceiptModal/useNoReceipt\";\n\nexport const HomePage = () => {\n  const { uiText } = useUiText();\n  const { walletModal } = useContext(ModalContext);\n\n  const { handleCreateNewCollection } = useNoReceipt();\n\n  const renderIntroSection = () => {\n    return (\n      <Box\n        display={\"flex\"}\n        flex={1}\n        justifyContent={\"space-between\"}\n        flexDir={\"row\"}\n        pl={\"117px\"}\n      >\n        <Flex flex={1} flexDir=\"column\">\n          <SectionHeading\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.introHeading1}\n            marginTop={[\"30px\", \"30px\", \"30px\", \"100px\", \"100px\"]}\n            lineHeight=\"68px\"\n            letterSpacing={\"-0.48px\"}\n          />\n          <SectionHeading\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.introHeading2}\n            mb={10}\n            lineHeight=\"68px\"\n            letterSpacing={\"-0.48px\"}\n          />\n          <Flex>\n            <PrimaryButton\n              text={uiText.startNftCollection}\n              onClick={handleCreateNewCollection}\n              w=\"238px\"\n              h=\"54px\"\n              fontSize={\"16px\"}\n              fontWeight={\"bold\"}\n              fontFamily={\"body\"}\n            />\n          </Flex>\n          <Button\n            bgColor={HOMEPAGE_BACKGROUND_COLOR}\n            _hover={{ opacity: 0.8 }}\n            _focus={{\n              outlineColor: \"transparent\",\n            }}\n            display=\"flex\"\n            flexDir={\"row\"}\n            w=\"130px\"\n            h=\"40px\"\n            mt=\"70px\"\n            onClick={() => window.open(\"/files/Lightpaper.pdf\")}\n          >\n            <Image\n              src=\"/images/file.png\"\n              srcSet=\"/images/file@2x.png 2x\"\n              objectFit={\"cover\"}\n              w=\"13px\"\n              h=\"17px\"\n            />\n            <Text\n              fontFamily={\"body\"}\n              fontWeight=\"medium\"\n              fontSize={\"15px\"}\n              color={APP_PRIMARY_CONTRAST_COLOR}\n              ml=\"9px\"\n            >\n              {uiText.lightPaper}\n            </Text>\n          </Button>\n        </Flex>\n        <Image\n          src=\"/cashlady_edited.svg\"\n          boxSize={\"740px\"}\n          objectFit={\"cover\"}\n          marginTop={\"-58px\"}\n        />\n      </Box>\n    );\n  };\n\n  const renderAboutSection = () => {\n    return (\n      <>\n        <Image\n          src=\"/whats_omakasea.png\"\n          maxH={500}\n          marginTop={[2, 2, 2, -20, -20]}\n          marginRight={[0, 0, 150, 150]}\n          objectFit=\"cover\"\n        />\n        <Flex flexDir=\"column\">\n          <SectionHeading\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.aboutHeading}\n            mb={\"40px\"}\n            fontFamily={\"heading\"}\n            fontWeight=\"bold\"\n          />\n          <SectionText\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.aboutDescription1}\n            fontSize={\"16px\"}\n            fontFamily=\"body\"\n          />\n          <SectionText\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.aboutDescription2}\n            fontSize={\"16px\"}\n            fontFamily=\"body\"\n          />\n        </Flex>\n      </>\n    );\n  };\n\n  const renderReceiptSection = () => {\n    return (\n      <>\n        <chakra.div mt=\"-100px\" visibility=\"hidden\" id=\"receipt-section\" />\n        <Flex flexDir=\"column\" alignItems={\"flex-start\"} h=\"500px\">\n          <SectionHeading\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.receiptHeading}\n            mb={\"40px\"}\n          />\n          <Tabs\n            variant=\"line\"\n            display={\"flex\"}\n            flexDir={\"column\"}\n            justifyContent={\"start\"}\n          >\n            <TabList borderBottom=\"none\">\n              {[\n                uiText.receiptSubHeadingOverview,\n                uiText.receiptSubHeadingSpecs,\n                uiText.receiptSubHeadingAuthenticity,\n              ].map((subHeading) => (\n                <Tab\n                  key={`sub-heading-${subHeading}`}\n                  _selected={{\n                    borderColor: APP_SECONDARY_COLOR,\n                    color: APP_TAB_LIST_SELECTED_COLOR,\n                  }}\n                  _focus={{ boxShadow: \"none\" }}\n                  _active={{ background: \"none\" }}\n                  fontFamily=\"'Montserrat', sans-serif\"\n                  color=\"#939393\"\n                  mr={\"50px\"}\n                  w={\"full\"}\n                  textAlign={\"left\"}\n                  fontSize={\"24px\"}\n                  fontWeight={\"semibold\"}\n                >\n                  {subHeading}\n                </Tab>\n              ))}\n            </TabList>\n            <TabPanels mt={\"20px\"}>\n              <TabPanel pl={0}>\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptOverviewDescription1}\n                  fontSize={\"16px\"}\n                  mb={\"25px\"}\n                />\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptOverviewDescription2}\n                  fontSize={\"16px\"}\n                  mb={0}\n                />\n              </TabPanel>\n              <TabPanel pl={0}>\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptSpecsDescription1}\n                  fontSize={\"16px\"}\n                  mb={\"25px\"}\n                />\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptSpecsDescription2}\n                  fontSize={\"16px\"}\n                  mb={0}\n                />\n              </TabPanel>\n              <TabPanel pl={0}>\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptAuthenticityDescription1}\n                  fontSize={\"16px\"}\n                  maxW=\"536px\"\n                  mb={\"25px\"}\n                />\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptAuthenticityDescription2}\n                  fontSize={\"16px\"}\n                  maxW=\"536px\"\n                  mb={\"25px\"}\n                />\n                <SectionText\n                  color={APP_PRIMARY_CONTRAST_COLOR}\n                  text={uiText.receiptAuthenticityDescription3}\n                  fontSize={\"16px\"}\n                  maxW=\"536px\"\n                  mb={0}\n                />\n              </TabPanel>\n            </TabPanels>\n            <PrimaryButton\n              mt={\"60px\"}\n              alignSelf={\"self-start\"}\n              text={uiText.mintReceipt}\n              onClick={() => walletModal.onOpen(0)}\n              fontFamily=\"body\"\n              fontSize={\"16px\"}\n              fontWeight=\"bold\"\n            />\n          </Tabs>\n        </Flex>\n        <Image src=\"/Receipt.png\" h={500} objectFit=\"contain\" />\n      </>\n    );\n  };\n\n  const renderKitchenSection = () => {\n    return (\n      <Box mt={\"60px\"} flexDir=\"row\" display={\"flex\"}>\n        <Image\n          src=\"/kitchen.png\"\n          h={600}\n          marginRight={[0, 0, 0, 50, 100, 100]}\n          objectFit={\"contain\"}\n        />\n        <Flex flexDir=\"column\">\n          <SectionHeading\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.visitKitchenHeading}\n            mb={\"40px\"}\n          />\n          <SectionText\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.visitKitchenDescription1}\n            fontSize={\"16px\"}\n            mb={\"25px\"}\n            w=\"379px\"\n          />\n          <SectionText\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.visitKitchenDescription2}\n            fontSize={\"16px\"}\n            mb={\"25px\"}\n            w=\"379px\"\n          />\n          <SectionText\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            text={uiText.visitKitchenDescription3}\n            fontSize={\"16px\"}\n            w=\"379px\"\n            mb={0}\n          />\n          <Flex mt={\"60px\"}>\n            <Link to=\"/kitchen\">\n              <PrimaryButton\n                text={uiText.enterKitchen}\n                fontFamily=\"body\"\n                fontSize={\"16px\"}\n                fontWeight=\"bold\"\n              />\n            </Link>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  };\n\n  return (\n    <DescriptionPageLayout\n      introSection={renderIntroSection()}\n      sections={[\n        renderAboutSection(),\n        renderReceiptSection(),\n        renderKitchenSection(),\n      ]}\n      bgColor={HOMEPAGE_BACKGROUND_COLOR}\n    />\n  );\n};\n","import React from \"react\";\nimport { Flex, Image, Text } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { PrimaryButton } from \"../../components/buttons\";\n\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport useDeviceDetect from \"../../system/hooks/useDeviceDetect\";\nimport { APP_HEADER_TEXT_COLOR } from \"../../theme/colors\";\n// import { FaDiscord } from \"react-icons/fa\";\n// import { DISCORD_PAGE_HREF } from \"../../system/constants\";\n\nexport const LandingPage = () => {\n  const { uiText } = useUiText();\n  const { isMobile } = useDeviceDetect();\n  return (\n    <Flex\n      h=\"100vh\"\n      w=\"100%\"\n      background={`linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(/landingpage_background.png)`}\n      backgroundPosition=\"center\"\n      backgroundSize=\"cover\"\n      alignItems={isMobile ? \"flex-start\" : \"center\"}\n      justifyContent=\"center\"\n    >\n      <Flex flexDir=\"column\" alignItems={\"center\"}>\n        <Image\n          src=\"/omakasea_symbol.png\"\n          w={[\"100px\", \"220px\"]}\n          mb={isMobile ? \"28px\" : \"60px\"}\n          mt={isMobile ? \"100px\" : 0}\n        />\n        {isMobile ? (\n          <Text\n            fontFamily={\"heading\"}\n            fontWeight={\"bold\"}\n            textAlign={\"center\"}\n            width={\"94px\"}\n            fontSize={\"13px\"}\n            color={APP_HEADER_TEXT_COLOR}\n          >\n            {uiText.mobileLanding}\n          </Text>\n        ) : (\n          <Link to=\"/home\">\n            <PrimaryButton text={uiText.enter} w=\"205px\" />\n          </Link>\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n","import { FormLabel as FrmLabel } from \"@chakra-ui/react\";\nimport { FormLabelProps } from \"./types\";\n\nfunction FormLabel(props: FormLabelProps) {\n  const { text, name, fontSize } = props;\n\n  return (\n    <FrmLabel\n      {...props}\n      htmlFor={name}\n      color={\"#121212\"}\n      fontSize={fontSize || \"20px\"}\n      fontFamily={\"heading\"}\n      fontWeight={\"semibold\"}\n    >\n      {text}\n    </FrmLabel>\n  );\n}\n\nexport default FormLabel;\n","import { FormLabel as FrmLabel } from \"@chakra-ui/react\";\nimport { FormLabelProps } from \"./types\";\n\nfunction FormDescription(props: FormLabelProps) {\n  const { text, name, width, fontSize, textAlign } = props;\n  return (\n    <FrmLabel\n      {...props}\n      htmlFor={name}\n      color={\"#939393\"}\n      fontSize={fontSize || \"16px\"}\n      w={width}\n      fontFamily={\"body\"}\n      textAlign={textAlign}\n    >\n      {text}\n    </FrmLabel>\n  );\n}\n\nexport default FormDescription;\n","import { Flex, Image } from \"@chakra-ui/react\";\nimport FormDescription from \"../forms/FormDescription\";\nimport FormLabel from \"../forms/FormLabel\";\nimport { AddCollectionButtonProps } from \"./types\";\n\nfunction AddCollectionButton(props: AddCollectionButtonProps) {\n  const {\n    onClick,\n    label,\n    labelDescription,\n    width,\n    height,\n    marginTop,\n    labelWidth,\n  } = props;\n  return (\n    <Flex\n      width={width || \"177px\"}\n      height={height || \"231px\"}\n      cursor={\"pointer\"}\n      mt={marginTop || \"0px\"}\n      className=\"block\"\n      direction=\"column\"\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      onClick={onClick}\n    >\n      <Image src=\"/add.png\" w=\"48px\" h=\"48px\" mr=\"0px\" objectFit={\"contain\"} />\n      <FormLabel\n        fontSize={\"16px\"}\n        width={labelWidth || \"80px\"}\n        name=\"upload\"\n        mr=\"0px\"\n        mt=\"28px\"\n        fontWeight={\"semibold\"}\n        fontFamily={\"heading\"}\n        textAlign={\"center\"}\n        text={label}\n        cursor={\"pointer\"}\n      />\n\n      <FormDescription\n        textAlign={\"center\"}\n        fontSize={\"10px\"}\n        mr=\"0px\"\n        width=\"100px\"\n        text={labelDescription}\n        cursor={\"pointer\"}\n      />\n    </Flex>\n  );\n}\n\nexport default AddCollectionButton;\n","import { Box, Flex, Image, Input } from \"@chakra-ui/react\";\nimport FormLabel from \"../forms/FormLabel\";\nimport { UploadAttributeCardProps } from \"./types\";\n\nfunction UploadAttributeCard({\n  onDelete,\n  file,\n  onChange,\n}: UploadAttributeCardProps) {\n  return (\n    <Box\n      boxShadow={\"lg\"}\n      flexDir={\"column\"}\n      w=\"175px\"\n      h=\"210px\"\n      justifyContent={\"center\"}\n      px=\"12px\"\n      borderRadius={\"8px\"}\n    >\n      <Flex\n        flex={1}\n        w=\"100%\"\n        py=\"4px\"\n        alignItems={\"center\"}\n        justifyContent={\"space-between\"}\n      >\n        <FormLabel\n          fontSize={\"11px\"}\n          margin={0}\n          text={file.name}\n          w=\"135px\"\n          overflow={\"hidden\"}\n          whiteSpace=\"nowrap\"\n          textOverflow=\"ellipsis\"\n        />\n        <Image\n          cursor={\"pointer\"}\n          display={\"flex\"}\n          src=\"/delete.png\"\n          w=\"12px\"\n          h=\"12px\"\n          objectFit={\"contain\"}\n          onClick={onDelete}\n        />\n      </Flex>\n      <Flex\n        borderWidth={\"0.5px\"}\n        borderRadius={\"4px\"}\n        flex={6}\n        w=\"100%\"\n        justifyContent={\"space-between\"}\n      >\n        <Image\n          w=\"167px\"\n          h=\"149px\"\n          src={URL.createObjectURL(file)}\n          objectFit={\"contain\"}\n        />\n      </Flex>\n      <Flex\n        mt=\"4px\"\n        flex={1}\n        w=\"100%\"\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        <FormLabel\n          fontSize={\"10px\"}\n          display={\"flex\"}\n          flex={1}\n          margin={0}\n          text={\"Rarity Weight\"}\n        />\n        <Input\n          type=\"number\"\n          id=\"attributeName\"\n          size={\"xs\"}\n          w=\"45px\"\n          h=\"20px\"\n          borderColor={\"#121212\"}\n          fontSize={\"10px\"}\n          placeholder=\"100%\"\n          value={file.rarityWeight}\n          onChange={(value) => {\n            value.preventDefault();\n            onChange(value);\n          }}\n        />\n      </Flex>\n    </Box>\n  );\n}\n\nexport default UploadAttributeCard;\n","import { Box, Button, chakra } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_INFO_BACKGROUND_COLOR,\n  DELETE_BUTTON_COLOR,\n} from \"../../theme/colors\";\nimport { DeleteConfirmationModalProps } from \"./types\";\n\nfunction DeleteAttributeConfirmationModal({\n  onClose,\n  name,\n}: DeleteConfirmationModalProps) {\n  const { uiText } = useUiText();\n\n  return (\n    <Box\n      top={0}\n      bottom={0}\n      left={0}\n      right={0}\n      position={\"absolute\"}\n      bg=\"rgba(0,0,0,0.5)\"\n      zIndex={10}\n    >\n      <Box\n        bgColor={APP_HEADER_TEXT_COLOR}\n        position={\"absolute\"}\n        top={\"50%\"}\n        left={\"50%\"}\n        transform={\"translate(-50%, -50%)\"}\n        width={\"360px\"}\n        height={\"360px\"}\n        zIndex={20}\n        borderRadius={\"8px\"}\n        display={\"flex\"}\n        flexDir={\"column\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n      >\n        <chakra.h2\n          fontSize={\"28px\"}\n          fontWeight={\"bold\"}\n          color={APP_INFO_BACKGROUND_COLOR}\n          mb={\"14px\"}\n        >\n          {uiText.deleteCollectionTitle}\n        </chakra.h2>\n        <chakra.h2\n          fontSize={\"20px\"}\n          fontWeight={\"medium\"}\n          color={APP_INFO_BACKGROUND_COLOR}\n          mb={\"66px\"}\n        >\n          {name}\n        </chakra.h2>\n        <Button\n          width={\"204px\"}\n          height={\"40px\"}\n          fontSize={\"12px\"}\n          fontWeight={\"bold\"}\n          bgColor={DELETE_BUTTON_COLOR}\n          color={APP_HEADER_TEXT_COLOR}\n          onClick={() => onClose(true)}\n          mb={\"10px\"}\n          _hover={{ bg: \"rgba(252, 53, 91, 0.7)\" }}\n        >\n          {uiText.deleteCollectionButton1}\n        </Button>\n        <Button\n          width={\"204px\"}\n          height={\"40px\"}\n          fontSize={\"12px\"}\n          fontWeight={\"bold\"}\n          borderWidth={\"1px\"}\n          borderColor={APP_INFO_BACKGROUND_COLOR}\n          bgColor={APP_HEADER_TEXT_COLOR}\n          color={APP_INFO_BACKGROUND_COLOR}\n          onClick={() => onClose(false)}\n        >\n          {uiText.deleteCollectionButton2}\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default DeleteAttributeConfirmationModal;\n","import { Box, Button, chakra } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_INFO_BACKGROUND_COLOR,\n  DELETE_BUTTON_COLOR,\n} from \"../../theme/colors\";\nimport { DeleteTraitCardProps } from \"./types\";\n\nfunction DeleteTraitCard({ onClose, name }: DeleteTraitCardProps) {\n  const { uiText } = useUiText();\n\n  return (\n    <Box\n      boxShadow={\"lg\"}\n      flexDir={\"column\"}\n      w=\"175px\"\n      h=\"210px\"\n      display={\"flex\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      px=\"12px\"\n      borderRadius={\"8px\"}\n      textAlign={\"center\"}\n    >\n      <chakra.h2\n        fontSize={\"22px\"}\n        fontWeight={\"bold\"}\n        color={APP_INFO_BACKGROUND_COLOR}\n        mb={\"9px\"}\n      >\n        {uiText.deleteCollectionTraitTitle}\n      </chakra.h2>\n      <chakra.h2\n        fontSize={\"14px\"}\n        fontWeight={\"medium\"}\n        color={APP_INFO_BACKGROUND_COLOR}\n        mb={\"43px\"}\n      >\n        {name}\n      </chakra.h2>\n      <Button\n        width={\"141px\"}\n        height={\"27px\"}\n        fontSize={\"10px\"}\n        fontWeight={\"bold\"}\n        bgColor={DELETE_BUTTON_COLOR}\n        color={APP_HEADER_TEXT_COLOR}\n        onClick={() => onClose(true)}\n        mb={\"10px\"}\n        _hover={{ bg: \"rgba(252, 53, 91, 0.7)\" }}\n      >\n        {uiText.deleteCollectionButton1}\n      </Button>\n      <Button\n        width={\"141px\"}\n        height={\"27px\"}\n        fontSize={\"10px\"}\n        fontWeight={\"bold\"}\n        borderWidth={\"1px\"}\n        borderColor={APP_INFO_BACKGROUND_COLOR}\n        bgColor={APP_HEADER_TEXT_COLOR}\n        color={APP_INFO_BACKGROUND_COLOR}\n        onClick={() => onClose(false)}\n      >\n        {uiText.deleteCollectionButton2}\n      </Button>\n    </Box>\n  );\n}\n\nexport default DeleteTraitCard;\n","import { Box, Button, chakra, Image } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  FILE_ERROR_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport { FileErrorModalProps } from \"./types\";\n\nfunction FileErrorModal({ onClose, filenames }: FileErrorModalProps) {\n  const { uiText } = useUiText();\n\n  return (\n    <Box\n      top={0}\n      bottom={0}\n      left={0}\n      right={0}\n      position={\"fixed\"}\n      bg=\"rgba(0,0,0,0.5)\"\n      zIndex={10}\n    >\n      <Box\n        bgColor={APP_HEADER_TEXT_COLOR}\n        position={\"absolute\"}\n        top={\"50%\"}\n        left={\"50%\"}\n        transform={\"translate(-50%, -50%)\"}\n        width={\"360px\"}\n        height={\"360px\"}\n        zIndex={20}\n        borderRadius={\"8px\"}\n        display={\"flex\"}\n        flexDir={\"column\"}\n        alignItems={\"center\"}\n      >\n        <Button\n          onClick={onClose}\n          position={\"absolute\"}\n          mt={\"5px\"}\n          mr={\"5px\"}\n          alignSelf={\"flex-end\"}\n          bgColor={\"transparent\"}\n        >\n          <Image\n            src=\"./Close.png\"\n            width=\"14px\"\n            height=\"14px\"\n            objectFit={\"contain\"}\n          />\n        </Button>\n        <Image\n          src=\"./error.png\"\n          width=\"52px\"\n          height=\"52px\"\n          objectFit={\"contain\"}\n          mt=\"52px\"\n        />\n        <chakra.h2\n          fontSize={\"18px\"}\n          fontWeight={\"semibold\"}\n          color={HOMEPAGE_BACKGROUND_COLOR}\n          mt={\"16px\"}\n        >\n          {uiText.fileErrorTitle}\n        </chakra.h2>\n        <chakra.h2\n          fontSize={\"10px\"}\n          fontWeight={\"medium\"}\n          color={HOMEPAGE_BACKGROUND_COLOR}\n          mt={\"6px\"}\n          mb={\"20px\"}\n          w=\"250px\"\n          textAlign={\"center\"}\n        >\n          {uiText.fileErrorDescription}\n        </chakra.h2>\n        {filenames.slice(0, 5).map((name, index) => {\n          const splitString = name.split(\".\");\n          const stringLength = splitString.length;\n          const ext = splitString[stringLength - 1];\n          const filename = name.split(ext)[0];\n          return (\n            <Box\n              key={index}\n              display={\"flex\"}\n              w={\"150px\"}\n              alignItems={\"start\"}\n            >\n              <chakra.h2\n                fontSize={\"12px\"}\n                fontWeight={\"medium\"}\n                color={FILE_ERROR_COLOR}\n                mb={\"2px\"}\n                overflow={\"hidden\"}\n                whiteSpace={\"nowrap\"}\n                textOverflow={\"ellipsis\"}\n                textAlign={\"left\"}\n              >\n                {filename}\n              </chakra.h2>\n              <chakra.h2\n                fontSize={\"12px\"}\n                fontWeight={\"medium\"}\n                color={FILE_ERROR_COLOR}\n              >\n                {ext}\n              </chakra.h2>\n            </Box>\n          );\n        })}\n        {filenames.length > 5 && (\n          <chakra.h2\n            fontSize={\"12px\"}\n            fontWeight={\"medium\"}\n            textAlign={\"left\"}\n            color={FILE_ERROR_COLOR}\n            mb={\"2px\"}\n            w=\"150px\"\n            overflow={\"hidden\"}\n            whiteSpace={\"nowrap\"}\n            textOverflow={\"ellipsis\"}\n          >\n            {`+ ${filenames.length - 5} more`}\n          </chakra.h2>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default FileErrorModal;\n","import { ChangeEvent, useCallback, useEffect, useState } from \"react\";\nimport {\n  Flex,\n  Input,\n  Button,\n  Image as ImageChakra,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalCloseButton,\n  ModalHeader,\n  ModalBody,\n  Box,\n  Grid,\n  ScaleFade,\n  SlideFade,\n} from \"@chakra-ui/react\";\nimport FormDescription from \"../forms/FormDescription\";\nimport FormLabel from \"../forms/FormLabel\";\nimport { FileWithPath, useDropzone } from \"react-dropzone\";\nimport { UploadAttributeModalProps } from \"./types\";\nimport AddCollectionButton from \"../buttons/AddCollectionButton\";\nimport UploadAttributeCard from \"../cards/UploadAttributeCard\";\nimport { DropFileType } from \"../../types\";\nimport DeleteAttributeConfirmationModal from \"./DeleteAttributeConfirmationModal\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport DeleteTraitCard from \"../cards/DeleteTraitCard\";\nimport FileErrorModal from \"./FileErrorModal\";\n\nfunction UploadAttributeModal({\n  isOpen,\n  onClose,\n  onDeleteAttribute,\n  name,\n  attributes,\n  index,\n}: UploadAttributeModalProps) {\n  const { uiText } = useUiText();\n  const [attributeName, setAttributeName] = useState(\"\");\n  const [isDeleteAttributeConfirmation, setIsDeleteAttributeConfirmation] =\n    useState(false);\n  const [showFileReject, setShowFileReject] = useState(false);\n  const [files, setFiles] = useState([] as DropFileType[]);\n\n  const onDrop = useCallback(\n    (acceptedFiles: FileWithPath[]) => {\n      if (acceptedFiles.length > 0) {\n        const name = acceptedFiles[0].path!.split(\"/\")[1];\n        if (name) {\n          setAttributeName(name);\n        }\n        const droppedFile = files;\n        droppedFile.push(...(acceptedFiles as DropFileType[]));\n        const renamed = droppedFile.map((file) => {\n          const hashtag = file.name.search(\"#\") !== -1;\n          const fileName = file.name.split(hashtag ? \"#\" : \".\")[0];\n          const rarity = hashtag ? file.name.split(\"#\")[1].split(\".\")[0] : \"1\";\n          const newFile = new File([file], `${fileName}#${rarity}.png`, {\n            type: file.type,\n          });\n\n          return Object.assign(newFile, {\n            path: file.path,\n            rarityWeight: rarity,\n            isDelete: false,\n          });\n        }) as DropFileType[];\n\n        setFiles(renamed);\n      }\n    },\n    [files]\n  );\n\n  useEffect(() => {\n    setAttributeName(name || \"\");\n    setFiles(attributes || []);\n    return () => {\n      setAttributeName(\"\");\n    };\n  }, [name, attributes, index]);\n\n  const { getRootProps, open, getInputProps, fileRejections } = useDropzone({\n    onDrop,\n    accept: \"image/png\",\n    maxSize: 10485760,\n    noClick: true,\n  });\n\n  useEffect(() => {\n    if (fileRejections.length) {\n      setShowFileReject(true);\n    }\n  }, [fileRejections]);\n\n  const changeRarityWeight = (\n    index: number,\n    { currentTarget }: ChangeEvent<HTMLInputElement>\n  ) => {\n    const array = [...files];\n    const renamed = array.map((file, key) => {\n      if (index === key) {\n        const fileName = file.name.split(\"#\")[0];\n        return new File([file], `${fileName}#${currentTarget.value}.png`, {\n          type: file.type,\n        });\n      }\n      return file;\n    }) as DropFileType[];\n    renamed[index].rarityWeight = currentTarget.value;\n    setFiles(renamed);\n  };\n\n  const changeAttributeName = ({\n    currentTarget,\n  }: ChangeEvent<HTMLInputElement>) => {\n    setAttributeName(currentTarget.value);\n  };\n\n  const onCloseModal = () => {\n    if (index === undefined) {\n      onClose(attributeName, files);\n      setFiles([]);\n    } else {\n      onClose(attributeName, files, index);\n    }\n  };\n\n  const onDeleteTraits = (index: number) => {\n    const array = [...files];\n    array.splice(index, 1);\n    setFiles(array);\n  };\n\n  const onDeleteTraitClick = (index: number, isDelete: boolean) => {\n    const array = [...files];\n    const previousTrait = array\n      .map((el, elIndex) => el.isDelete === true && elIndex !== index)\n      .findIndex((el) => el === true);\n    if (previousTrait !== -1) {\n      array[previousTrait].isDelete = false;\n    }\n    array[index].isDelete = isDelete;\n    setFiles(array);\n  };\n\n  const onConfirmDeleteTrait = (isDelete: boolean, index: number) => {\n    if (isDelete) {\n      onDeleteTraits(index);\n    } else {\n      onDeleteTraitClick(index, false);\n    }\n  };\n\n  const onConfirmDeleteAttribute = (isDelete: boolean) => {\n    if (isDelete) {\n      setAttributeName(\"\");\n      setFiles([]);\n      onDeleteAttribute(index);\n    }\n    setIsDeleteAttributeConfirmation(false);\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        onClose={onCloseModal}\n        size={\"full\"}\n        scrollBehavior=\"inside\"\n      >\n        <ModalOverlay />\n        <ModalContent\n          backgroundColor={\"#121212\"}\n          display={\"flex\"}\n          h=\"100%\"\n          flexWrap={\"wrap\"}\n        >\n          <Box\n            overflowY={\"scroll\"}\n            backgroundColor={\"#FFF\"}\n            position={\"relative\"}\n            flex={1}\n            display={\"flex\"}\n            flexDir={\"column\"}\n            alignSelf={\"stretch\"}\n            mx=\"58px\"\n            my=\"41px\"\n            px=\"40px\"\n            py=\"25px\"\n            borderRadius={\"8px\"}\n          >\n            {isDeleteAttributeConfirmation && (\n              <DeleteAttributeConfirmationModal\n                onClose={onConfirmDeleteAttribute}\n                name={attributeName}\n              />\n            )}\n\n            {showFileReject && (\n              <FileErrorModal\n                onClose={() => setShowFileReject(false)}\n                filenames={fileRejections.map((data) => data.file.name)}\n              />\n            )}\n\n            <ModalHeader>\n              <Flex flexDir={\"row\"}>\n                <Box flex={4}>\n                  <Input\n                    borderWidth={0}\n                    focusBorderColor=\"transparent\"\n                    id=\"attributeName\"\n                    size={\"lg\"}\n                    w=\"500px\"\n                    fontSize={\"30px\"}\n                    fontWeight={600}\n                    placeholder=\"Attribute Name\"\n                    value={attributeName}\n                    onChange={changeAttributeName}\n                  />\n                </Box>\n                <Box\n                  flex={1}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                >\n                  <Button\n                    onClick={() => setIsDeleteAttributeConfirmation(true)}\n                    backgroundColor={\"#FFF\"}\n                    justifyContent={\"center\"}\n                  >\n                    <ImageChakra src=\"/delete.png\" h=\"20px\" mr=\"8px\" />\n                    {uiText.deleteCollectionModal}\n                  </Button>\n                </Box>\n              </Flex>\n            </ModalHeader>\n            <ModalCloseButton size={\"lg\"} />\n            <ModalBody {...getRootProps()}>\n              <input {...getInputProps()} />\n\n              {files.length !== 0 && (\n                <Grid templateColumns=\"repeat(5, 1fr)\" gap={5}>\n                  <AddCollectionButton\n                    width=\"168px\"\n                    height=\"208px\"\n                    labelWidth=\"130px\"\n                    label=\"Add New Trait\"\n                    labelDescription=\"Choose a folder or Drop it here.\"\n                    onClick={open}\n                  />\n\n                  {files.map((file, index) =>\n                    !file.isDelete ? (\n                      <ScaleFade\n                        key={index}\n                        initialScale={0.9}\n                        in={!file.isDelete}\n                        reverse\n                      >\n                        <UploadAttributeCard\n                          file={file}\n                          onDelete={() => {\n                            onDeleteTraitClick(index, true);\n                          }}\n                          onChange={(value) => changeRarityWeight(index, value)}\n                        />\n                      </ScaleFade>\n                    ) : (\n                      <SlideFade\n                        key={index}\n                        reverse\n                        delay={0.1}\n                        in={file.isDelete}\n                      >\n                        <DeleteTraitCard\n                          name={file.name}\n                          onClose={(value) =>\n                            onConfirmDeleteTrait(value, index)\n                          }\n                        />\n                      </SlideFade>\n                    )\n                  )}\n                </Grid>\n              )}\n              {files.length === 0 && (\n                <Flex\n                  cursor={\"pointer\"}\n                  direction=\"column\"\n                  h=\"100%\"\n                  justifyContent={\"center\"}\n                  alignItems={\"center\"}\n                  onClick={open}\n                >\n                  <ImageChakra\n                    src=\"/add.png\"\n                    w=\"78px\"\n                    h=\"78px\"\n                    mr=\"0px\"\n                    objectFit={\"contain\"}\n                  />\n                  <FormLabel\n                    fontSize={\"28px\"}\n                    name=\"upload\"\n                    mr=\"0px\"\n                    mt=\"28px\"\n                    textAlign={\"center\"}\n                    text=\"Start Adding Traits\"\n                  />\n\n                  <FormDescription\n                    textAlign={\"center\"}\n                    fontSize={\"16px\"}\n                    mr=\"0px\"\n                    text=\"Select files or drag and drop here.\"\n                  />\n                  <FormDescription\n                    textAlign={\"center\"}\n                    fontSize={\"12px\"}\n                    mr=\"0px\"\n                    width=\"470px\"\n                    mt=\"40px\"\n                    text=\"Upload the associated traits (files) for your attribute. (e.g., all the different eye colours traits (files) will be added in the “Eye Colour” attribute folder.)\"\n                  />\n                  <FormDescription\n                    textAlign={\"center\"}\n                    fontSize={\"12px\"}\n                    mr=\"0px\"\n                    mt=\"20px\"\n                    mb='0px'\n                    width=\"400px\"\n                    text=\"Image size on all traits must be the same.\"\n                  />\n                  <FormDescription\n                    textAlign={\"center\"}\n                    fontSize={\"12px\"}\n                    mr=\"0px\"\n                    width=\"400px\"\n                    text=\"File type: PNG files with transparent background.\"\n                  />\n                </Flex>\n              )}\n            </ModalBody>\n          </Box>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default UploadAttributeModal;\n","import {\n  useDrag,\n  useDrop,\n  DragLayerMonitor,\n} from \"react-dnd\";\nimport { useRef } from \"react\";\nimport { DragableCardProps } from \"./types\";\nimport AttributeCard from \"./AttributeCard\";\n\nfunction DragableAttributeCard({\n  image,\n  name,\n  totalTraits,\n  onClick,\n  index,\n  moveCard,\n  styles,\n}: DragableCardProps) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"card\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item: DragableCardProps) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: \"card\",\n    item: () => {\n      return { id: index, index };\n    },\n    collect: (monitor: DragLayerMonitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0.5 : 1;\n  const zIndex = isDragging ? 2 : 1;\n\n  drag(drop(ref));\n  return (\n    <div\n      ref={ref}\n      data-handler-id={handlerId}\n      style={{ opacity, zIndex, ...styles }}\n    >\n      <AttributeCard\n        name={name}\n        image={image}\n        totalTraits={totalTraits}\n        onClick={onClick}\n      />\n    </div>\n  );\n}\n\nexport default DragableAttributeCard;\n","import { useCallback } from \"react\";\nimport { AttributeCardContainerProps } from \"./types\";\nimport update from \"immutability-helper\";\nimport DragableAttributeCard from \"../components/cards/DragableCard\";\n\nfunction AttributeCardContainer({\n  attributes,\n  onOpenModal,\n  setAttributes,\n}: AttributeCardContainerProps) {\n  const moveCard = useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const dragCard = attributes[dragIndex];\n      setAttributes(\n        update(attributes, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        })\n      );\n    },\n    [attributes, setAttributes]\n  );\n  return (\n    <>\n      {attributes.map((attribute, index) => (\n        <DragableAttributeCard\n          key={index}\n          moveCard={moveCard}\n          index={index}\n          name={attribute.name}\n          image={URL.createObjectURL(attribute.files[0])}\n          totalTraits={attribute.files.length}\n          onClick={() => onOpenModal(index)}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default AttributeCardContainer;\n","import { useFieldArray, useForm } from \"react-hook-form\";\nimport {\n  chakra,\n  Flex,\n  FormErrorMessage,\n  FormControl,\n  Input,\n  Textarea,\n  Button,\n  Image as ImageChakra,\n  Grid,\n  Tooltip,\n  useDisclosure,\n  Box,\n  Heading,\n  Text,\n} from \"@chakra-ui/react\";\nimport { saveAs } from \"file-saver\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Axios from \"axios\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport FormLabel from \"../../components/forms/FormLabel\";\nimport FormDescription from \"../../components/forms/FormDescription\";\nimport { PrimaryButton } from \"../../components/buttons\";\nimport AddCollectionButton from \"../../components/buttons/AddCollectionButton\";\nimport UploadAttributeModal from \"../../components/modals/UploadAttributeModal\";\nimport {\n  AttributeType,\n  CollectionFormDataType,\n  DropFileType,\n} from \"../../types\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  APP_BORDER_COLOR_DARK,\n  APP_DESCRIPTION_COLOR,\n  APP_DIVIDER_COLOR,\n  APP_INFO_BACKGROUND_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_SECONDARY_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n  APP_WARNING_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport { FileWithPath, useDropzone } from \"react-dropzone\";\nimport FileErrorModal from \"../../components/modals/FileErrorModal\";\nimport AttributeCardContainer from \"../../containers/AttributeCardContainer\";\n\nfunction CreateCollection() {\n  const navigate = useNavigate();\n  let location = useLocation();\n  const props: CollectionFormDataType = location.state;\n  const errorAttributesRef = useRef<null | HTMLDivElement>(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [uploadedAttributes, setUploadedAttributes] = useState(\n    [] as AttributeType[]\n  );\n  const [showFileReject, setShowFileReject] = useState(false);\n\n  const [attributesError, setAttributesError] = useState(\"\");\n  const [imageWidth, setImageWidth] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [preview, setPreview] = useState(\"\");\n  const [isPreviewLoading, setIsPreviewLoading] = useState(false);\n  const [blobPreview, setBlobPreview] = useState({} as Blob);\n  const [selectedAttributes, setSelectedAttributes] = useState(\n    {} as AttributeType\n  );\n  const { uiText } = useUiText();\n  const {\n    handleSubmit,\n    control,\n    register,\n    formState: { errors, isSubmitting },\n  } = useForm<CollectionFormDataType>();\n\n  const { fields, append, remove, prepend } = useFieldArray({\n    control,\n    name: \"metadata\",\n  });\n\n  useEffect(() => {\n    if (props) {\n      setUploadedAttributes(props.attributes!);\n    }\n  }, [props, uploadedAttributes]);\n\n  useEffect(() => {\n    if (props) {\n      props.metadata!.map((data) =>\n        prepend({ key: data.key, value: data.value }, { shouldFocus: false })\n      );\n    } else {\n      prepend({ key: \"\", value: \"\" }, { shouldFocus: false });\n    }\n  }, [props, prepend]);\n\n  const scrollTo = (ref: React.MutableRefObject<HTMLDivElement | null>) => {\n    if (!ref.current) return;\n    ref.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: FileWithPath[]) => {\n      const fileChecker = acceptedFiles.filter(\n        (file) => file.path!.split(\"/\").length !== 1\n      );\n      console.log(\"filechecker\", fileChecker);\n      const renamed = fileChecker.map((file) => {\n        const pathLength = file.path!.split(\"/\").length;\n        const hashtag = file.name.search(\"#\") !== -1;\n        const fileName = file.name.split(hashtag ? \"#\" : \".\")[0];\n        const rarity = hashtag ? file.name.split(\"#\")[1].split(\".\")[0] : \"1\";\n        const newFile = new File([file], `${fileName}#${rarity}.png`, {\n          type: file.type,\n        });\n        return Object.assign(newFile, {\n          folderName: file.path!.split(\"/\")[pathLength > 3 ? 2 : 1],\n          path: file.path,\n          rarityWeight: rarity,\n        });\n      }) as DropFileType[];\n\n      const grouppingObjects: { [name: string]: DropFileType[] } = groupBy(\n        renamed,\n        \"folderName\"\n      );\n      const newAttributes = [...uploadedAttributes];\n      Object.keys(grouppingObjects).map((name) =>\n        newAttributes.push({ name, files: grouppingObjects[name] })\n      );\n      setUploadedAttributes(newAttributes);\n    },\n    [uploadedAttributes]\n  );\n\n  function groupBy(arr: DropFileType[], property: string) {\n    return arr.reduce(function (\n      memo: { [name: string]: DropFileType[] },\n      x: { [name: string]: any }\n    ) {\n      if (!memo[x[property]]) {\n        memo[x[property]] = [];\n      }\n      memo[x[property]].push(x as DropFileType);\n      return memo;\n    },\n    {});\n  }\n\n  const { getRootProps, getInputProps, fileRejections } = useDropzone({\n    onDrop,\n    noClick: true,\n    accept: \"image/png\",\n    maxSize: 10485760,\n  });\n\n  useEffect(() => {\n    if (fileRejections.length) {\n      setShowFileReject(true);\n    }\n  }, [fileRejections]);\n\n  useEffect(() => {\n    if (uploadedAttributes.length) {\n      const image = new Image();\n      let url: string;\n      image.onload = function () {\n        setImageHeight(image.height);\n        setImageWidth(image.width);\n      };\n      url = URL.createObjectURL(uploadedAttributes[0].files[0]);\n      image.src = url;\n    }\n  }, [uploadedAttributes]);\n\n  function onSubmit(values: CollectionFormDataType) {\n    if (uploadedAttributes.length < 2) {\n      setAttributesError(\"Minimum of two attributes needed\");\n      scrollTo(errorAttributesRef);\n    } else {\n      setAttributesError(\"\");\n      navigate(\"/review-collection\", {\n        state: { ...values, attributes: uploadedAttributes },\n        replace: true,\n      });\n    }\n  }\n\n  const countDecimals = function (value: string) {\n    let text = value.toString();\n    // verify if number 0.000005 is represented as \"5e-6\"\n    if (text.indexOf(\"e-\") > -1) {\n      let [trail] = text.split(\"e-\");\n      let deg = parseInt(trail, 10);\n      return deg;\n    }\n    // count decimals for number in representation like \"0.123456\"\n    if (Math.floor(Number(value)) !== Number(value)) {\n      return value.toString().split(\".\")[1]?.length || 0;\n    }\n    return 0;\n  };\n\n  const onOpenModal = (index: number) => {\n    setSelectedAttributes({ ...uploadedAttributes[index], index });\n    onOpen();\n  };\n\n  const onCloseModal = (\n    attributeName: string,\n    attributes: DropFileType[],\n    index?: number\n  ) => {\n    if (!!attributeName && attributes.length) {\n      if (\n        // Check if update\n        index !== undefined\n      ) {\n        const array = uploadedAttributes;\n        array[index!].name = attributeName;\n        array[index!].files = attributes;\n        setUploadedAttributes(array);\n      } else {\n        const data = { name: attributeName, files: attributes };\n        const newAttributes = uploadedAttributes;\n        newAttributes.push(data);\n        setUploadedAttributes(newAttributes);\n      }\n    }\n    setSelectedAttributes({} as AttributeType);\n    onClose();\n  };\n\n  const onDeleteAttribute = (index?: number) => {\n    if (index !== undefined) {\n      const attributes = uploadedAttributes;\n      attributes.splice(index, 1);\n      setUploadedAttributes(attributes);\n      setSelectedAttributes({} as AttributeType);\n      onClose();\n    } else {\n      setSelectedAttributes({} as AttributeType);\n      onClose();\n    }\n  };\n\n  const generatePreview = async () => {\n    setIsPreviewLoading(true);\n    const https = require(\"https\");\n    const httpsAgent = new https.Agent({ rejectUnauthorized: false });\n    const previewID = new Date().getTime() + Math.random();\n    // Form Data\n    let formData = new FormData();\n    formData.append(\"id\", String(previewID));\n    formData.append(\"isPreview\", \"true\");\n    formData.append(\"imageHeight\", String(imageHeight));\n    formData.append(\"imageWidth\", String(imageWidth));\n    uploadedAttributes.map((attribute) => {\n      const filename = attribute.name;\n      const files = attribute.files;\n      return files.map((file) => {\n        return formData.append(`${filename}`, file);\n      });\n    });\n\n    await Axios({\n      method: \"POST\",\n      httpsAgent,\n      url: `https://${process.env.REACT_APP_SERVER_URL}.com/make`,\n      data: formData,\n      responseType: \"blob\",\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((res) => {\n        setPreview(URL.createObjectURL(res.data));\n        setBlobPreview(res.data);\n        setIsPreviewLoading(false);\n        return res;\n      })\n      .catch((err) => {\n        setIsPreviewLoading(false);\n        if (!err.response) {\n          // network error\n          return Promise.reject(\"Error: Network Error\");\n        } else {\n          const newBlob = new Blob([err.response.data], { type: \"text/html\" });\n          newBlob.text().then((res) => {\n            if (res.search(\"Error: Input stream problem, please retry\") !== -1)\n              return generatePreview();\n          });\n          return Promise.reject(err);\n        }\n      });\n  };\n\n  const saveImage = () => {\n    const blob = new Blob([blobPreview], { type: \"image/png\" });\n    saveAs(blob, \"preview.png\");\n  };\n\n  return (\n    <>\n      <Flex flexDir=\"column\" alignItems=\"flex-start\" px={181} pb={181} w=\"100%\">\n        <UploadAttributeModal\n          name={selectedAttributes.name}\n          attributes={selectedAttributes.files}\n          index={selectedAttributes.index}\n          isOpen={isOpen}\n          onClose={onCloseModal}\n          onOpen={onOpen}\n          onDeleteAttribute={onDeleteAttribute}\n        />\n        {showFileReject && (\n          <FileErrorModal\n            onClose={() => setShowFileReject(false)}\n            filenames={fileRejections.map((data) => data.file.name)}\n          />\n        )}\n        {/* Create Collection Title */}\n        <Heading\n          textAlign=\"left\"\n          maxW={1000}\n          fontWeight={\"medium\"}\n          fontSize={{ base: \"24px\", md: \"44px\", lg: \"44px\" }}\n          my={\"50px\"}\n        >\n          {uiText.createCollectionTitle}\n        </Heading>\n        {/* Form Start */}\n        <form style={{ width: \"100%\" }} onSubmit={handleSubmit(onSubmit)}>\n          {/* Collection Name */}\n          <FormControl isInvalid={!!errors.name}>\n            <FormLabel name=\"name\" text={uiText.createCollectionNameLabel} />\n            <FormDescription text={uiText.createCollectionNameDescription} />\n            <Input\n              id=\"name\"\n              size={\"lg\"}\n              placeholder={uiText.createCollectionPlaceholder30Characters}\n              {...register(\"name\", {\n                value: props ? props.name : \"\",\n                shouldUnregister: false,\n                required: uiText.createCollectionRequired,\n                maxLength: {\n                  value: 30,\n                  message: uiText.createCollectionMax30Characters,\n                },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.name && errors.name.message}\n            </FormErrorMessage>\n          </FormControl>\n\n          {/* Collection Symbol */}\n          <FormControl mt=\"40px\" isInvalid={!!errors.symbol}>\n            <FormLabel\n              name=\"symbol\"\n              text={uiText.createCollectionSymbolLabel}\n            />\n            <FormDescription text={uiText.createCollectionSymbolDescription} />\n            <Input\n              id=\"symbol\"\n              size={\"lg\"}\n              placeholder={uiText.createCollectionPlaceholderMax10Characters}\n              {...register(\"symbol\", {\n                value: props ? props.symbol : \"\",\n                required: uiText.createCollectionRequired,\n                maxLength: {\n                  value: 10,\n                  message: uiText.createCollectionMax10Characters,\n                },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.symbol && errors.symbol.message}\n            </FormErrorMessage>\n          </FormControl>\n\n          {/* Collection Description */}\n          <FormControl\n            ref={errorAttributesRef}\n            mt=\"40px\"\n            isInvalid={!!errors.description}\n          >\n            <FormLabel\n              name=\"description\"\n              text={uiText.createCollectionDescriptionLabel}\n            />\n            <FormDescription\n              text={uiText.createCollectionDescriptionDescription}\n            />\n            <Textarea\n              id=\"description\"\n              size={\"lg\"}\n              h=\"118px\"\n              resize={\"none\"}\n              maxLength={150}\n              textAlign=\"start\"\n              placeholder={uiText.createCollectionPlaceholderMax150Characters}\n              {...register(\"description\", {\n                value: props ? props.description : \"\",\n                maxLength: {\n                  value: 150,\n                  message: uiText.createCollectionMax150Characters,\n                },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.description && errors.description.message}\n            </FormErrorMessage>\n          </FormControl>\n\n          {/* Upload Artwork */}\n          <FormControl\n            mt=\"40px\"\n            isInvalid={!!errors.attributes}\n            style={{ outline: \"none\" }}\n            {...getRootProps()}\n          >\n            <input {...getInputProps()} />\n            <Flex flexDirection={\"row\"}>\n              <FormLabel\n                name=\"upload\"\n                text={uiText.createCollectionGenerateLabel}\n              />\n              <Tooltip\n                placement=\"top\"\n                hasArrow\n                bg={APP_INFO_BACKGROUND_COLOR}\n                borderWidth={\"0.5px\"}\n                borderRadius={\"4px\"}\n                fontSize={\"10px\"}\n                p=\"20px\"\n                w=\"180px\"\n                label={uiText.createCollectionGenerateTooltip}\n              >\n                <ImageChakra\n                  src=\"/tooltip.png\"\n                  w=\"20px\"\n                  h=\"20px\"\n                  marginLeft={\"20px\"}\n                  objectFit={\"contain\"}\n                />\n              </Tooltip>\n            </Flex>\n            <FormDescription\n              width=\"650px\"\n              fontSize={\"16px\"}\n              text={uiText.createCollectionGenerateDescription}\n            />\n\n            <chakra.h2\n              textAlign={\"left\"}\n              color={APP_WARNING_COLOR}\n              fontSize={\"14px\"}\n            >\n              {attributesError}\n            </chakra.h2>\n\n            {/* Preview Attribute */}\n            <Grid marginTop=\"46px\" templateColumns=\"repeat(5, 1fr)\" gap={5}>\n              <DndProvider backend={HTML5Backend}>\n                <AttributeCardContainer\n                  attributes={uploadedAttributes}\n                  onOpenModal={onOpenModal}\n                  setAttributes={setUploadedAttributes}\n                />\n              </DndProvider>\n              {uploadedAttributes.length < 20 && (\n                <Box outline={\"none\"}>\n                  <AddCollectionButton\n                    onClick={onOpen}\n                    label={uiText.createCollectionGenerateButtonLabel}\n                    labelDescription={\n                      uiText.createCollectionGenerateButtonDescription\n                    }\n                  />\n                </Box>\n              )}\n            </Grid>\n            <Flex\n              flexDir={\"row\"}\n              width={\"100%\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              fontSize={\"12px\"}\n              color={\n                uploadedAttributes.length < 2\n                  ? APP_TEXT_INACTIVE_COLOR\n                  : HOMEPAGE_BACKGROUND_COLOR\n              }\n              mt={\"50px\"}\n              letterSpacing={\"2.4px\"}\n            >\n              <Box\n                borderColor={APP_SECONDARY_COLOR}\n                borderWidth={\"0.5px\"}\n                width=\"100%\"\n              />\n              <chakra.h1 ml={\"40px\"}>\n                {uiText.createCollectionPreviewTip1}\n              </chakra.h1>\n              <chakra.h1 width=\"600px\" fontSize={\"16px\"} mx={\"60px\"}>\n                {uiText.createCollectionPreviewTip2}\n              </chakra.h1>\n              <chakra.h1 mr={\"40px\"}>\n                {uiText.createCollectionPreviewTip3}\n              </chakra.h1>\n              <Box\n                borderColor={APP_SECONDARY_COLOR}\n                borderWidth={\"0.5px\"}\n                width=\"100%\"\n              />\n            </Flex>\n          </FormControl>\n\n          {/* Generate Preview */}\n          <Flex\n            flexDir={\"row\"}\n            my={\"60px\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n          >\n            <Flex flexDir={\"column\"} flex={1}>\n              <Flex\n                flexDir={\"row\"}\n                justifyContent={\"center\"}\n                alignItems={\"center\"}\n                mb={\"40px\"}\n              >\n                <Button\n                  disabled={\n                    (props && props.attributes?.length === 0) ||\n                    uploadedAttributes.length < 2 ||\n                    isPreviewLoading\n                  }\n                  onClick={generatePreview}\n                  isLoading={isPreviewLoading}\n                  color={HOMEPAGE_BACKGROUND_COLOR}\n                  bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                  borderColor={HOMEPAGE_BACKGROUND_COLOR}\n                  borderRadius={\"27px\"}\n                  borderWidth={\"1px\"}\n                  fontSize={\"16px\"}\n                  height={\"48px\"}\n                  width=\"100%\"\n                >\n                  <Heading fontSize={\"16px\"} fontWeight={\"semibold\"}>\n                    Generate Preview\n                  </Heading>\n                </Button>\n                <Button\n                  disabled={\n                    (props && props.attributes?.length === 0) ||\n                    uploadedAttributes.length < 2 ||\n                    isPreviewLoading\n                  }\n                  marginLeft={\"22px\"}\n                  bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                  onClick={generatePreview}\n                >\n                  <ImageChakra\n                    src=\"/reload.png\"\n                    w=\"22px\"\n                    h=\"22px\"\n                    objectFit={\"contain\"}\n                  />\n                </Button>\n              </Flex>\n              <Flex flexDir={\"row\"} justifyContent={\"start\"} ml=\"34px\">\n                <Button\n                  onClick={saveImage}\n                  disabled={!preview}\n                  fontSize={\"12px\"}\n                  backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n                >\n                  <ImageChakra\n                    src=\"/download.png\"\n                    w=\"22px\"\n                    h=\"22px\"\n                    marginRight={\"20px\"}\n                    objectFit={\"contain\"}\n                  />\n                  {uiText.createCollectionDownloadLabel}\n                </Button>\n              </Flex>\n            </Flex>\n            <Flex ml=\"50px\" flex={2}>\n              {preview && (\n                <ImageChakra\n                  loading={\"eager\"}\n                  src={preview}\n                  height={\"280px\"}\n                  objectFit={\"contain\"}\n                />\n              )}\n              {!preview && (\n                <Box\n                  height={\"280px\"}\n                  display={\"flex\"}\n                  bgColor={APP_DIVIDER_COLOR}\n                  width={\"100%\"}\n                  justifyContent={\"center\"}\n                  alignItems={\"center\"}\n                >\n                  <ImageChakra src=\"/image.png\" />\n                </Box>\n              )}\n            </Flex>\n          </Flex>\n\n          {/* NFT Cost */}\n          <FormControl mt=\"40px\" isInvalid={!!errors.cost}>\n            <FormLabel name=\"cost\" text={uiText.createCollectionCostLabel} />\n            <FormDescription text={uiText.createCollectionCostDescription} />\n            <Input\n              id=\"cost\"\n              size={\"lg\"}\n              textAlign=\"start\"\n              onWheel={(e) => e.currentTarget.blur()}\n              step={\"any\"}\n              onKeyPress={(event) => {\n                if (!/^\\d*\\.?\\d*$/.test(event.key)) {\n                  event.preventDefault();\n                }\n              }}\n              placeholder={uiText.createCollectionCostPlaceholder}\n              {...register(\"cost\", {\n                value: props ? props.cost : \"\",\n                validate: (value) => {\n                  return (\n                    countDecimals(value) <= 18 ||\n                    uiText.createCollectionDecimalsError\n                  );\n                },\n                required: uiText.createCollectionRequired,\n                maxLength: {\n                  value: 30,\n                  message: uiText.createCollectionMax30Characters,\n                },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.cost && errors.cost.message}\n            </FormErrorMessage>\n          </FormControl>\n\n          {/* Total Item */}\n          <FormControl mt=\"40px\" isInvalid={!!errors.total}>\n            <FormLabel name=\"total\" text={uiText.createCollectionTotalLabel} />\n            <FormDescription text={uiText.createCollectionTotalDescription} />\n            <Input\n              id=\"total\"\n              size={\"lg\"}\n              type=\"number\"\n              onWheel={(e) => e.currentTarget.blur()}\n              placeholder={uiText.createCollectionMax10000}\n              {...register(\"total\", {\n                value: props ? props.total : \"\",\n                required: uiText.createCollectionRequired,\n                max: {\n                  value: 10000,\n                  message: uiText.createCollectionMetadataError,\n                },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.total && errors.total.message}\n            </FormErrorMessage>\n          </FormControl>\n\n          <Heading\n            fontWeight={\"semibold\"}\n            textAlign=\"left\"\n            fontSize={\"20px\"}\n            mt={\"120px\"}\n          >\n            {uiText.createCollectionMetadataLabel}\n          </Heading>\n          <Text\n            mt=\"9px\"\n            fontWeight={\"normal\"}\n            textAlign=\"left\"\n            fontSize={\"16px\"}\n            color={APP_DESCRIPTION_COLOR}\n          >\n            {uiText.createCollectionMetadataDescription1}\n            <br /> {uiText.createCollectionMetadataDescription2}\n          </Text>\n\n          <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n            <Box>\n              <FormLabel mt={\"30px\"} name=\"key\" text=\"Key\" />\n              <FormDescription text={uiText.createCollectionMetadataExample} />\n            </Box>\n            <Box>\n              <FormLabel mt={\"30px\"} name=\"value\" text=\"Value\" />\n              <FormDescription text={uiText.createCollectionValueExample} />\n            </Box>\n          </Grid>\n          {/* Key */}\n          {fields.map((item, index) => (\n            <Grid key={item.id} templateColumns=\"repeat(2, 1fr)\" gap={6}>\n              <FormControl\n                mt=\"12px\"\n                display={\"flex\"}\n                flexDir={\"column\"}\n                alignItems={\"flex-start\"}\n              >\n                <Input\n                  id=\"key\"\n                  size={\"lg\"}\n                  placeholder={uiText.createCollectionPlaceholder30Characters}\n                  {...register(`metadata.${index}.key`, {\n                    maxLength: {\n                      value: 30,\n                      message: uiText.createCollectionMax30Characters,\n                    },\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.metadata &&\n                    errors.metadata[index].key &&\n                    errors.metadata[index].key!.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              {/* Value */}\n              <FormControl\n                mt=\"12px\"\n                display={\"flex\"}\n                flexDir={\"column\"}\n                alignItems={\"flex-start\"}\n              >\n                <Flex direction={\"row\"} w=\"100%\">\n                  <Input\n                    id=\"value\"\n                    size={\"lg\"}\n                    placeholder={uiText.createCollectionPlaceholder30Characters}\n                    {...register(`metadata.${index}.value`, {\n                      maxLength: {\n                        value: 30,\n                        message: uiText.createCollectionMax30Characters,\n                      },\n                    })}\n                  />\n                  {fields.length > 1 && (\n                    <Button\n                      onClick={() => remove(index)}\n                      backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n                      ml=\"8px\"\n                    >\n                      <ImageChakra\n                        src=\"/delete.png\"\n                        maxH={[400, 400, 400, 550, 700, 700]}\n                      />\n                    </Button>\n                  )}\n                </Flex>\n                <FormErrorMessage>\n                  {errors.metadata &&\n                    errors.metadata[index].value &&\n                    errors.metadata[index].value!.message}\n                </FormErrorMessage>\n              </FormControl>\n            </Grid>\n          ))}\n\n          <Box display={\"flex\"} alignItems={\"flex-start\"} mt=\"24px\">\n            <Button\n              onClick={() => append({ key: \"\", value: \"\" })}\n              borderRadius={\"15px\"}\n              w=\"105px\"\n              h=\"29px\"\n              backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n              borderColor={APP_BORDER_COLOR_DARK}\n              borderWidth={\"0.5px\"}\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n            >\n              <span\n                style={{\n                  fontSize: \"25px\",\n                  fontWeight: \"normal\",\n                  marginTop: \"-3px\",\n                }}\n              >\n                +\n              </span>\n              <Heading fontSize={\"13px\"} ml=\"8px\" fontWeight={\"semibold\"}>\n                {uiText.createCollectionAddMetadata}\n              </Heading>\n            </Button>\n          </Box>\n\n          {/* Submit Button */}\n          <PrimaryButton\n            disabled={isPreviewLoading}\n            mt={\"100px\"}\n            w={537}\n            isLoading={isSubmitting}\n            type=\"submit\"\n            color={HOMEPAGE_BACKGROUND_COLOR}\n            text={uiText.createCollectionSubmitButton}\n          />\n        </form>\n        {/* Form End */}\n      </Flex>\n    </>\n  );\n}\n\nexport default CreateCollection;\n","import { Flex, Image } from \"@chakra-ui/react\";\nimport { SectionHeading, SectionText } from \"../../components/text\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport { FaCheck } from \"react-icons/fa\";\n\nimport { PrimaryButton } from \"../../components/buttons\";\nimport { DescriptionPageLayout } from \"../../layout/DescriptionPageLayout/DescriptionPageLayout\";\nimport {\n  DESCRIPTION_COLOR,\n  WALLET_MODAL_BODY_BG_COLOR,\n} from \"../../theme/colors\";\nimport { useNoReceipt } from \"../Modals/NoReceiptModal/useNoReceipt\";\n\nexport const KitchenPage = () => {\n  const { uiText } = useUiText();\n  const { handleCreateNewCollection } = useNoReceipt();\n\n  const renderIntroSection = () => {\n    return (\n      <Flex>\n        <Flex\n          flexDir=\"column\"\n          ml={[\"10px\", \"10px\", \"10px\", \"20px\", \"94px\", \"214px\"]}\n          mr={[\"10px\", \"10px\", \"10px\", \"20px\", \"160px\", \"250px\"]}\n        >\n          <SectionHeading\n            letterSpacing=\"-1.44px\"\n            text={uiText.introHeaderKitchen1}\n            fontSize={\"72px\"}\n            mt={[\"30px\", \"30px\", \"30px\", \"136px\", \"136px\"]}\n            fontWeight=\"bold\"\n          />\n          <SectionText\n            text={uiText.introHeaderKitchen2}\n            fontSize={\"24px\"}\n            maxWidth={\"500px\"}\n            color={DESCRIPTION_COLOR}\n            mt={\"24px\"}\n            mb={\"62px\"}\n          />\n          <Flex>\n            <PrimaryButton\n              text={uiText.startNewCollection}\n              onClick={handleCreateNewCollection}\n              w=\"246px\"\n              h=\"44px\"\n              py={0}\n              fontSize=\"16px\"\n              display={\"flex\"}\n              fontWeight=\"semibold\"\n              alignItems={\"center\"}\n            />\n          </Flex>\n        </Flex>\n        <Image\n          src=\"/hero_kitchen.png\"\n          maxH={[400, 400, 400, 819, 819, 819]}\n          objectFit=\"contain\"\n        />\n      </Flex>\n    );\n  };\n\n  const renderPrepareSection = () => {\n    return (\n      <Flex\n        flexWrap={\"wrap-reverse\"}\n        mt={{ base: \"0px\", md: \"0px\", lg: \"-150px\" }}\n      >\n        <Image\n          src=\"/prepare_files_pic.svg\"\n          h=\"438px\"\n          w=\"467px\"\n          objectFit=\"contain\"\n          marginLeft=\"-26px\"\n          marginRight=\"166px\"\n        />\n        <Flex flexDir=\"column\" alignSelf=\"center\">\n          <SectionHeading\n            text={uiText.prepareHeading}\n            fontSize={{ base: \"36px\", md: \"36px\", lg: \"36px\" }}\n          />\n          <SectionText\n            text={uiText.prepareDescription}\n            fontSize={{ base: \"18px\", md: \"18px\", lg: \"18px\" }}\n            maxW=\"410px\"\n            mt={\"28px\"}\n          />\n        </Flex>\n      </Flex>\n    );\n  };\n\n  const renderCreateSection = () => {\n    return (\n      <>\n        <Flex flexDir=\"column\" alignSelf=\"center\" mt=\"-50px\">\n          <SectionHeading\n            text={uiText.createHeading}\n            fontSize={{ base: \"36px\", md: \"36px\", lg: \"36px\" }}\n          />\n          <SectionText\n            text={uiText.createDescription}\n            fontSize={{ base: \"18px\", md: \"18px\", lg: \"18px\" }}\n            maxW=\"346px\"\n            mt={\"28px\"}\n          />\n        </Flex>\n        <Image\n          src=\"/create_kitchen.png\"\n          w=\"415px\"\n          h=\"415px\"\n          objectFit=\"contain\"\n          mt=\"-50px\"\n        />\n      </>\n    );\n  };\n\n  const renderAddSection = () => {\n    return (\n      <>\n        <Image\n          src=\"/add_kitchen.png\"\n          w=\"417px\"\n          h=\"359px\"\n          objectFit=\"contain\"\n          marginRight=\"190px\"\n        />\n        <Flex flexDir=\"column\" alignSelf=\"center\">\n          <SectionHeading\n            text={uiText.addHeading}\n            fontSize={{ base: \"36px\", md: \"36px\", lg: \"36px\" }}\n            maxW=\"327px\"\n          />\n          <SectionText text={uiText.addDescription} maxW=\"317px\" mt={\"38px\"} />\n        </Flex>\n      </>\n    );\n  };\n\n  const renderPreviewSection = () => {\n    return (\n      <>\n        <Flex flexDir=\"column\" alignSelf=\"center\" mt=\"100px\">\n          <SectionHeading\n            text={uiText.previewHeading}\n            fontSize={{ base: \"36px\", md: \"36px\", lg: \"36px\" }}\n            maxW=\"274px\"\n          />\n          <SectionText\n            text={uiText.previewDescription}\n            fontSize={{ base: \"18px\", md: \"18px\", lg: \"18px\" }}\n            maxW=\"394px\"\n            mt={\"38px\"}\n          />\n        </Flex>\n        <Image\n          src=\"/preview_kitchen.png\"\n          maxH=\"348px\"\n          objectFit=\"contain\"\n          marginLeft=\"132px\"\n          mt=\"100px\"\n        />\n      </>\n    );\n  };\n\n  const customizeList = [\n    uiText.customizeList1,\n    uiText.customizeList2,\n    uiText.customizeList3,\n  ];\n\n  const renderCustomizeSection = () => {\n    return (\n      <>\n        <Flex flexDir=\"column\" marginRight=\"195px\" mt=\"100px\">\n          {customizeList.map((list, i) => {\n            return (\n              <Flex\n                key={`customize-list-${i}`}\n                borderRadius=\"4px\"\n                boxShadow=\"base\"\n                mb={3}\n                alignItems=\"center\"\n                padding={4}\n              >\n                <FaCheck color=\"#95FFCE\" />\n                <SectionText\n                  text={list}\n                  mb={0}\n                  fontSize=\"14px\"\n                  ml={8}\n                  mr=\"63px\"\n                />\n              </Flex>\n            );\n          })}\n        </Flex>\n        <Flex flexDir=\"column\" alignSelf=\"center\">\n          <SectionHeading\n            text={uiText.customizeHeading}\n            fontSize={{ base: \"36px\", md: \"36px\", lg: \"36px\" }}\n            maxW=\"318px\"\n          />\n          <SectionText\n            text={uiText.customizeDescription}\n            fontSize={{ base: \"18px\", md: \"18px\", lg: \"18px\" }}\n            maxW=\"433px\"\n            mt=\"38px\"\n          />\n        </Flex>\n      </>\n    );\n  };\n\n  const renderInfoSection = () => {\n    return (\n      <>\n        <Flex flexDir=\"column\" mt=\"100px\">\n          <SectionHeading\n            text={uiText.infoHeading}\n            mb={9}\n            fontSize={{ base: \"36px\", md: \"36px\", lg: \"36px\" }}\n            maxW=\"271px\"\n          />\n          <SectionText\n            text={uiText.infoDescription1}\n            fontSize={{ base: \"18px\", md: \"18px\", lg: \"18px\" }}\n            maxW=\"391px\"\n            mb={4}\n          />\n        </Flex>\n        <Image\n          src=\"/info_kitchen.png\"\n          w=\"462px\"\n          h=\"192px\"\n          objectFit=\"contain\"\n          marginLeft=\"156px\"\n          mt=\"100px\"\n        />\n      </>\n    );\n  };\n\n  const renderBottomButtonSection = () => {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" mt=\"50px\" mb=\"200px\">\n        <PrimaryButton\n          text={uiText.startNewCollection}\n          p=\"28px 180px 28px 180px\"\n          onClick={handleCreateNewCollection}\n          fontSize={\"20px\"}\n          fontWeight={\"semibold\"}\n          py={0}\n          w=\"537px\"\n          h=\"60px\"\n          alignItems={\"center\"}\n          display={\"flex\"}\n        />\n      </Flex>\n    );\n  };\n\n  return (\n    <DescriptionPageLayout\n      introSection={renderIntroSection()}\n      sections={[\n        renderPrepareSection(),\n        renderCreateSection(),\n        renderAddSection(),\n        renderPreviewSection(),\n        renderCustomizeSection(),\n        renderInfoSection(),\n        renderBottomButtonSection(),\n      ]}\n      bgColor={WALLET_MODAL_BODY_BG_COLOR}\n    />\n  );\n};\n","import { Box, Button, chakra, Flex, Image, Spinner } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { ModalContext } from \"../../system/context/ModalContext\";\nimport { usePrevious } from \"../../system/hooks/usePrevious\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_HEADER_TEXT_COLOR,\n  APP_SECONDARY_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\nimport { SuccessCollectionProps } from \"./types\";\n\nfunction SuccessCollection() {\n  let navigate = useNavigate();\n  let location = useLocation();\n  const props: SuccessCollectionProps = location.state;\n  const { uiText } = useUiText();\n  const { walletModal } = React.useContext(ModalContext);\n  const [pageLoading, setPageLoading] = useState(true);\n  const prevId = usePrevious(props?.id);\n\n  useEffect(() => {\n    if (props) {\n      setPageLoading(false);\n      if (props.id !== prevId) {\n        walletModal.onOpen(1, props.id);\n      }\n    } else {\n      navigate(\"/home\", { replace: true });\n    }\n  }, [props, navigate, walletModal, prevId]);\n\n  return pageLoading ? (\n    <Spinner color={APP_SECONDARY_COLOR} />\n  ) : (\n    <Box\n      display={\"flex\"}\n      justifyContent={\"flex-start\"}\n      px={\"150px\"}\n      w=\"100%\"\n      height=\"89vh\"\n      alignSelf={\"stretch\"}\n    >\n      <Flex justifyContent={\"center\"} flexDir={\"column\"}>\n        <Flex flexDir={\"row\"} mb=\"55px\">\n          <Image\n            src=\"./celebration.png\"\n            width=\"240px\"\n            height=\"240px\"\n            objectFit={\"contain\"}\n          />\n          <Box>\n            <chakra.h1\n              fontSize={\"36px\"}\n              textAlign={\"left\"}\n              fontWeight={\"semibold\"}\n              color={HOMEPAGE_BACKGROUND_COLOR}\n            >\n              {uiText.successCollectionTitle}\n            </chakra.h1>\n            <chakra.h1\n              width=\"342px\"\n              fontSize={\"36px\"}\n              textAlign={\"left\"}\n              fontWeight={\"medium\"}\n              color={HOMEPAGE_BACKGROUND_COLOR}\n            >\n              {uiText.successCollectionSubTitle1} <br />\n              {uiText.successCollectionSubTitle2}\n            </chakra.h1>\n          </Box>\n        </Flex>\n        <chakra.h1 fontSize={\"16px\"} textAlign={\"left\"}>\n          {uiText.successCollectionSubTitle3}\n        </chakra.h1>\n        <Flex flexDir={\"row\"} mt=\"66px\">\n          <Button\n            width={\"182px\"}\n            mr=\"12px\"\n            fontSize={\"12px\"}\n            onClick={() => navigate(\"/kitchen\", { replace: true })}\n            bgColor={HOMEPAGE_BACKGROUND_COLOR}\n            color={APP_HEADER_TEXT_COLOR}\n          >\n            {uiText.successCollectionButton1}\n          </Button>\n          <Button\n            bgColor={APP_HEADER_TEXT_COLOR}\n            width={\"182px\"}\n            fontSize={\"12px\"}\n            borderWidth={\"1px\"}\n            onClick={() => navigate(\"/create-collection\", { replace: true })}\n            borderColor={HOMEPAGE_BACKGROUND_COLOR}\n          >\n            {uiText.successCollectionButton2}\n          </Button>\n        </Flex>\n      </Flex>\n      <Image\n        position={\"absolute\"}\n        right={700}\n        bottom={150}\n        src=\"./arrow-point-right.png\"\n        width=\"117px\"\n        height=\"62px\"\n        objectFit={\"contain\"}\n      />\n    </Box>\n  );\n}\n\nexport default SuccessCollection;\n","import React from \"react\";\n\nexport function usePrevious<T>(value: T) {\n  const ref = React.useRef<T>();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import { Modal, ModalOverlay, ModalContent } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { LandingPage } from \"../../pages/LandingPage/LandingPage\";\nimport useDeviceDetect from \"../../system/hooks/useDeviceDetect\";\n\nconst MobileRestriction: React.FC = ({ children }) => {\n  const {isMobile} = useDeviceDetect();\n\n  const renderMobileBlocker = () => {\n    return (\n      <Modal isOpen={true} onClose={() => null} size=\"full\">\n        <ModalOverlay />\n        <ModalContent>\n          <LandingPage />\n        </ModalContent>\n      </Modal>\n    );\n  };\n\n  return (\n    <>\n      {children}\n      {isMobile && renderMobileBlocker()}\n    </>\n  );\n};\n\nexport default MobileRestriction;\n","import { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { ContractContext } from \"../../system/context/ContractContext\";\n\nexport const ReceiptRestriction: React.FC = ({ children }) => {\n  const { hasReceipt } = useContext(ContractContext);\n  if (!hasReceipt) {\n    return <Navigate to=\"/home\" />;\n  }\n  return <>{children}</>;\n};\n","import React, { ReactNode, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst ScrollToTop: React.FC<Props> = ({ children }) => {\n  const location = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return <>{children}</>;\n};\n\nexport default ScrollToTop;\n","import { Box, Button, Image, Text } from \"@chakra-ui/react\";\nimport useDeviceDetect from \"../../system/hooks/useDeviceDetect\";\nimport {\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  COLLECTOR_BORDER_COLOR,\n} from \"../../theme/colors\";\nimport { StatusCardProps } from \"./types\";\n\nfunction CollectorSuccessCard({ onClose }: StatusCardProps) {\n  const { isMobile } = useDeviceDetect();\n  return (\n    <Box\n      borderRadius={isMobile ? undefined : \"12px\"}\n      borderTopRadius={isMobile ? \"12px\" : undefined}\n      borderWidth={\"1px\"}\n      borderColor={\"transparent\"}\n      w=\"100%\"\n      h=\"100%\"\n      bgColor={APP_PRIMARY_CONTRAST_COLOR}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems={\"center\"}\n      flexDir=\"column\"\n      position=\"relative\"\n    >\n      <Button\n        backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n        position={\"absolute\"}\n        hidden={isMobile}\n        top={1}\n        right={1}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onClose}\n      >\n        <Image src=\"/Close.png\" w=\"11px\" h=\"11px\" objectFit={\"contain\"} />\n      </Button>\n      <Button\n        backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n        position={\"absolute\"}\n        hidden={!isMobile}\n        borderRadius=\"12px\"\n        top={0}\n        w=\"full\"\n        _hover={{ backgroundColor: \"transparent\" }}\n      >\n        <Image src=\"/arrow-down.png\" w=\"24px\" h=\"19px\" objectFit={\"contain\"} />\n      </Button>\n      <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"30px\"}>\n        Congratulations!\n      </Text>\n      <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"15px\"}>\n        Your mint was successful.\n      </Text>\n      <Box\n        w=\"249px\"\n        h=\"294px\"\n        display={\"flex\"}\n        border={\"0.5px\"}\n        borderColor={COLLECTOR_BORDER_COLOR}\n        borderRadius=\"8px\"\n        boxShadow=\"xl\"\n        my={{ base: \"41px\", lg: \"51px\" }}\n        flexDir={\"column\"}\n        alignItems=\"center\"\n      >\n        <Box\n          w=\"219px\"\n          h=\"219px\"\n          backgroundColor={APP_PRIMARY_COLOR}\n          display={\"block\"}\n          border={\"0.1px\"}\n          borderRadius=\"8px\"\n          my={\"15px\"}\n        >\n          ?\n        </Box>\n        <Text\n          fontFamily={\"heading\"}\n          fontWeight=\"semibold\"\n          fontSize={\"16px\"}\n          px={\"15px\"}\n          flex={1}\n          w=\"full\"\n          textAlign={\"left\"}\n        ></Text>\n      </Box>\n      <Text fontFamily={\"heading\"} fontWeight=\"medium\" fontSize={\"12px\"}>\n        NFTs will display after\n      </Text>\n      <Text fontFamily={\"heading\"} fontWeight=\"medium\" fontSize={\"12px\"}>\n        Collection is Revealed.\n      </Text>\n    </Box>\n  );\n}\n\nexport default CollectorSuccessCard;\n","import { Box, Button, Image, Text } from \"@chakra-ui/react\";\nimport { APP_PRIMARY_CONTRAST_COLOR } from \"../../theme/colors\";\nimport { StatusCardProps } from \"./types\";\n\nfunction ErrorCard({ onClose }: StatusCardProps) {\n  return (\n    <Box\n      position=\"relative\"\n      borderRadius={\"12px\"}\n      borderWidth={\"1px\"}\n      borderColor={\"transparent\"}\n      w=\"100%\"\n      h=\"100%\"\n      bgColor={APP_PRIMARY_CONTRAST_COLOR}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems={\"center\"}\n      flexDir=\"column\"\n    >\n      <Button\n        backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n        position={\"absolute\"}\n        top={1}\n        right={1}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onClose}\n      >\n        <Image src=\"/Close.png\" w=\"11\" h=\"11\" objectFit={\"contain\"} />\n      </Button>\n      <Image\n        src=\"/collector-error.png\"\n        w=\"180px\"\n        h=\"180px\"\n        objectFit={\"contain\"}\n        mb=\"42px\"\n      />\n      <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"22px\"}>\n        Something\n      </Text>\n      <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"22px\"}>\n        Went Wrong\n      </Text>\n      <Text\n        fontFamily={\"heading\"}\n        fontWeight=\"semibold\"\n        fontSize={\"12px\"}\n        position=\"absolute\"\n        bottom={\"57\"}\n      >\n        Check your Wallet for details.\n      </Text>\n    </Box>\n  );\n}\n\nexport default ErrorCard;\n","import { Box, Text } from \"@chakra-ui/react\";\n\nfunction MintingCard() {\n  return (\n    <Box\n      style={{\n        backgroundImage: `url(/collector-minting.png)`,\n      }}\n      backgroundSize={{ base: \"228px\", lg: \"282px\" }}\n      width={{ base: \"228px\", lg: \"282px\" }}\n      height={{ base: \"228px\", lg: \"282px\" }}\n      display={\"flex\"}\n      justifyContent=\"center\"\n      alignItems={\"center\"}\n    >\n      <Text\n        fontFamily={\"heading\"}\n        fontWeight=\"bold\"\n        fontSize={{ base: \"34px\", lg: \"43px\" }}\n      >\n        minting\n      </Text>\n    </Box>\n  );\n}\n\nexport default MintingCard;\n","import { Box, Button, Image, Text } from \"@chakra-ui/react\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n} from \"../../theme/colors\";\nimport { StatusCardProps } from \"./types\";\n\nfunction WrongNetworkCard({ onClose }: StatusCardProps) {\n  const { uiText } = useUiText();\n  return (\n    <Box\n      borderRadius={\"12px\"}\n      borderWidth={\"1px\"}\n      borderColor={\"transparent\"}\n      w=\"100%\"\n      h=\"100%\"\n      bgColor={APP_PRIMARY_CONTRAST_COLOR}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems={\"center\"}\n      flexDir=\"column\"\n      position=\"relative\"\n    >\n      <Button\n        backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n        position={\"absolute\"}\n        top={1}\n        right={1}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onClose}\n      >\n        <Image src=\"/Close.png\" w=\"11\" h=\"11\" objectFit={\"contain\"} />\n      </Button>\n      <Image\n        src=\"/collector-network-error.png\"\n        w=\"180px\"\n        h=\"180px\"\n        objectFit={\"contain\"}\n        mb=\"42px\"\n      />\n      <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"22px\"}>\n        {uiText.wrongNetwork}\n      </Text>\n      <Text\n        fontFamily={\"heading\"}\n        fontWeight=\"semibold\"\n        fontSize={\"12px\"}\n        mb=\"85px\"\n      >\n        Switch to Ethereum Mainnet.\n      </Text>\n      <Button\n        position=\"absolute\"\n        bottom={\"43\"}\n        fontFamily={\"heading\"}\n        fontWeight=\"bold\"\n        fontSize={\"16px\"}\n        color={APP_PRIMARY_CONTRAST_COLOR}\n        backgroundColor={APP_PRIMARY_COLOR}\n        w=\"205px\"\n        h=\"44px\"\n      >\n        Switch Network\n      </Button>\n    </Box>\n  );\n}\n\nexport default WrongNetworkCard;\n","import { Box, Flex, Image } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { PrimaryButton } from \"../../components/buttons\";\nimport CollectorSuccessCard from \"../../components/cards/CollectorSuccessCard\";\nimport ErrorCard from \"../../components/cards/ErrorCard\";\nimport MintingCard from \"../../components/cards/MintingCard\";\nimport WrongNetworkCard from \"../../components/cards/WrongNetworkCard\";\nimport { getMintPageContent, getNftImagesByIds } from \"../../system/api/api\";\nimport { MintPageContent } from \"../../system/api/types\";\nimport { WalletContext } from \"../../system/context/WalletContext\";\nimport { useContract } from \"../../system/hooks/ethereum/useContract\";\nimport useDeviceDetect from \"../../system/hooks/useDeviceDetect\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  HOMEPAGE_BACKGROUND_COLOR,\n} from \"../../theme/colors\";\n\ntype MintType =\n  | \"CONTENT\"\n  | \"MINTING\"\n  | \"SUCCESS\"\n  | \"ERROR\"\n  | \"WRONG_NETWORK\"\n  | \"UPDATED\";\n\nfunction Mint() {\n  const { isMobile } = useDeviceDetect();\n  const [type, setType] = useState<MintType>(\"CONTENT\");\n  const isMobileSuccess = isMobile && type === \"SUCCESS\";\n  const { address } = useParams();\n  const {\n    mintToken,\n    saleIsActive,\n    transactionPending,\n    transactionUnSuccessful,\n    transactionSuccessful,\n    resetTransactionState,\n    contract,\n  } = useContract(address);\n\n  const { validation } = useContext(WalletContext);\n\n  const { uiText } = useUiText();\n  const [collection, setCollection] = useState<MintPageContent>();\n\n  const handleMint = () => {\n    mintToken().catch(() => {\n      setType(\"ERROR\");\n    });\n  };\n\n  const handleCloseNotification = () => {\n    setType(\"CONTENT\");\n    resetTransactionState();\n  };\n\n  const getNftImage = async () => {\n    let id;\n    await contract\n      ?.totalSupply()\n      .then((s: number) => {\n        id = s - 1;\n      })\n      .catch((err: any) => {\n        console.log(err);\n      });\n\n    const isOwner = await contract?.ownerOf(id);\n    if (isOwner) {\n      getNftImagesByIds(address || \"\", [id || \"\"], validation).then((i: any) =>\n        console.log(i)\n      );\n    }\n  };\n\n  useEffect(() => {\n    getMintPageContent(address || \"\")\n      .then((collection: MintPageContent) => {\n        setCollection(collection);\n      })\n      .catch((err) => {\n        console.log(\"could not find that collection\");\n      });\n  }, [address]);\n\n  useEffect(() => {\n    if (transactionPending) {\n      setType(\"MINTING\");\n    }\n    if (transactionUnSuccessful) {\n      setType(\"ERROR\");\n    }\n    if (transactionSuccessful) {\n      getNftImage();\n      setType(\"SUCCESS\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transactionPending, transactionUnSuccessful, transactionSuccessful]);\n\n  const renderContent = () => {\n    switch (type) {\n      case \"ERROR\":\n        return <ErrorCard onClose={handleCloseNotification} />;\n      case \"WRONG_NETWORK\":\n        return <WrongNetworkCard onClose={handleCloseNotification} />;\n      case \"MINTING\":\n        return <MintingCard />;\n      case \"SUCCESS\":\n        return <CollectorSuccessCard onClose={handleCloseNotification} />;\n    }\n  };\n\n  return type === \"CONTENT\" ? (\n    <Flex\n      bgColor={`rgb(147, 147, 147, 0.1)`}\n      w=\"full\"\n      h={`${window.innerHeight - 160}px`}\n      position={\"relative\"}\n    >\n      {collection?.mintPageDesktopImageUrl &&\n      collection?.mintPageMobileImageUrl ? (\n        <Image\n          bg=\"#F6F6F6\"\n          src={\n            isMobile\n              ? collection?.mintPageMobileImageUrl\n              : collection?.mintPageDesktopImageUrl\n          }\n          minW=\"screen\"\n          objectFit=\"contain\"\n          margin={\"auto\"}\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n        />\n      ) : (\n        <Image\n          bg=\"#F6F6F6\"\n          src={\"/image-placeholder.png\"}\n          w=\"65px\"\n          h=\"65px\"\n          objectFit=\"contain\"\n          margin={\"auto\"}\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n        />\n      )}\n\n      <PrimaryButton\n        position={\"absolute\"}\n        bottom={isMobile ? 8 : 20}\n        disabled={!saleIsActive}\n        left={0}\n        right={0}\n        margin={\"auto\"}\n        text={uiText.mintNow}\n        onClick={() => handleMint()}\n        fontWeight=\"bold\"\n        bgColor={HOMEPAGE_BACKGROUND_COLOR}\n        color={APP_PRIMARY_CONTRAST_COLOR}\n        w=\"238px\"\n        h=\"58px\"\n        _hover={{ opacity: 0.9 }}\n      />\n    </Flex>\n  ) : (\n    <>\n      <Box\n        display={\"flex\"}\n        position={\"absolute\"}\n        top={20}\n        bottom={0}\n        w=\"full\"\n        bgColor={APP_PRIMARY_COLOR}\n        justifyContent=\"center\"\n        alignItems={isMobileSuccess ? \"end\" : \"center\"}\n      >\n        <Box\n          width={isMobileSuccess ? \"100vw\" : { base: \"318px\", lg: \"352px\" }}\n          height={isMobileSuccess ? \"85vh\" : { base: \"544px\", lg: \"600px\" }}\n          display=\"flex\"\n          justifyContent={\"center\"}\n          alignItems=\"center\"\n        >\n          {renderContent()}\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default Mint;\n","import { Box, Button, Image, Text } from \"@chakra-ui/react\";\nimport {\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n} from \"../../theme/colors\";\nimport { StatusCardProps } from \"./types\";\n\nfunction UpdatedCollectionCard({\n  onClose,\n  onViewMintPage,\n}: StatusCardProps & { onViewMintPage: () => void }) {\n  return (\n    <Box\n      borderRadius={\"12px\"}\n      borderWidth={\"1px\"}\n      borderColor={\"transparent\"}\n      w=\"100%\"\n      h=\"100%\"\n      bgColor={APP_PRIMARY_CONTRAST_COLOR}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems={\"center\"}\n      flexDir=\"column\"\n      position=\"relative\"\n    >\n      <Button\n        backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n        position={\"absolute\"}\n        top={1}\n        right={1}\n        _hover={{ backgroundColor: \"transparent\" }}\n        onClick={onClose}\n      >\n        <Image src=\"/Close.png\" w=\"11\" h=\"11\" objectFit={\"contain\"} />\n      </Button>\n      <Image\n        src=\"/collector-success.png\"\n        w=\"180px\"\n        h=\"180px\"\n        objectFit={\"contain\"}\n        mb=\"42px\"\n      />\n      <Text\n        fontFamily={\"heading\"}\n        fontWeight=\"semibold\"\n        fontSize={\"22px\"}\n        mb={\"78px\"}\n      >\n        Mint Page Updated\n      </Text>\n\n      <Button\n        position={\"absolute\"}\n        fontFamily={\"heading\"}\n        fontWeight=\"bold\"\n        fontSize={\"16px\"}\n        color={APP_PRIMARY_CONTRAST_COLOR}\n        backgroundColor={APP_PRIMARY_COLOR}\n        w=\"205px\"\n        h=\"44px\"\n        bottom={\"43\"}\n        onClick={onViewMintPage}\n      >\n        View Mint Page\n      </Button>\n    </Box>\n  );\n}\n\nexport default UpdatedCollectionCard;\n","import {\n  ModalCloseButton,\n  ModalContent,\n  Modal,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport UpdatedCollectionCard from \"../../../components/cards/UpdatedCollectionCard\";\nimport { APP_PRIMARY_CONTRAST_COLOR } from \"../../../theme/colors\";\n\nexport const UpdatedNotificationModal = ({\n  clearStatus,\n  onViewMintPage,\n}: {\n  clearStatus: () => void;\n  onViewMintPage: () => void;\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleClose = () => {\n    clearStatus();\n    onClose();\n  };\n\n  React.useEffect(() => {\n    onOpen();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={handleClose} scrollBehavior=\"inside\">\n        <ModalOverlay />\n        <ModalContent mb={0} h=\"86vh\">\n          <ModalCloseButton\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            onClick={handleClose}\n          />\n          <UpdatedCollectionCard\n            onClose={handleClose}\n            onViewMintPage={onViewMintPage}\n          />\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import {\n  ModalCloseButton,\n  ModalContent,\n  Modal,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ErrorCard from \"../../../components/cards/ErrorCard\";\nimport { APP_PRIMARY_CONTRAST_COLOR } from \"../../../theme/colors\";\n\nexport const ErrorNotificationModal = ({\n  clearStatus,\n}: {\n  clearStatus: () => void;\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  React.useEffect(() => {\n    onOpen();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClose = () => {\n    clearStatus();\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={handleClose} scrollBehavior=\"inside\">\n        <ModalOverlay />\n        <ModalContent mb={0} h=\"86vh\">\n          <ModalCloseButton\n            color={APP_PRIMARY_CONTRAST_COLOR}\n            onClick={handleClose}\n          />\n          <ErrorCard onClose={handleClose} />\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import {\n  Box,\n  Flex,\n  IconButton,\n  Image as ImageChakra,\n  Input,\n  Text,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { FileWithPath } from \"react-dropzone\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { PrimaryButton } from \"../../components/buttons\";\nimport { useUiText } from \"../../system/hooks/useUiText\";\nimport {\n  APP_IMAGE_PLACEHOLDER_COLOR,\n  APP_PRIMARY_COLOR,\n  APP_PRIMARY_CONTRAST_COLOR,\n  APP_TEXT_INACTIVE_COLOR,\n  APP_WARNING_COLOR,\n  DESCRIPTION_COLOR,\n  UPLOAD_BOX_TEXT_COLOR,\n} from \"../../theme/colors\";\n\nimport Dropzone from \"react-dropzone\";\nimport { CustomizeMintProps } from \"./types\";\nimport { Collection } from \"../../system/api/types\";\nimport { getMintPageContent, updateMintPage } from \"../../system/api/api\";\nimport { v4 } from \"uuid\";\nimport { useEthereumWallet } from \"../../system/hooks/ethereum/useEthereumWallet\";\nimport useDeviceDetect from \"../../system/hooks/useDeviceDetect\";\nimport { UpdatedNotificationModal } from \"../Modals/UpdatedNotificationModal/UpdatedNotificationModal\";\nimport { ErrorNotificationModal } from \"../Modals/ErrorNotificationModal/ErrorNotificationModal\";\n\nfunction CustomizeMint() {\n  const { uiText } = useUiText();\n  let location = useLocation();\n  const { sign, account } = useEthereumWallet();\n  const props: CustomizeMintProps = location.state;\n  let navigate = useNavigate();\n  const { address } = useParams();\n\n  const { isBigScreen } = useDeviceDetect();\n\n  const [copyButtonTooltip, setCopyButtonTooltip] = useState<string>(\n    uiText.copyButtonTooltip\n  );\n\n  const [desktopImage, setDesktopImage] = useState<FileWithPath>(null as any);\n  const [mobileImage, setMobileImage] = useState<FileWithPath>(null as any);\n  const [discord, setDiscord] = useState(\"\");\n  const [instagram, setInstagram] = useState(\"\");\n  const [twitter, setTwitter] = useState(\"\");\n  const [opensea, setOpensea] = useState(\"\");\n  // const [telegram, setTelegram] = useState(\"\"); // TODO - hook this up\n  const [mintLink, setMintLink] = useState(\"\");\n  const [collection, setCollection] = useState<Collection>();\n  const [status, setStatus] = useState<\"SUCCESS\" | \"ERROR\" | \"\">(\"\");\n\n  useEffect(() => {\n    if (collection) {\n      setMintLink(\"https://omakasea.io/mint/\" + collection.contractAddress);\n    }\n  }, [collection]);\n\n  useEffect(() => {\n    if (!props) {\n      navigate(\"/\", { replace: true });\n    }\n    if (props && props.collection) {\n      getMintPageContent(props.collection.contractAddress).then(\n        (collection) => {\n          setCollection(collection);\n        }\n      );\n      console.log(collection);\n\n      setDiscord(collection?.discord || \"\");\n      setInstagram(collection?.instagram || \"\");\n      setTwitter(collection?.twitter || \"\");\n      setOpensea(collection?.opensea || \"\");\n    }\n  }, [props, navigate]);\n\n  const handleCopy = () => {\n    setCopyButtonTooltip(uiText.copyButtonSuccessTooltip);\n    setTimeout(() => {\n      setCopyButtonTooltip(uiText.copyButtonTooltip);\n    }, 5000);\n  };\n\n  const signMessage = async () => {\n    const id = v4();\n    const message = id;\n    const result = await sign(account, message, \"null\");\n    return {\n      message,\n      result,\n      id,\n    };\n  };\n\n  const uploadPageData = (res: any) => {\n    let formData = new FormData();\n\n    formData.append(\"validation\", JSON.stringify(res));\n    formData.append(\"contractAddress\", collection?.contractAddress || \"\");\n    formData.append(\n      \"socialLinks\",\n      JSON.stringify({ twitter, discord, instagram, opensea, telegram: \"\" })\n    );\n    formData.append(\"desktopImage\", desktopImage);\n    formData.append(\"mobileImage\", mobileImage);\n\n    const onSuccess = () => {\n      setStatus(\"SUCCESS\");\n    };\n\n    const onFailure = () => {\n      setStatus(\"ERROR\");\n    };\n\n    updateMintPage(formData, onSuccess, onFailure);\n  };\n\n  const handleUploadMintPage = async () => {\n    await signMessage()\n      .then(async ({ message, result, id }) => {\n        uploadPageData({\n          message,\n          result,\n          id,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        return;\n      });\n  };\n\n  const handleViewMintPage = () => {\n    navigate(`/mint/${address}`);\n  };\n\n  return (\n    <Box flex={1} pt=\"74px\" pb=\"136px\" mx={isBigScreen ? \"25em\" : \"191px\"}>\n      {status === \"SUCCESS\" && (\n        <UpdatedNotificationModal\n          clearStatus={() => setStatus(\"\")}\n          onViewMintPage={handleViewMintPage}\n        />\n      )}\n      {status === \"ERROR\" && (\n        <ErrorNotificationModal clearStatus={() => setStatus(\"\")} />\n      )}\n      <Flex\n        flexDir={\"row\"}\n        justifyContent=\"space-between\"\n        alignItems={\"center\"}\n      >\n        <Text fontFamily={\"heading\"} fontWeight=\"bold\" fontSize={\"32px\"}>\n          {uiText.customizeMintTitle}\n        </Text>\n        <Flex flexDir={\"column\"} alignItems={\"start\"}>\n          <Text\n            fontFamily={\"body\"}\n            fontSize=\"12px\"\n            mb=\"12px\"\n            color={DESCRIPTION_COLOR}\n          >\n            {uiText.customizeMintCollectionLink}\n          </Text>\n          <Flex>\n            <Text\n              fontFamily={\"heading\"}\n              fontWeight=\"bold\"\n              fontSize={\"18px\"}\n              mr=\"23px\"\n              w=\"320px\"\n              overflow={\"hidden\"}\n              whiteSpace={\"nowrap\"}\n              textOverflow={\"ellipsis\"}\n            >\n              {mintLink}\n            </Text>\n            <Tooltip\n              label={copyButtonTooltip}\n              closeOnClick={false}\n              arrow\n              shouldWrapChildren\n            >\n              <CopyToClipboard text={mintLink} onCopy={handleCopy}>\n                <IconButton\n                  mt=\"-7px\"\n                  bgColor={APP_PRIMARY_CONTRAST_COLOR}\n                  aria-label=\"button\"\n                  icon={<MdContentCopy />}\n                />\n              </CopyToClipboard>\n            </Tooltip>\n          </Flex>\n        </Flex>\n      </Flex>\n\n      <Flex mt=\"77px\" flexDir={\"column\"} alignItems=\"start\">\n        <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"24px\"}>\n          {uiText.customizeMintBannerTitle}\n        </Text>\n        <Text\n          fontFamily={\"body\"}\n          fontSize={\"16px\"}\n          color={APP_TEXT_INACTIVE_COLOR}\n        >\n          {uiText.customizeMintBannerDescription}\n        </Text>\n      </Flex>\n\n      <Flex flexDir={\"row\"} justifyContent=\"space-between\" mt=\"60px\">\n        <Flex flexDir={\"column\"}>\n          <Flex alignItems={\"center\"} flexDir=\"row\" mb=\"20px\">\n            <Text\n              fontFamily={\"heading\"}\n              fontSize=\"18px\"\n              fontWeight={\"medium\"}\n              mr=\"8px\"\n            >\n              {uiText.customizeMintDesktopTitle}\n            </Text>\n            <Text\n              fontFamily={\"body\"}\n              fontSize=\"11px\"\n              color={APP_TEXT_INACTIVE_COLOR}\n            >\n              {uiText.customizeMintDesktopDescription}\n            </Text>\n          </Flex>\n          <Dropzone\n            onDrop={(acceptedFiles) => {\n              setDesktopImage(acceptedFiles[0]);\n            }}\n            multiple={false}\n            accept=\"image/*\"\n            maxSize={10485760}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <Box\n                w=\"650px\"\n                h=\"366px\"\n                backgroundColor=\"rgba(147,147,147,0.1)\"\n                position={\"relative\"}\n                display=\"flex\"\n                justifyContent={\"center\"}\n                alignItems=\"center\"\n                cursor={\"pointer\"}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                {!desktopImage && !collection?.mintPageDesktopImageUrl ? (\n                  <>\n                    <Flex flexDir={\"column\"} alignItems=\"center\" mr=\"10px\">\n                      <ImageChakra\n                        src=\"/add-image.png\"\n                        w=\"35px\"\n                        h=\"35px\"\n                        mb=\"14px\"\n                        opacity={0.5}\n                      />\n                      <Text\n                        fontFamily={\"body\"}\n                        fontWeight=\"semibold\"\n                        fontSize={\"11px\"}\n                        color={UPLOAD_BOX_TEXT_COLOR}\n                      >\n                        {uiText.customizeMintBoxDescription}\n                      </Text>\n                    </Flex>\n                    <Box\n                      position={\"absolute\"}\n                      bottom={\"74px\"}\n                      left={0}\n                      right={0}\n                      margin={`0 auto`}\n                      w=\"116px\"\n                      h=\"36px\"\n                      backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n                      backgroundImage={`url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='red' stroke-width='4' stroke-dasharray='6%2c 10'  stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\")`}\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems={\"center\"}\n                    >\n                      <Text\n                        fontFamily={\"heading\"}\n                        fontWeight=\"semibold\"\n                        fontSize={\"10px\"}\n                        color={APP_WARNING_COLOR}\n                      >\n                        {uiText.customizeMintButtonArea}\n                      </Text>\n                    </Box>\n                  </>\n                ) : (\n                  <ImageChakra\n                    w=\"650px\"\n                    h=\"366px\"\n                    src={\n                      desktopImage\n                        ? URL.createObjectURL(desktopImage)\n                        : collection?.mintPageDesktopImageUrl\n                    }\n                    objectFit={\"contain\"}\n                  />\n                )}\n              </Box>\n            )}\n          </Dropzone>\n        </Flex>\n\n        <Flex flexDir={\"column\"}>\n          <Flex alignItems={\"center\"} flexDir=\"row\" mb=\"20px\">\n            <Text\n              fontFamily={\"heading\"}\n              fontSize=\"18px\"\n              fontWeight={\"medium\"}\n              mr=\"8px\"\n            >\n              {uiText.customizeMintMobileTitle}\n            </Text>\n            <Text\n              fontFamily={\"body\"}\n              fontSize=\"11px\"\n              color={APP_TEXT_INACTIVE_COLOR}\n            >\n              {uiText.customizeMintMobileDescription}\n            </Text>\n          </Flex>\n          <Dropzone\n            onDrop={(acceptedFiles) => {\n              setMobileImage(acceptedFiles[0]);\n            }}\n            multiple={false}\n            accept=\"image/*\"\n            maxSize={10485760}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <Box\n                w=\"240px\"\n                h=\"366px\"\n                backgroundColor=\"rgba(147,147,147,0.1)\"\n                position={\"relative\"}\n                display=\"flex\"\n                justifyContent={\"center\"}\n                alignItems=\"center\"\n                cursor={\"pointer\"}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n\n                {!mobileImage && !collection?.mintPageMobileImageUrl ? (\n                  <>\n                    <Flex flexDir={\"column\"} alignItems=\"center\">\n                      <ImageChakra\n                        src=\"/add-image.png\"\n                        w=\"35px\"\n                        h=\"35px\"\n                        mb=\"14px\"\n                        opacity={0.5}\n                      />\n                      <Text\n                        fontFamily={\"body\"}\n                        fontWeight=\"semibold\"\n                        fontSize={\"11px\"}\n                        color={UPLOAD_BOX_TEXT_COLOR}\n                      >\n                        {uiText.customizeMintBoxDescription}\n                      </Text>\n                    </Flex>\n                    <Box\n                      position={\"absolute\"}\n                      bottom={\"74px\"}\n                      left={0}\n                      right={0}\n                      margin={`0 auto`}\n                      w=\"116px\"\n                      h=\"36px\"\n                      backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n                      backgroundImage={`url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='red' stroke-width='4' stroke-dasharray='6%2c 10'  stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\")`}\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems={\"center\"}\n                    >\n                      <Text\n                        fontFamily={\"heading\"}\n                        fontWeight=\"semibold\"\n                        fontSize={\"10px\"}\n                        color={APP_WARNING_COLOR}\n                      >\n                        {uiText.customizeMintButtonArea}\n                      </Text>\n                    </Box>\n                  </>\n                ) : (\n                  <ImageChakra\n                    w=\"240px\"\n                    h=\"366px\"\n                    src={\n                      mobileImage\n                        ? URL.createObjectURL(mobileImage)\n                        : collection?.mintPageMobileImageUrl\n                    }\n                    objectFit={\"cover\"}\n                  />\n                )}\n              </Box>\n            )}\n          </Dropzone>\n        </Flex>\n      </Flex>\n\n      <Flex mt=\"77px\" flexDir={\"column\"} alignItems=\"start\">\n        <Text fontFamily={\"heading\"} fontWeight=\"semibold\" fontSize={\"24px\"}>\n          {uiText.customizeMintLinks}\n        </Text>\n\n        <Flex w=\"full\" mt=\"48px\">\n          <Flex flex={1} flexDir={\"column\"} alignItems=\"start\" mr={\"64px\"}>\n            <Flex alignItems={\"center\"}>\n              <ImageChakra\n                src=\"/discord-black.png\"\n                w=\"14px\"\n                h=\"14px\"\n                mr=\"7px\"\n              />\n              <Text\n                fontFamily={\"heading\"}\n                fontWeight=\"medium\"\n                fontSize={\"15px\"}\n              >\n                {uiText.discord}\n              </Text>\n            </Flex>\n            <Input\n              onChange={(e) => setDiscord(e.target.value)}\n              defaultValue={discord}\n              w=\"full\"\n              borderColor={APP_TEXT_INACTIVE_COLOR}\n            />\n          </Flex>\n          <Flex flex={1} flexDir={\"column\"} alignItems=\"start\">\n            <Flex alignItems={\"center\"}>\n              <ImageChakra\n                src=\"/instagram-black.png\"\n                w=\"14px\"\n                h=\"14px\"\n                mr=\"7px\"\n              />\n              <Text\n                fontFamily={\"heading\"}\n                fontWeight=\"medium\"\n                fontSize={\"15px\"}\n              >\n                {uiText.instagram}\n              </Text>\n            </Flex>\n            <Input\n              onChange={(e) => setInstagram(e.target.value)}\n              defaultValue={instagram}\n              w=\"full\"\n              borderColor={APP_TEXT_INACTIVE_COLOR}\n            />\n          </Flex>\n        </Flex>\n\n        <Flex w=\"full\" mt={\"22px\"}>\n          <Flex flex={1} flexDir={\"column\"} alignItems=\"start\" mr={\"64px\"}>\n            <Flex alignItems={\"center\"}>\n              <ImageChakra\n                src=\"/twitter-black.png\"\n                w=\"14px\"\n                h=\"14px\"\n                mr=\"7px\"\n              />\n              <Text\n                fontFamily={\"heading\"}\n                fontWeight=\"medium\"\n                fontSize={\"15px\"}\n              >\n                {uiText.twitter}\n              </Text>\n            </Flex>\n            <Input\n              onChange={(e) => setTwitter(e.target.value)}\n              w=\"full\"\n              borderColor={APP_TEXT_INACTIVE_COLOR}\n              defaultValue={twitter}\n            />\n          </Flex>\n          <Flex flex={1} flexDir={\"column\"} alignItems=\"start\">\n            <Flex alignItems={\"center\"}>\n              <ImageChakra\n                src=\"/opensea-black.png\"\n                w=\"14px\"\n                h=\"14px\"\n                mr=\"7px\"\n              />\n              <Text\n                fontFamily={\"heading\"}\n                fontWeight=\"medium\"\n                fontSize={\"15px\"}\n              >\n                {uiText.opensea}\n              </Text>\n            </Flex>\n            <Input\n              onChange={(e) => setOpensea(e.target.value)}\n              w=\"full\"\n              borderColor={APP_TEXT_INACTIVE_COLOR}\n              defaultValue={opensea}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n      <Flex justifyContent={\"center\"} mt={\"110px\"}>\n        <PrimaryButton\n          w=\"226px\"\n          h=\"54px\"\n          fontFamily={\"heading\"}\n          fontWeight={\"bold\"}\n          fontSize={\"14px\"}\n          text={uiText.saveDetails}\n          onClick={() => handleUploadMintPage()}\n        />\n        <PrimaryButton\n          w=\"226px\"\n          h=\"54px\"\n          fontFamily={\"heading\"}\n          fontWeight={\"bold\"}\n          fontSize={\"14px\"}\n          borderWidth={\"1px\"}\n          ml={\"30px\"}\n          _hover={{\n            opacity: 0.8,\n            backgroundColor: APP_IMAGE_PLACEHOLDER_COLOR,\n          }}\n          borderColor={APP_PRIMARY_COLOR}\n          backgroundColor={APP_PRIMARY_CONTRAST_COLOR}\n          text={uiText.viewMintPage}\n          onClick={() => window.open(`/mint/${address}`, \"_blank\")?.focus()}\n        />\n      </Flex>\n    </Box>\n  );\n}\n\nexport default CustomizeMint;\n","import \"./App.css\";\nimport { AppContainer } from \"./layout/AppContainer/AppContainer\";\nimport { HomePage } from \"./pages/HomePage/HomePage\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { LandingPage } from \"./pages/LandingPage/LandingPage\";\nimport ReviewCollection from \"./pages/ReviewCollection/ReviewCollection\";\nimport CreateCollection from \"./pages/CreateCollection/CreateCollection\";\nimport { KitchenPage } from \"./pages/KitchenPage/KitchenPage\";\nimport SuccessCollection from \"./pages/SuccessCollection/SuccessCollection\";\nimport MobileRestriction from \"./layout/MobileRestriction/MobileRestriction\";\nimport { ReceiptRestriction } from \"./layout/ReceiptRestriction/ReceiptRestriction\";\nimport ScrollToTop from \"./layout/ScrollToTop/ScrollToTop\";\nimport Mint from \"./pages/Mint/Mint\";\nimport CustomizeMint from \"./pages/CustomizeMint/CustomizeMint\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ScrollToTop>\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route\n            path=\"/home\"\n            element={\n              <MobileRestriction>\n                <AppContainer>\n                  <HomePage />\n                </AppContainer>\n              </MobileRestriction>\n            }\n          />\n          <Route\n            path=\"/kitchen\"\n            element={\n              <MobileRestriction>\n                <AppContainer>\n                  <KitchenPage />\n                </AppContainer>\n              </MobileRestriction>\n            }\n          />\n          <Route\n            path=\"/create-collection\"\n            element={\n              <MobileRestriction>\n                <ReceiptRestriction>\n                  <AppContainer>\n                    <CreateCollection />\n                  </AppContainer>\n                </ReceiptRestriction>\n              </MobileRestriction>\n            }\n          />\n          <Route\n            path=\"/review-collection\"\n            element={\n              <MobileRestriction>\n                <AppContainer>\n                  <ReviewCollection />\n                </AppContainer>\n              </MobileRestriction>\n            }\n          />\n          <Route\n            path=\"/success-collection\"\n            element={\n              <MobileRestriction>\n                <AppContainer>\n                  <SuccessCollection />\n                </AppContainer>\n              </MobileRestriction>\n            }\n          />\n          <Route\n            path=\"/mint/:address\"\n            element={\n              <AppContainer>\n                <Mint />\n              </AppContainer>\n            }\n          >\n            <Route\n              path=\"/:address\"\n              element={\n                <AppContainer>\n                  <Mint />\n                </AppContainer>\n              }\n            />\n          </Route>\n          <Route\n            path=\"/customize\"\n            element={\n              <MobileRestriction>\n                <AppContainer>\n                  <CustomizeMint />\n                </AppContainer>\n              </MobileRestriction>\n            }\n          >\n            <Route\n              path=\"/:address\"\n              element={\n                <MobileRestriction>\n                  <AppContainer>\n                    <CustomizeMint />\n                  </AppContainer>\n                </MobileRestriction>\n              }\n            />\n          </Route>\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </ScrollToTop>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Global } from \"@emotion/react\";\n\nconst Fonts = () => (\n  <Global\n    styles={`\n      @font-face {\n        font-family: 'Aeonik';\n        src: url('/Aeonik-Regular.otf') format('opentype');\n      }`}\n  />\n);\n\nexport default Fonts;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport { theme } from \"./theme/theme\";\nimport { WalletProvider } from \"./system/context/WalletContext\";\nimport { ModalProvider } from \"./system/context/ModalContext\";\nimport { ContractProvider } from \"./system/context/ContractContext\";\nimport \"dotenv/config\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"@fontsource/montserrat/400.css\";\nimport \"@fontsource/open-sans/400.css\";\nimport Fonts from \"./theme/Fonts\";\nimport { CollectorProvider } from \"./system/context/CollectorContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <Fonts />\n      <WalletProvider>\n        <ContractProvider>\n          <BrowserRouter>\n            <CollectorProvider>\n              <ModalProvider>\n                <ColorModeScript\n                  initialColorMode={theme.config.initialColorMode}\n                />\n                <App />\n              </ModalProvider>\n            </CollectorProvider>\n          </BrowserRouter>\n        </ContractProvider>\n      </WalletProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}