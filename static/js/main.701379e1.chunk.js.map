{"version":3,"sources":["features/player/walkSprite.png","data/map/1/index.js","features/map/map-tile.component.js","store/constants.js","features/map/map-row.component.js","features/map/map.component.js","features/map/map.container.js","features/player/player.reducer.js","features/map/map.reducer.js","store/store.js","features/player/player.component.jsx","features/player/player.container.js","features/player/player-movement.js","features/world/world.component.js","features/world/world.container.js","features/world/world.actions.js","App.js","index.js"],"names":["module","exports","tiles","getTileSprite","type","MapTile","props","className","value","style","height","width","MapRow","map","tile","i","key","Map","backgroundColor","margin","border","row","MapContiner","connect","state","initialState","position","spriteLocation","walkIndex","playerReducer","action","payload","mapReducer","rootReducer","combineReducers","player","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Player","top","left","backgroundImage","walkSprite","backgroundPosition","PlayerContainer","getSpriteLocation","direction","getWalkIndex","getState","attemptMove","newPos","prevPos","getNewPosition","MAP_WIDTH","MAP_HEIGHT","observeBoundary","console","log","y","x","observeGameObjects","dispatch","dispatchMove","addEventListener","e","keyCode","handleKeyDown","handleMovement","World","useEffect","addTiles","WorldContainer","App","ReactDOM","render","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,wC,mMCA9BC,EAAQ,CACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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","file":"static/js/main.701379e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/walkSprite.8386b49b.png\";","export const tiles = [\r\n  [0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n];\r\n","import React from \"react\";\r\nimport { SPRITE_HEIGHT, SPRITE_WIDTH } from \"../../store/constants\";\r\nimport \"./map.css\";\r\n\r\nfunction getTileSprite(type) {\r\n  switch (type) {\r\n    case 0:\r\n      return \"grass\";\r\n    case 5:\r\n      return \"rock\";\r\n    case 6:\r\n      return \"tree\";\r\n  }\r\n}\r\n\r\nfunction MapTile(props) {\r\n  return (\r\n    <div\r\n      className={`tile ${getTileSprite(props.value)}`}\r\n      style={{\r\n        height: SPRITE_HEIGHT,\r\n        width: SPRITE_WIDTH,\r\n      }}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default MapTile;\r\n","export const SPRITE_WIDTH = 30;\r\nexport const SPRITE_HEIGHT = 60;\r\nexport const MAP_HEIGHT = SPRITE_HEIGHT * 10;\r\nexport const MAP_WIDTH = SPRITE_WIDTH * 40;\r\n","import React from \"react\";\r\nimport MapTile from \"./map-tile.component\";\r\n\r\nfunction MapRow(props) {\r\n  return (\r\n    <div className=\"row\">\r\n      {props.tiles.map((tile, i) => (\r\n        <MapTile key={i} value={tile} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapRow;\r\n","import React from \"react\";\r\nimport MapRow from \"./map-row.component\";\r\n\r\n/**\r\n * Renders the game map background and objects.\r\n *\r\n * @param props    The props to be used by the component.\r\n */\r\nconst Map = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"1200px\",\r\n        height: \"600px\",\r\n        backgroundColor: \"#53821b\",\r\n        margin: \"auto\",\r\n        border: \"solid 2px white\",\r\n      }}\r\n    >\r\n      {props.tiles && props.tiles.map((row, i) => <MapRow key={i} tiles={row} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import { connect } from \"react-redux\";\r\nimport Map from \"./map.component\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tiles: state.map.tiles,\r\n});\r\n\r\nexport const MapContiner = connect(mapStateToProps)(Map);\r\n","const initialState = {\r\n  position: [0, 0],\r\n  spriteLocation: \"0px 0px\",\r\n  walkIndex: 0,\r\n};\r\n\r\nconst playerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"MOVE_PLAYER\":\r\n      return {\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playerReducer;\r\n","const initialState = {\r\n  position: [0, 0],\r\n};\r\n\r\nconst mapReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TILE\":\r\n      return {\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mapReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport playerReducer from \"../features/player/player.reducer\";\r\nimport mapReducer from \"../features/map/map.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerReducer,\r\n  map: mapReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport walkSprite from \"./walkSprite.png\";\r\n\r\n/**\r\n * Renders the game sprite (player).\r\n *\r\n * @param props    The props to be used by the component.\r\n */\r\nconst Player = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: props.position[1],\r\n        left: props.position[0],\r\n        backgroundImage: `url(${walkSprite})`,\r\n        backgroundPosition: props.spriteLocation,\r\n        width: \"30px\",\r\n        height: \"60px\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import { connect } from \"react-redux\";\r\nimport { handleMovement } from \"./player-movement\";\r\nimport Player from \"./player.component\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state.player,\r\n  };\r\n};\r\n\r\nexport const PlayerContainer = connect(mapStateToProps)(handleMovement(Player));\r\n","import { MAP_HEIGHT, MAP_WIDTH, SPRITE_HEIGHT, SPRITE_WIDTH } from \"../../store/constants\";\r\nimport store from \"../../store/store\";\r\n\r\n/**\r\n * Controls player movement within the game.\r\n *\r\n * @param player    The player component.\r\n */\r\nexport const handleMovement = (player) => {\r\n  const getNewPosition = (prevPos, direction) => {\r\n    switch (direction) {\r\n      case \"WEST\":\r\n        return [prevPos[0] - SPRITE_WIDTH, prevPos[1]];\r\n      case \"EAST\":\r\n        return [prevPos[0] + SPRITE_WIDTH, prevPos[1]];\r\n      case \"NORTH\":\r\n        return [prevPos[0], prevPos[1] - SPRITE_HEIGHT];\r\n      case \"SOUTH\":\r\n        return [prevPos[0], prevPos[1] + SPRITE_HEIGHT];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the offset in px for the sprite image in order to simulate player animation.\r\n   *\r\n   * @param direction\r\n   * @param walkIndex\r\n   */\r\n  const getSpriteLocation = (direction, walkIndex) => {\r\n    switch (direction) {\r\n      case \"EAST\":\r\n        return `-${walkIndex * 31}px -124px`;\r\n      case \"WEST\":\r\n        return `-${walkIndex * 31}px -60px`;\r\n      case \"NORTH\":\r\n        return `-${walkIndex * 31}px -194px`;\r\n      case \"SOUTH\":\r\n        return `-${walkIndex * 31}px 0px`;\r\n    }\r\n  };\r\n\r\n  const getWalkIndex = () => {\r\n    const walkIndex = store.getState().player.walkIndex;\r\n    return walkIndex >= 2 ? 0 : walkIndex + 1;\r\n  };\r\n\r\n  /**\r\n   * Checks to see if the new position is within the bounds of the map.\r\n   * Returns new position if within bounds and old position if move would be out of bounds.\r\n   *\r\n   * @param prevPos    The previous position.\r\n   * @param newPos     The new position.\r\n   */\r\n  const observeBoundary = (newPos) => {\r\n    return newPos[0] >= 0 && newPos[0] <= MAP_WIDTH - SPRITE_WIDTH && newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT * 2;\r\n  };\r\n\r\n  /**\r\n   * Checks to see if the new position is within the bounds of the map.\r\n   * Returns new position if within bounds and old position if move would be out of bounds.\r\n   *\r\n   * @param prevPos    The player's previous position.\r\n   * @param newPos     The player's new position.\r\n   */\r\n  const observeGameObjects = (newPos) => {\r\n    const tiles = store.getState().map.tiles;\r\n    console.log(tiles);\r\n    const y = newPos[1] / SPRITE_HEIGHT;\r\n    const x = newPos[0] / SPRITE_WIDTH;\r\n    const nextTile = tiles[y][x];\r\n    return nextTile < 5;\r\n  };\r\n\r\n  /**\r\n   * Dispatches an action to move the player.\r\n   *\r\n   * @param newPos      The player's new position.\r\n   * @param direction   The player's new position.\r\n   */\r\n  const dispatchMove = (direction, newPos) => {\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER\",\r\n      payload: {\r\n        position: newPos,\r\n        direction,\r\n        walkIndex: getWalkIndex(),\r\n        spriteLocation: getSpriteLocation(direction, getWalkIndex()),\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Checks if the new position will observe boundaries and game objects and calls method to move the player.\r\n   *\r\n   * @param direction    The direction of the move (EAST, WEST, NORTH, SOUTH).\r\n   */\r\n  const attemptMove = (direction) => {\r\n    const prevPos = store.getState().player.position;\r\n    const newPos = getNewPosition(prevPos, direction);\r\n\r\n    if (observeBoundary(newPos) && observeGameObjects(newPos)) {\r\n      dispatchMove(direction, newPos);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        return attemptMove(\"WEST\");\r\n      case 38:\r\n        return attemptMove(\"NORTH\");\r\n      case 39:\r\n        return attemptMove(\"EAST\");\r\n      case 40:\r\n        return attemptMove(\"SOUTH\");\r\n      default:\r\n        console.log(e.keyCode);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"keydown\", (e) => {\r\n    handleKeyDown(e);\r\n  });\r\n\r\n  return player;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Map from \"../map/map.component\";\r\nimport { MapContiner } from \"../map/map.container\";\r\nimport { PlayerContainer } from \"../player/player.container\";\r\n\r\nconst World = (props) => {\r\n  useEffect(() => {\r\n    props.addTiles();\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"800px\",\r\n        height: \"400px\",\r\n        margin: \"20px\",\r\n      }}\r\n    >\r\n      <MapContiner />\r\n      <PlayerContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","import { connect } from \"react-redux\";\r\nimport { addTiles } from \"./world.actions\";\r\nimport World from \"./world.component\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTiles: () => dispatch(addTiles()),\r\n});\r\n\r\nexport const WorldContainer = connect(null, mapDispatchToProps)(World);\r\n","import { tiles } from \"../../data/map/1\";\r\n\r\nexport const addTiles = () => {\r\n  return {\r\n    type: \"ADD_TILE\",\r\n    payload: {\r\n      tiles,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { WorldContainer } from \"./features/world/world.container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorldContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"../src/store/store\"\n\nReactDOM.render(\n    <Provider store={store}> <App /></Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}