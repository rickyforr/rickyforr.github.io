{"version":3,"sources":["app/app.actions.ts","communities/community/community.component.tsx","utils/app.utils.ts","communities/communities.component.tsx","header/header.component.tsx","app/app.tsx","index.tsx"],"names":["fetchData","setPending","onSuccess","onFailure","url","a","Axios","get","then","response","data","catch","Community","props","useState","noImage","setNoImage","community","houses","avgPrice","communityId","Array","isArray","length","communityHouses","filter","h","map","c","price","reduce","v","toLocaleString","undefined","maximumFractionDigits","calculateAvgPrice","id","housesInCommunity","calculateHousesInCommunity","className","src","imgUrl","onError","alt","title","name","icon","faHome","Communities","communities","sortedCommunities","sort","b","localeCompare","sortCommunitiesByName","Header","App","setCommunities","setHouses","getCommunitiesPending","setGetCommunitiesPending","getHousesPending","setGetHousesPending","error","setError","loading","useEffect","console","log","data-name","color","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d6eb5f2.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\n/**\r\n * Fetches app data from the api. Calls hooks to update pending, success and failure states.\r\n *\r\n * @param setPending\r\n * @param onSuccess\r\n * @param onFailure\r\n * @param url\r\n */\r\nexport const fetchData = async (\r\n  setPending: (value: React.SetStateAction<boolean>) => void,\r\n  onSuccess: (value: React.SetStateAction<any[]>) => void,\r\n  onFailure: (error: string) => void,\r\n  url: string\r\n) => {\r\n  setPending(true);\r\n  await Axios.get(url)\r\n    .then(function (response) {\r\n      onSuccess(response.data);\r\n      setPending(false);\r\n    })\r\n    .catch(function () {\r\n      onFailure(\"Sorry! There was an error loading data.\");\r\n      setPending(false);\r\n    });\r\n};\r\n","import { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { calculateAvgPrice, calculateHousesInCommunity } from \"../../utils/app.utils\";\r\nimport \"./community.css\";\r\nimport { ICommunity } from \"./community.props.interface\";\r\n\r\n/**\r\n * Renders a single community and its relevant details.\r\n */\r\nconst Community: React.FunctionComponent<ICommunity> = (props) => {\r\n  const [noImage, setNoImage] = useState<boolean>(false);\r\n  const { community, houses } = props;\r\n  const brokenSource = () => {\r\n    setNoImage(true);\r\n  };\r\n  const avgPrice = calculateAvgPrice(props.community.id, houses);\r\n  const housesInCommunity = calculateHousesInCommunity(props.community.id, houses);\r\n\r\n  return (\r\n    <div key={community.id} className=\"community-container\">\r\n      {!noImage ? <img className=\"community-image\" src={community.imgUrl} onError={brokenSource} alt=\"community\"></img> : <div className=\"image-placeholder\" />}\r\n      <div className=\"community-details\">\r\n        <span className=\"community-name\" title={community.name}>\r\n          {community.name}\r\n        </span>\r\n        <div className=\"price-houses-container\">\r\n          <span className=\"community-price\">Avg. Price: {avgPrice ? `$${avgPrice}` : \"NA\"}</span>\r\n          <span>\r\n            <FontAwesomeIcon icon={faHome} className=\"house-icon\" />\r\n            <span className=\"houses-amount\">{housesInCommunity || \"None Found\"}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n","import { Community, House } from \"../communities/communities.props.interface\";\r\n\r\n/**\r\n * Returns the average price of houses in a particular community.\r\n *\r\n * @param communityId\r\n * @param houses\r\n */\r\nexport const calculateAvgPrice = (communityId: string, houses: House[]): string => {\r\n  if (!Array.isArray(houses) || !houses?.length) {\r\n    return \"\";\r\n  }\r\n  const communityHouses = houses.filter((h) => h.communityId === communityId);\r\n  if (!communityHouses.length) {\r\n    return \"\";\r\n  }\r\n  const avgPrice = communityHouses.map((c) => c.price).reduce((a, v) => a + v) / communityHouses.length;\r\n  return avgPrice.toLocaleString(undefined, { maximumFractionDigits: 0 });\r\n};\r\n\r\n/**\r\n * Returns an array of communities sorted by the community name.\r\n *\r\n * @param communities\r\n */\r\nexport const sortCommunitiesByName = (communities: Community[]): Community[] => {\r\n  if (!Array.isArray(communities)) {\r\n    return [];\r\n  }\r\n  return communities.sort((a, b) => a.name.localeCompare(b.name));\r\n};\r\n\r\n/**\r\n * Return the amount of houses in a particular community.\r\n *\r\n * @param communityId\r\n * @param houses\r\n */\r\nexport const calculateHousesInCommunity = (communityId: string, houses: House[]): number => {\r\n  if (!Array.isArray(houses) || !houses.length) {\r\n    return 0;\r\n  }\r\n  const communityHouses = houses.filter((h) => h.communityId === communityId);\r\n  if (!communityHouses.length) {\r\n    return 0;\r\n  }\r\n  return communityHouses.length;\r\n};\r\n","import React from \"react\";\r\nimport { sortCommunitiesByName } from \"../utils/app.utils\";\r\nimport \"./communities.css\";\r\nimport { ICommunities } from \"./communities.props.interface\";\r\nimport Community from \"./community/community.component\";\r\n\r\n/**\r\n * Renders the communities and relevant details\r\n */\r\nconst Communities: React.FunctionComponent<ICommunities> = (props) => {\r\n  const { communities, houses } = props;\r\n  const sortedCommunities = sortCommunitiesByName(communities);\r\n\r\n  return (\r\n    <div className=\"communities-container\">\r\n      {!communities.length && <h3>No Communities to Display</h3>}\r\n      {!!communities.length && sortedCommunities.map((c) => <Community community={c} houses={houses} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Communities;\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\n\r\n/**\r\n * Renders a fixed page header for the application.\r\n */\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"title\">Community App</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"./app.actions\";\nimport \"./app.css\";\nimport Communities from \"../communities/communities.component\";\nimport { Community, House } from \"../communities/communities.props.interface\";\nimport Header from \"../header/header.component\";\nimport Progress from \"react-svg-progress\";\n\n/**\n * Renders the root component for the application.\n */\nfunction App() {\n  const [communities, setCommunities] = useState<Community[]>([]);\n  const [houses, setHouses] = useState<House[]>([]);\n  const [getCommunitiesPending, setGetCommunitiesPending] = useState<boolean>(false);\n  const [getHousesPending, setGetHousesPending] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n  const loading = getCommunitiesPending || getHousesPending;\n\n  useEffect(() => {\n    fetchData(setGetCommunitiesPending, setCommunities, setError, \"https://a18fda49-215e-47d1-9dc6-c6136a04a33a.mock.pstmn.io/communities\");\n    fetchData(setGetHousesPending, setHouses, (error) => console.log(error), \"https://a18fda49-215e-47d1-9dc6-c6136a04a33a.mock.pstmn.io/homes\");\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <Header />\n      {error && (\n        <div data-name=\"error\" className=\"error-notification\">\n          {error}\n        </div>\n      )}\n      {loading && <Progress color=\"#223e6d\" size=\"30px\" />}\n      {!loading && !communities?.length && (\n        <div data-name=\"error\" className=\"error-notification\">\n          {\"No Communities Data\"}\n        </div>\n      )}\n      {!loading && !!communities?.length && <Communities communities={communities} houses={houses} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/app\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}